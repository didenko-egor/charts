{"version":3,"file":"ControlledInputCalendar.js","sources":["../../../src/CalendarV2/InputCalendar/ControlledInputCalendar.tsx"],"sourcesContent":["import 'focus-visible';\nimport React, {\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n  useRef,\n  MouseEvent,\n  FocusEventHandler\n} from 'react';\nimport { CalendarProps } from 'shared/types/calendar';\n\nimport { IconCalendar } from '../../icons';\n\nimport { ForwardedMaskInput } from '../../MaskedInput';\nimport { InputProps } from '../../Input';\nimport { PageCalendar } from '../../../shared/PageCalendar';\nimport { CalendarPage, SelectedDate } from '../../../shared/PageCalendar/types';\nimport { getLocaleOptions } from '../../../shared/PageCalendar/utils';\nimport {\n  checkCurrentInputValid,\n  formatDateToString,\n  getCalendarState,\n  getSelectedDateFromString,\n  stopPropagation,\n  validateDateInput\n} from './utils';\nimport { useBodyScrollLock } from '../hooks/useBodyScrollLock';\nimport { useInputStyles } from '../hooks/useInputStyles';\n\nimport styles from './InputCalendar.module.scss';\n\nconst CALENDAR_ICON = [\n  {\n    icon: <IconCalendar />,\n    disabled: false,\n    onClick: (): void => {}\n  }\n];\n\nexport type ControlledInputCalendarProps = Omit<InputProps & CalendarProps, 'value' | 'onSelectedDateChange'> & {\n  /** Выбранная дата */\n  value?: string;\n\n  /** Страница, на которой открывать календарь */\n  defaultPage?: CalendarPage;\n\n  /** Скрыть выходные? */\n  hideWeekends?: boolean;\n};\n\nexport function ControlledInputCalendar({\n  size,\n  hintMessage,\n  label,\n  labelWidth,\n  id,\n  name,\n  pseudo,\n  disabled,\n  showHint,\n  labelAside,\n  placeholder,\n  onClick,\n  onKeyPress,\n  uncontrolled,\n  onFocus,\n  onBlur,\n  onChange,\n  maxDate,\n  minDate,\n  value,\n  isError,\n  withoutDefaultMinWidth,\n  defaultValue,\n  defaultPage,\n  locale,\n  hideWeekends,\n  fieldName\n}: ControlledInputCalendarProps): JSX.Element {\n  const [calendarPage, setCalendarPage] = useState(getCalendarState(value, defaultValue, defaultPage));\n  const [isInvalid, setIsInvalid] = useState<boolean>(false);\n\n  const calendarValue = useMemo(() => getSelectedDateFromString(value), [value]);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const {\n    positionStyles,\n    focusOnInput\n  } = useInputStyles({\n    labelAside,\n    size,\n    inputRef\n  });\n\n  const targetRef = useRef<HTMLDivElement>(null);\n\n  useBodyScrollLock({ targetRef });\n\n  const localeOptions = useMemo(() => getLocaleOptions(locale, [5, 6]), [locale]);\n\n  const handleSelectedDateChange = useCallback((selectedDate: SelectedDate): void => {\n    setCalendarPage({ date: selectedDate.from, page: CalendarPage.Days });\n\n    if (onChange) {\n      onChange(formatDateToString(selectedDate.from), fieldName);\n    }\n  }, [onChange, fieldName]);\n\n  const handleInputChange = useCallback((newValue: string): void => {\n    if (onChange) {\n      onChange(newValue, fieldName);\n    }\n  }, [onChange, fieldName]);\n\n  /** Отобразить состояние ошибки при потере фокуса */\n  const handleBlur: FocusEventHandler = useCallback(event => {\n    const isValid = value ? validateDateInput(value, minDate, maxDate) : true;\n\n    setIsInvalid(!isValid);\n\n    /** При потере фокуса компонентом, сбросить календарь на выбранную дату */\n    const isFocusWithin = targetRef.current?.contains(event.relatedTarget as Node);\n    if (!isFocusWithin) {\n      const page = calendarValue?.from ? CalendarPage.Days : defaultPage;\n      setCalendarPage(getCalendarState(calendarValue?.from, undefined, page));\n    }\n\n    if (onBlur) onBlur(event);\n  }, [value, minDate, maxDate, calendarValue?.from, onBlur, defaultPage]);\n\n  /** При нажатии на поле ввода - отобразить значение в календаре */\n  const handleInputClick = useCallback((event: MouseEvent) => {\n    if (disabled) return;\n\n    let openAtDate = new Date();\n    let openAtPage = defaultPage;\n\n    if (calendarValue?.from) {\n      // Если календарь уже был открыт на валидной дате, сбросить календарь к дням\n      openAtDate = calendarValue.from;\n      openAtPage = CalendarPage.Days;\n    }\n    setCalendarPage(getCalendarState(openAtDate, defaultValue, openAtPage));\n\n    if (onClick) onClick(event);\n  }, [disabled, defaultPage, calendarValue?.from, defaultValue, onClick]);\n\n  /** Обновление состояния при передаче значения снаружи */\n  useEffect(() => {\n    let isValid = false;\n    if (value) {\n      isValid = validateDateInput(value, minDate, maxDate);\n\n      const isValidWithLength = checkCurrentInputValid(value, isValid);\n\n      setIsInvalid(!isValidWithLength);\n    } else {\n      setIsInvalid(false);\n    }\n  }, [maxDate, minDate, value]);\n\n  return (\n    <div\n      className={ styles.wrapper }\n      role=\"presentation\"\n      ref={ targetRef }\n    >\n      <ForwardedMaskInput\n        placeholderMask=\"дд.мм.гггг\"\n        name={ name }\n        value={ value }\n        onChange={ handleInputChange }\n        placeholder={ placeholder }\n        isError={ isError || isInvalid }\n        icons={ CALENDAR_ICON }\n        size={ size }\n        hintMessage={ hintMessage }\n        label={ label }\n        labelWidth={ labelWidth }\n        id={ id }\n        pseudo={ pseudo }\n        disabled={ disabled }\n        showHint={ showHint }\n        labelAside={ labelAside }\n        inputRef={ inputRef }\n        onClick={ handleInputClick }\n        onKeyPress={ onKeyPress }\n        uncontrolled={ uncontrolled }\n        onFocus={ onFocus }\n        onBlur={ handleBlur }\n        withoutDefaultMinWidth={ withoutDefaultMinWidth }\n      />\n\n      <div\n        className={ styles.dropdown }\n        role=\"presentation\"\n        aria-label=\"Calendar\"\n        style={ positionStyles }\n        onClick={ stopPropagation }\n        tabIndex={ -1 }\n      >\n        <PageCalendar\n          maxDate={ maxDate }\n          minDate={ minDate }\n          value={ calendarValue }\n          openAt={ calendarPage }\n          localeOptions={ localeOptions }\n          hideWeekends={ hideWeekends }\n          onChange={ handleSelectedDateChange }\n          onClick={ focusOnInput }\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":["CALENDAR_ICON","icon","React","IconCalendar","disabled","onClick","ControlledInputCalendar","_a","size","hintMessage","label","labelWidth","id","name","pseudo","showHint","labelAside","placeholder","onKeyPress","uncontrolled","onFocus","onBlur","onChange","maxDate","minDate","value","isError","withoutDefaultMinWidth","defaultValue","defaultPage","locale","hideWeekends","fieldName","_b","useState","getCalendarState","calendarPage","setCalendarPage","_c","isInvalid","setIsInvalid","calendarValue","useMemo","getSelectedDateFromString","inputRef","useRef","_d","useInputStyles","positionStyles","focusOnInput","targetRef","useBodyScrollLock","localeOptions","getLocaleOptions","handleSelectedDateChange","useCallback","selectedDate","date","from","page","CalendarPage","Days","formatDateToString","handleInputChange","newValue","handleBlur","event","isValid","validateDateInput","current","contains","relatedTarget","undefined","handleInputClick","openAtDate","Date","openAtPage","useEffect","isValidWithLength","checkCurrentInputValid","className","styles","wrapper","role","ref","ForwardedMaskInput","placeholderMask","icons","dropdown","style","stopPropagation","tabIndex","PageCalendar","openAt"],"mappings":"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"}