import { MouseEvent } from 'react';
import { CalendarInitialState, CalendarPage, SelectedDate } from "../../packages/core/shared/PageCalendar/types";
/** Регулярка, проверяющая введена ли валидная дата или инпут пуст */
declare const DATE_REG_EXP: RegExp;
/** Возвращает валидный для date-fns паттерн на основании переданной строки с датой */
declare function getPattern(dateStr: string): string;
/** Преобразовать строку в дату */
declare function formatStringToDate(value?: string): Date | undefined;
/** Преобразовать дату в строку */
declare function formatDateToString(value?: Date, pattern?: string): string;
/** Заблокировать всплытие события */
declare function stopPropagation(event: MouseEvent): void;
declare function getSelectedDateFromString(value?: string): SelectedDate | undefined;
/** Получить состояние календаря */
declare function getCalendarState(value?: Date | string, defaultValue?: Date, initialPage?: CalendarPage): CalendarInitialState | undefined;
/** Проверить, что дата вписывается в min-max диапазон */
declare function validateMinMax(date?: Date, minDate?: Date, maxDate?: Date): boolean;
/** Валидация строки с датой с учётом min-max диапазона */
declare function validateDateInput(inputValue: string, minDate?: Date, maxDate?: Date): boolean;
/**
 * Определяет, пора ли отобразить, что в поле ввода есть ошибка, или ещё нет
 * @param value Текущее значение
 * @param isValueValid Текущее значение валидно или нет с учетом Min Max?
 * @returns Считать валидным текущее значение или нет?
 */
declare function checkCurrentInputValid(value: string, isValueValid: boolean): boolean;
/** Внешний формат */
interface DateFormat {
    /** Ввод пустой */
    isEmpty: boolean;
    /** Дата */
    value?: Date;
}
/** Преобразовать во внешний формат */
declare function formatToDate(value?: string, minDate?: Date, maxDate?: Date): DateFormat;
export { DATE_REG_EXP, getPattern, formatStringToDate, formatDateToString, stopPropagation, getSelectedDateFromString, getCalendarState, validateMinMax, validateDateInput, checkCurrentInputValid, DateFormat, formatToDate };
