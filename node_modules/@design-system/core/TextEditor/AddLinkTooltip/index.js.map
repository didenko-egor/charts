{"version":3,"file":"index.js","sources":["../../../src/TextEditor/AddLinkTooltip/index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n  useRef\n} from 'react';\nimport { useClickOutside } from '@front-toolkit/hooks';\nimport { Input } from 'core/src/Input';\nimport { Button } from 'core/src/Button';\nimport { Form } from 'shared/Form';\n\nimport { IconClose } from 'core/src/icons';\n\nimport { TooltipPosition } from '../types';\n\nimport styles from './AddLinkTooltip.module.scss';\n\n/** Регулярное выражение */\nconst regexp = /^https?:\\/\\//;\n\ninterface AddLinkTooltipProps {\n  /** Коррдинаты тултипа */\n  position: TooltipPosition;\n\n  /** Начальное значение урла */\n  url?: string;\n\n  /** Колбэк закрытия диалоговоего окна без сохранения введенного урла */\n  onClose(): void;\n\n  /** Колбэк закрытия диалоговоего окна с сохранением введенного урла */\n  onConfirm(url: string): void;\n}\n\n/** Тултип для ввода урла для ссылки */\nconst AddLinkTooltip: React.FC<AddLinkTooltipProps> = ({\n  position: { top, left },\n  url,\n  onClose,\n  onConfirm\n}) => {\n  const [value, setValue] = useState(url || '');\n  const [focus, setFocus] = useState<boolean>(false);\n  const linkTooltipRef = useRef(null);\n\n  const isCorrectUrl = regexp.test(value);\n  const isError = Boolean(value) && !isCorrectUrl;\n  const isErrorInput = isError && !focus;\n\n  useClickOutside(linkTooltipRef, onClose);\n\n  const resetInput = useCallback(() => setValue(''), []);\n\n  const icons = useMemo(() => (\n    [\n      {\n        icon: <IconClose />,\n        onClick: resetInput,\n        disabled: false\n      }\n    ]\n  ), [resetInput]);\n\n  const handleConfirm = useCallback(() => {\n    onConfirm(value);\n  }, [onConfirm, value]);\n\n  const handleEnterClick = (event: React.KeyboardEvent): void => {\n    if (event.key === 'Enter' && !isError) {\n      handleConfirm();\n    }\n  };\n\n  const toggleFocus = (): void => setFocus(!focus);\n\n  useEffect(() => () => { linkTooltipRef.current = null; }, []);\n\n  return (\n    <div\n      className={ styles.link_tooltip }\n      ref={ linkTooltipRef }\n      style={ { top, left } }\n    >\n      <div className={ styles.link_tooltip__body }>\n        <Form labelAside={ false } size=\"small\">\n          <Input\n            onChange={ setValue }\n            value={ value }\n            icons={ value ? icons : undefined }\n            onKeyDown={ handleEnterClick }\n            autoFocus\n            onFocus={ toggleFocus }\n            onBlur={ toggleFocus }\n            label=\"URL\"\n            isError={ isErrorInput }\n            showHint={ isErrorInput }\n            hintMessage=\"Введите полный адрес ссылки\"\n          />\n        </Form>\n        {\n          value && (\n            <Button\n              text=\"Применить\"\n              size=\"small\"\n              onClick={ handleConfirm }\n              stretch\n              disabled={ !isCorrectUrl }\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nAddLinkTooltip.displayName = 'AddLinkTooltip';\n\nexport default React.memo(AddLinkTooltip);\n"],"names":["regexp","AddLinkTooltip","_a","_b","top","left","url","onClose","onConfirm","_c","useState","value","setValue","_d","focus","setFocus","linkTooltipRef","useRef","isCorrectUrl","test","isError","Boolean","isErrorInput","useClickOutside","resetInput","useCallback","icons","useMemo","icon","React","IconClose","onClick","disabled","handleConfirm","toggleFocus","useEffect","current","className","styles","link_tooltip","ref","style","link_tooltip__body","Form","labelAside","size","Input","onChange","undefined","onKeyDown","event","key","autoFocus","onFocus","onBlur","label","showHint","hintMessage","Button","text","stretch","displayName","memo"],"mappings":"kYAmBA,IAAMA,EAAS,eAiBTC,EAAgD,SAACC,OACrDC,aAAYC,QAAKC,SACjBC,QACAC,YACAC,cAEMC,EAAoBC,EAASJ,GAAO,IAAnCK,OAAOC,OACRC,EAAoBH,GAAkB,GAArCI,OAAOC,OACRC,EAAiBC,EAAO,MAExBC,EAAelB,EAAOmB,KAAKR,GAC3BS,EAAUC,QAAQV,KAAWO,EAC7BI,EAAeF,IAAYN,EAEjCS,EAAgBP,EAAgBT,GAEhC,IAAMiB,EAAaC,GAAY,WAAM,OAAAb,EAAS,MAAK,IAE7Cc,EAAQC,GAAQ,WAAM,OAExB,CACEC,KAAMC,gBAACC,QACPC,QAASP,EACTQ,UAAU,MAGb,CAACR,IAEES,EAAgBR,GAAY,WAChCjB,EAAUG,KACT,CAACH,EAAWG,IAQTuB,EAAc,WAAY,OAAAnB,GAAUD,IAI1C,OAFAqB,GAAU,WAAM,OAAA,WAAQnB,EAAeoB,QAAU,QAAS,IAGxDP,uBACEQ,UAAYC,EAAOC,aACnBC,IAAMxB,EACNyB,MAAQ,CAAErC,MAAKC,SAEfwB,uBAAKQ,UAAYC,EAAOI,oBACtBb,gBAACc,GAAKC,YAAa,EAAQC,KAAK,SAC9BhB,gBAACiB,GACCC,SAAWnC,EACXD,MAAQA,EACRe,MAAQf,EAAQe,OAAQsB,EACxBC,UAtBe,SAACC,GACN,UAAdA,EAAMC,KAAoB/B,GAC5Ba,KAqBMmB,aACAC,QAAUnB,EACVoB,OAASpB,EACTqB,MAAM,MACNnC,QAAUE,EACVkC,SAAWlC,EACXmC,YAAY,iCAId9C,GACEkB,gBAAC6B,GACCC,KAAK,YACLd,KAAK,QACLd,QAAUE,EACV2B,WACA5B,UAAYd,KAO1B,EAEAjB,EAAe4D,YAAc,iBAE7B,MAAehC,EAAMiC,KAAK7D"}