{"version":3,"file":"UndoRedoButtons.js","sources":["../../../src/TextEditor/EditorControls/UndoRedoButtons.tsx"],"sourcesContent":["import React, { useCallback, useContext } from 'react';\nimport { IconRedo, IconUndo } from 'core/src/icons';\n\nimport { EditorContext } from '../EditorContext';\nimport Button from '../Button';\nimport Group from '../Group';\nimport { ControlButtonProps } from './types';\n\nconst UndoRedoButtons: React.FC<ControlButtonProps> = () => {\n  const { editor, disabled } = useContext(EditorContext);\n\n  const undoHandler = useCallback((): void => {\n    editor?.chain().focus().undo().run();\n  }, [editor]);\n\n  const redoHandler = useCallback((): void => {\n    editor?.chain().focus().redo().run();\n  }, [editor]);\n\n  return (\n    <Group>\n      <Button\n        onClick={ undoHandler }\n        disabled={ disabled }\n        data-test-action=\"undo\"\n      >\n        <IconUndo />\n      </Button>\n      <Button\n        onClick={ redoHandler }\n        disabled={ disabled }\n        data-test-action=\"redo\"\n      >\n        <IconRedo />\n      </Button>\n    </Group>\n  );\n};\n\nUndoRedoButtons.displayName = 'UndoRedoButtons';\n\nexport default React.memo(UndoRedoButtons);\n"],"names":["UndoRedoButtons","_a","useContext","EditorContext","editor","disabled","undoHandler","useCallback","chain","focus","undo","run","redoHandler","redo","React","Group","Button","onClick","IconUndo","IconRedo","displayName","memo"],"mappings":"4OAQA,IAAMA,EAAgD,WAC9C,IAAAC,EAAuBC,EAAWC,GAAhCC,WAAQC,aAEVC,EAAcC,GAAY,WAC9BH,SAAAA,EAAQI,QAAQC,QAAQC,OAAOC,QAC9B,CAACP,IAEEQ,EAAcL,GAAY,WAC9BH,SAAAA,EAAQI,QAAQC,QAAQI,OAAOF,QAC9B,CAACP,IAEJ,OACEU,gBAACC,OACCD,gBAACE,GACCC,QAAUX,EACVD,SAAWA,qBACM,QAEjBS,gBAACI,SAEHJ,gBAACE,GACCC,QAAUL,EACVP,SAAWA,qBACM,QAEjBS,gBAACK,SAIT,EAEAnB,EAAgBoB,YAAc,kBAE9B,MAAeN,EAAMO,KAAKrB"}