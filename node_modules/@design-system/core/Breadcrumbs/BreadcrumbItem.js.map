{"version":3,"file":"BreadcrumbItem.js","sources":["../../src/Breadcrumbs/BreadcrumbItem.tsx"],"sourcesContent":["import React, { ReactNode, useState } from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\nimport { Text } from 'core/src/typography';\nimport { BreadcrumbItemProps } from 'core/src/Breadcrumbs/types';\n\nimport { IconChevronDownSmall } from 'core/src/icons';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\nconst BreadcrumbItem = (({\n  active,\n  href = '',\n  children,\n  overflow,\n  color,\n  size,\n  withUnderline,\n  onClick,\n  highlightActive = false,\n  isCollapsed = false,\n  renderCrumbLink\n}: BreadcrumbItemProps): JSX.Element => {\n  const [isHover, setIsHover] = useState(false);\n  const isUnderline = withUnderline ? isHover : false;\n\n  const onMouseCross: React.MouseEventHandler = event => {\n    setIsHover(event.type === 'mouseenter');\n  };\n\n  const breadcrumbClasses = cd('item', {\n    overflow\n  });\n\n  const renderCrumb = (): ReactNode => {\n    if (isCollapsed) {\n      return children;\n    }\n\n    return (\n      <Text\n        color={ (active && highlightActive) ? 'text_primary' : color }\n        underline={ isUnderline }\n        size={ size }\n        isEllipsis={ overflow }\n      >\n        { active || !href ? children : renderCrumbLink(href, children) }\n      </Text>\n    );\n  };\n\n  return (\n    <>\n      { /* eslint-disable-next-line jsx-a11y/click-events-have-key-events,\n      jsx-a11y/no-noninteractive-element-interactions */ }\n      <li\n        className={ breadcrumbClasses }\n        onMouseEnter={ onMouseCross }\n        onMouseLeave={ onMouseCross }\n        onClick={ onClick }\n      >\n        { renderCrumb() }\n      </li>\n      { !active && (\n        <span className={ styles.icon }>\n          <IconChevronDownSmall rotate={ 270 } color=\"var(--ds-color-text-secondary)\" />\n        </span>\n      ) }\n    </>\n  );\n});\n\nexport default BreadcrumbItem;\n"],"names":["cd","cssDecorator","styles","BreadcrumbItem","_a","active","_b","href","children","overflow","color","size","withUnderline","onClick","_c","highlightActive","_d","isCollapsed","renderCrumbLink","_e","useState","isHover","setIsHover","isUnderline","onMouseCross","event","type","breadcrumbClasses","React","className","onMouseEnter","onMouseLeave","Text","underline","isEllipsis","icon","IconChevronDownSmall","rotate"],"mappings":"qVASA,IAAMA,EAAKC,EAAaC,GAElBC,WAAmBC,OACvBC,WACAC,SAAAC,aAAO,KACPC,aACAC,aACAC,UACAC,SACAC,kBACAC,YACAC,oBAAAC,gBACAC,gBAAAC,gBACAC,oBAEMC,EAAwBC,GAAS,GAAhCC,OAASC,OACVC,IAAcX,GAAgBS,EAE9BG,EAAwC,SAAAC,GAC5CH,EAA0B,eAAfG,EAAMC,OAGbC,EAAoB3B,EAAG,OAAQ,CACnCS,aAoBF,OACEmB,gCAGEA,sBACEC,UAAYF,EACZG,aAAeN,EACfO,aAAeP,EACfX,QAAUA,GAxBVI,EACKT,EAIPoB,gBAACI,GACCtB,MAASL,GAAUU,EAAmB,eAAiBL,EACvDuB,UAAYV,EACZZ,KAAOA,EACPuB,WAAazB,GAEXJ,IAAWE,EAAOC,EAAWU,EAAgBX,EAAMC,MAiBpDH,GACDuB,wBAAMC,UAAY3B,EAAOiC,MACvBP,gBAACQ,GAAqBC,OAAS,IAAM3B,MAAM,oCAKpD"}