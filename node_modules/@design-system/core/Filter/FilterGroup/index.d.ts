/// <reference types="react" />
import React from 'react';
import { FilterItem, FilterConfig, FilterWrapperProps } from "../../types-8b6b081c";
type FilterGroupProps = Pick<FilterWrapperProps, 'isHiddenHeader' | 'zIndex'> & {
    /** Заголовок группы фильтров */
    title: string;
    /** Массив выбранных элементов всех фильтров в группе */
    activeItems: FilterItem[];
    /** Массив конфигураций фильтров, входящих в группу */
    configs: FilterConfig[];
    /** Колбэк при изменении выбранных элементов всех фильтров группы
     * (в качестве аргумента принимает обновленный массив выбранных элементов) */
    onChange: (changedActiveItems: FilterItem[]) => void;
    /** Опциональный колбэк в дополнение к `onChange`, при изменении выбранных элементов,
     * (в качестве аргументов принимает массив выбранных элементов только текущего фильтра группы,
     * открытого в момент срабатывания колбэка, и его `filterId`) */
    onChangeByFilter?: (currentFilterActiveItems: FilterItem[], currentFilterId: number | string | null) => void;
};
declare const FilterGroup: React.FC<FilterGroupProps>;
export { FilterGroup as default, FilterGroupProps };
