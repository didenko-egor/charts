{"version":3,"file":"index.js","sources":["../../../src/Filter/AsyncFilterCheckbox/index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\nimport { Input } from 'core/src/Input';\n\nimport { IconSearch } from 'core/src/icons';\n\nimport DropdownBody from '../FilterCheckbox/DropdownBody';\nimport FilterWrapper from '../FilterWrapper';\nimport { FilterCheckboxItem, FilterCheckboxProps } from '../types';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\nconst icons = [{ icon: <IconSearch /> }];\n\nexport interface AsyncFilterCheckboxProps extends FilterCheckboxProps {\n  /** Массив чекбоксов */\n  items: FilterCheckboxItem[];\n\n  /** Массив выбранных чекбоксов, отображаемых в шапке фильтра */\n  hoistedActiveItems: FilterCheckboxItem[];\n\n  /** Флаг отображения поиска */\n  withSearch?: boolean;\n\n  /** Статус загрузки данных */\n  isLoading?: boolean;\n\n  /** Статус повторной загрузки данных */\n  isRetryLoading?: boolean;\n\n  /** Статус пустой поисковой выдачи */\n  isNotFound?: boolean;\n\n  /** Статус ошибки при поиске */\n  isError?: boolean;\n\n  /** Значение в поисковой строке */\n  searchInputValue?: string;\n\n  /** Коллбэк, вызываемый при взаимодействии с поисковой строкой */\n  onSearchInputValueChanged?: (value: string) => void;\n\n  /** Коллбэк, вызываемый при скролле до конца списка элементов */\n  onScrolledToEnd?: VoidFunction;\n}\n\nconst AsyncFilterCheckbox: React.FC<AsyncFilterCheckboxProps> = ({\n  config: {\n    title\n  },\n  items,\n  activeItems,\n  hoistedActiveItems,\n  isOpen: isControlledOpen,\n  isHiddenHeader,\n  zIndex,\n  withSearch = true,\n  isLoading,\n  isRetryLoading,\n  isNotFound,\n  isError,\n  searchInputValue,\n  onChange,\n  onOpenStatusChange,\n  onSearchInputValueChanged,\n  onScrolledToEnd\n}) => {\n  const [isOpen, setIsOpen] = useState(isControlledOpen ?? false);\n  const [loadMoreTriggerElement, setLoadMoreTriggerElement] = useState<HTMLDivElement | null>(null);\n\n  const handleOpenStatusChange = useCallback((value: boolean) => {\n    setIsOpen(value);\n\n    if (onOpenStatusChange) {\n      onOpenStatusChange(value);\n    }\n  }, [onOpenStatusChange]);\n\n  const handleClearAll = useCallback(\n    () => {\n      if (onChange) {\n        onChange([]);\n      }\n    },\n    [onChange]\n  );\n\n  useEffect(() => {\n    if (onSearchInputValueChanged) {\n      onSearchInputValueChanged('');\n    }\n  }, [isOpen, onSearchInputValueChanged]);\n\n  return (\n    <FilterWrapper\n      title={ title }\n      activeCount={ activeItems.length }\n      isOpen={ isControlledOpen }\n      isHiddenHeader={ isHiddenHeader }\n      zIndex={ zIndex }\n      loadMoreTriggerElement={ loadMoreTriggerElement }\n      onOpenStatusChange={ handleOpenStatusChange }\n      onClearAll={ handleClearAll }\n      onScrolledToEnd={ onScrolledToEnd }\n    >\n      { withSearch ? (\n        <div className={ styles.input }>\n          <Input\n            dataTestId=\"filter_input_id\"\n            size=\"small\"\n            placeholder=\"Поиск\"\n            icons={ icons }\n            value={ searchInputValue }\n            onChange={ onSearchInputValueChanged }\n            iconsLeft\n          />\n        </div>\n      ) : null }\n      <div className={ cd('container', { no_top_indent: withSearch }) }>\n        <DropdownBody\n          items={ items }\n          activeItems={ activeItems }\n          hoistedActiveItems={ hoistedActiveItems }\n          isError={ isError }\n          isNotFound={ isNotFound }\n          isRetryLoading={ isRetryLoading }\n          isLoading={ isLoading }\n          onChange={ onChange }\n          loadMoreTriggerElementRefCallback={ setLoadMoreTriggerElement }\n        />\n      </div>\n    </FilterWrapper>\n  );\n};\n\nexport default AsyncFilterCheckbox;\n"],"names":["cd","cssDecorator","styles","icons","icon","React","IconSearch","AsyncFilterCheckbox","_a","title","items","activeItems","hoistedActiveItems","isControlledOpen","isHiddenHeader","zIndex","_b","withSearch","isLoading","isRetryLoading","isNotFound","isError","searchInputValue","onChange","onOpenStatusChange","onSearchInputValueChanged","onScrolledToEnd","_c","useState","isOpen","setIsOpen","_d","loadMoreTriggerElement","setLoadMoreTriggerElement","handleOpenStatusChange","useCallback","value","handleClearAll","useEffect","FilterWrapper","activeCount","length","onClearAll","className","input","Input","dataTestId","size","placeholder","iconsLeft","no_top_indent","DropdownBody","loadMoreTriggerElementRefCallback"],"mappings":"uVAgBA,IAAMA,EAAKC,EAAaC,GAElBC,EAAQ,CAAC,CAAEC,KAAMC,gBAACC,UAkClBC,EAA0D,SAACC,OAE7DC,iBAEFC,UACAC,gBACAC,uBACQC,WACRC,mBACAC,WACAC,eAAAC,gBACAC,cACAC,mBACAC,eACAC,YACAC,qBACAC,aACAC,uBACAC,8BACAC,oBAEMC,EAAsBC,EAASf,SAAAA,GAA9BgB,OAAQC,OACTC,EAAsDH,EAAgC,MAArFI,OAAwBC,OAEzBC,EAAyBC,GAAY,SAACC,GAC1CN,EAAUM,GAENZ,GACFA,EAAmBY,KAEpB,CAACZ,IAEEa,EAAiBF,GACrB,WACMZ,GACFA,EAAS,MAGb,CAACA,IASH,OANAe,GAAU,WACJb,GACFA,EAA0B,MAE3B,CAACI,EAAQJ,IAGVpB,gBAACkC,GACC9B,MAAQA,EACR+B,YAAc7B,EAAY8B,OAC1BZ,OAAShB,EACTC,eAAiBA,EACjBC,OAASA,EACTiB,uBAAyBA,EACzBR,mBAAqBU,EACrBQ,WAAaL,EACbX,gBAAkBA,GAEhBT,EACAZ,uBAAKsC,UAAYzC,EAAO0C,OACtBvC,gBAACwC,GACCC,WAAW,kBACXC,KAAK,QACLC,YAAY,QACZ7C,MAAQA,EACRiC,MAAQd,EACRC,SAAWE,EACXwB,gBAGF,KACJ5C,uBAAKsC,UAAY3C,EAAG,YAAa,CAAEkD,cAAejC,KAChDZ,gBAAC8C,GACCzC,MAAQA,EACRC,YAAcA,EACdC,mBAAqBA,EACrBS,QAAUA,EACVD,WAAaA,EACbD,eAAiBA,EACjBD,UAAYA,EACZK,SAAWA,EACX6B,kCAAoCnB,KAK9C"}