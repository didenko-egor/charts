{"version":3,"file":"index.js","sources":["../../../../src/Filter/FilterWrapper/FilterToggleButton/index.tsx"],"sourcesContent":["import React, { RefObject } from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\nimport { Text } from 'core/src/typography';\n\nimport { IconChevronDownSmall } from 'core/src/icons';\n\nimport styles from './styles.scss';\n\ninterface FilterToggleButtonProps {\n  /** Текст на кнопке */\n  title: string;\n\n  /** Реф кнопки */\n  buttonRef: RefObject<HTMLButtonElement>;\n\n  /** Количество выбранных элементов фильтра (целое число >= 0) */\n  activeCount: number;\n\n  /** Колбэк для переключения видимости */\n  toggleOpen: VoidFunction;\n\n  /** Расположить иконку слева от текста на кнопке */\n  iconLeft?: boolean;\n\n  /** Изменить стандартную иконку на кнопки */\n  customIcon?: JSX.Element;\n\n  /** Сделать неактивной */\n  disabled?: boolean;\n\n  /** id кнопки открытия для теста */\n  dataTestId?: string;\n}\n\nconst cd = cssDecorator(styles);\n\n/** Кнопка управления отображением фильтра */\nfunction FilterToggleButton({\n  title,\n  buttonRef,\n  activeCount,\n  toggleOpen,\n  disabled = false,\n  iconLeft = false,\n  customIcon,\n  dataTestId\n}: FilterToggleButtonProps): JSX.Element {\n  const color = activeCount ? 'tass' : 'primary';\n  const icon = customIcon\n  || (\n  <IconChevronDownSmall\n    dataTestId=\"icon_chevron_down_small\"\n    color={ color }\n  />\n  );\n\n  return (\n    <button\n      data-test-id={ dataTestId || 'open_button_id' }\n      ref={ buttonRef }\n      type=\"button\"\n      className={ cd('button', { color_text: !!activeCount }) }\n      onClick={ toggleOpen }\n      disabled={ disabled }\n    >\n      { iconLeft && icon }\n\n      <div className={ cd('title', { icon_left: iconLeft }) }>\n        <Text size=\"small\" color={ color } inline>{ title }</Text>\n      </div>\n\n      { activeCount > 0 && (\n      <div className={ styles.counter }>\n        <Text color=\"primary_inverse\" size=\"extra_small\" inline>{ activeCount }</Text>\n      </div>\n      ) }\n\n      { !iconLeft && icon }\n    </button>\n  );\n}\n\nexport default FilterToggleButton;\n"],"names":["cd","cssDecorator","styles","FilterToggleButton","_a","title","buttonRef","activeCount","toggleOpen","_b","disabled","_c","iconLeft","customIcon","dataTestId","color","icon","React","IconChevronDownSmall","ref","type","className","color_text","onClick","icon_left","Text","size","inline","counter"],"mappings":"oWAkCA,IAAMA,EAAKC,EAAaC,GAGxB,SAASC,EAAmBC,OAC1BC,UACAC,cACAC,gBACAC,eACAC,aAAAC,gBACAC,aAAAC,gBACAC,eACAC,eAEMC,EAAQR,EAAc,OAAS,UAC/BS,EAAOH,GAEbI,gBAACC,GACCJ,WAAW,0BACXC,MAAQA,IAIV,OACEE,yCACiBH,GAAc,iBAC7BK,IAAMb,EACNc,KAAK,SACLC,UAAYrB,EAAG,SAAU,CAAEsB,aAAcf,IACzCgB,QAAUf,EACVE,SAAWA,GAETE,GAAYI,EAEdC,uBAAKI,UAAYrB,EAAG,QAAS,CAAEwB,UAAWZ,KACxCK,gBAACQ,GAAKC,KAAK,QAAQX,MAAQA,EAAQY,WAAStB,IAG5CE,EAAc,GAChBU,uBAAKI,UAAYnB,EAAO0B,SACtBX,gBAACQ,GAAKV,MAAM,kBAAkBW,KAAK,cAAcC,WAASpB,KAIzDK,GAAYI,EAGrB"}