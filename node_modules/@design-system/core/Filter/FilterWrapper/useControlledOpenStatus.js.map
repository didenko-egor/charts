{"version":3,"file":"useControlledOpenStatus.js","sources":["../../../src/Filter/FilterWrapper/useControlledOpenStatus.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { FilterWrapperProps, GroupItemParams } from '../types';\n\nexport type UseControlledOpenStatusReturnedValue = {\n  isCurrentOpen: boolean | null;\n  handleStatusOpenChange: (value: boolean) => void;\n};\n\nconst useControlledOpenStatus = (\n  {\n    isOpen,\n    groupItemParams,\n    onOpenStatusChange\n  }: Pick<FilterWrapperProps, 'isOpen' | 'onOpenStatusChange'>\n  & { groupItemParams: GroupItemParams | null }\n): UseControlledOpenStatusReturnedValue => {\n  const [isCurrentOpen, setIsCurrentOpen] = useState<boolean | null>(null);\n\n  useEffect(() => {\n    if (isOpen !== undefined) {\n      setIsCurrentOpen(isOpen);\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!onOpenStatusChange) {\n      return;\n    }\n\n    if (groupItemParams && !groupItemParams.isCurrentFilter) {\n      onOpenStatusChange(false);\n    } else {\n      onOpenStatusChange(!!isCurrentOpen);\n    }\n  }, [groupItemParams, isCurrentOpen, onOpenStatusChange]);\n\n  return {\n    isCurrentOpen: isOpen !== undefined ? isOpen : isCurrentOpen,\n    handleStatusOpenChange: setIsCurrentOpen\n  };\n};\n\nexport default useControlledOpenStatus;\n"],"names":["useControlledOpenStatus","_a","isOpen","groupItemParams","onOpenStatusChange","_b","useState","isCurrentOpen","setIsCurrentOpen","useEffect","undefined","isCurrentFilter","handleStatusOpenChange"],"mappings":"oDASMA,EAA0B,SAC9BC,OACEC,WACAC,oBACAC,uBAIIC,EAAoCC,EAAyB,MAA5DC,OAAeC,OAoBtB,OAlBAC,GAAU,gBACOC,IAAXR,GACFM,EAAiBN,KAElB,CAACA,IAEJO,GAAU,WACHL,IAIDD,IAAoBA,EAAgBQ,gBACtCP,GAAmB,GAEnBA,IAAqBG,MAEtB,CAACJ,EAAiBI,EAAeH,IAE7B,CACLG,mBAA0BG,IAAXR,EAAuBA,EAASK,EAC/CK,uBAAwBJ,EAE5B"}