{"version":3,"file":"index.js","sources":["../../../../src/Filter/FilterWrapper/FilterHeader/index.tsx"],"sourcesContent":["import React from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\nimport { Text } from 'core/src/typography';\n\nimport styles from './styles.scss';\nimport { FilterWrapperProps, GroupItemParams } from '../../types';\nimport useGroupParams from './useGroupParams';\n\nconst cd = cssDecorator(styles);\n\nexport type FilterHeaderProps = Pick<FilterWrapperProps,\n'title'\n| 'activeCount'\n| 'onClearAll'\n> & {\n  /** Параметры текущего элемента группы фильтров */\n  groupParams?: GroupItemParams | null;\n\n  /** Текст на кнопке очистки фильтра */\n  clearAllButtonText?: string;\n\n  /** Позволяет вручную управлять видимость кнопки очистки фильтра */\n  allowClearAllAction?: boolean;\n\n  /** Заблокировать кнопку очистки фильтра? */\n  disabled?: boolean;\n};\n\nconst FilterHeader: React.FC<FilterHeaderProps> = ({\n  title,\n  onClearAll,\n  activeCount,\n  groupParams,\n  clearAllButtonText = 'Сбросить',\n  allowClearAllAction = false,\n  disabled = false\n}) => {\n  const { backButton, forwardButton, selectedLabels } = useGroupParams(groupParams);\n\n  const isCurrentClosedInGroup = !!groupParams && !groupParams.isCurrentFilter;\n  const withLabels = isCurrentClosedInGroup && !!groupParams.activeCurrentItems?.length;\n\n  const wrapperClasses = cd('wrapper', {\n    closed_filter_in_group: isCurrentClosedInGroup,\n    with_bottom_clear_all_btn: groupParams?.isCurrentFilter,\n    with_labels: withLabels\n  });\n\n  const titleClasses = cd('title', {\n    closed_filter_in_group: isCurrentClosedInGroup,\n    with_labels: withLabels\n  });\n\n  return (\n    <div\n      data-test-id=\"filter_header_id\"\n      className={ wrapperClasses }\n    >\n      { backButton }\n      <div className={ titleClasses }>\n        <Text fontWeight=\"bold\" size={ isCurrentClosedInGroup ? 'small' : 'default' } inline>{ title }</Text>\n      </div>\n      { forwardButton }\n      { selectedLabels }\n      { (activeCount > 0 || withLabels || allowClearAllAction) && (\n        <button\n          data-test-id=\"clear_all_btn_id\"\n          className={ cd('button', { clear_all: true, closed_filter_in_group: isCurrentClosedInGroup }) }\n          type=\"button\"\n          onClick={ onClearAll }\n          disabled={ disabled }\n        >\n          <Text size=\"small\" inline>{ clearAllButtonText }</Text>\n        </button>\n      ) }\n    </div>\n  );\n};\n\nexport default FilterHeader;\n"],"names":["cd","cssDecorator","styles","FilterHeader","_a","title","onClearAll","activeCount","groupParams","_c","clearAllButtonText","_d","allowClearAllAction","_e","disabled","_f","useGroupParams","backButton","forwardButton","selectedLabels","isCurrentClosedInGroup","isCurrentFilter","withLabels","activeCurrentItems","length","wrapperClasses","closed_filter_in_group","with_bottom_clear_all_btn","with_labels","titleClasses","React","className","Text","fontWeight","size","inline","clear_all","type","onClick"],"mappings":"wUAQA,IAAMA,EAAKC,EAAaC,GAoBlBC,EAA4C,SAACC,SACjDC,UACAC,eACAC,gBACAC,gBACAC,uBAAAC,aAAqB,aACrBC,wBAAAC,gBACAC,aAAAC,gBAEMC,EAAgDC,EAAeR,GAA7DS,eAAYC,kBAAeC,mBAE7BC,IAA2BZ,IAAgBA,EAAYa,gBACvDC,EAAaF,gBAA4BZ,EAAYe,yCAAoBC,QAEzEC,EAAiBzB,EAAG,UAAW,CACnC0B,uBAAwBN,EACxBO,0BAA2BnB,eAAAA,EAAaa,gBACxCO,YAAaN,IAGTO,EAAe7B,EAAG,QAAS,CAC/B0B,uBAAwBN,EACxBQ,YAAaN,IAGf,OACEQ,sCACe,mBACbC,UAAYN,GAEVR,EACFa,uBAAKC,UAAYF,GACfC,gBAACE,GAAKC,WAAW,OAAOC,KAAOd,EAAyB,QAAU,UAAYe,WAAS9B,IAEvFa,EACAC,GACCZ,EAAc,GAAKe,GAAcV,IAClCkB,yCACe,mBACbC,UAAY/B,EAAG,SAAU,CAAEoC,WAAW,EAAMV,uBAAwBN,IACpEiB,KAAK,SACLC,QAAUhC,EACVQ,SAAWA,GAEXgB,gBAACE,GAAKE,KAAK,QAAQC,WAASzB,IAKtC"}