{"version":3,"file":"InputDateTimeItems.js","sources":["../../../src/Filter/DateRange/InputDateTimeItems.tsx"],"sourcesContent":["import React from 'react';\nimport { InputDateTime } from 'core/src/InputDateTime';\nimport { FormSize } from 'shared/Form/types';\n\nimport {\n  DateItemRange,\n  DateRangeCalendarOptions,\n  FilterDateRangeItem\n} from '../types';\n\ninterface InputDateTimeItemProps {\n  /** Уникальный индекс элемента в наборе items */\n  groupIndex: number;\n\n  /** Содержит в себе настройки для отображения описания для начального и конечного значения */\n  range: DateItemRange;\n\n  /** Функция установки выбранного даты и времени */\n  onSelect(\n    groupIndex: number,\n    fieldIndex: keyof DateItemRange,\n    value: Date\n  ): void;\n\n  /** Текущее состояние выбранного из набора  */\n  activeItem?: FilterDateRangeItem;\n\n  /** Настройки поведения календаря */\n  calendarOptions?: DateRangeCalendarOptions;\n\n  /** Размер отображаемых элементов */\n  size?: FormSize;\n}\n\nfunction InputDateTimeItems(props: InputDateTimeItemProps): JSX.Element {\n  const {\n    activeItem,\n    calendarOptions,\n    groupIndex,\n    range,\n    size,\n    onSelect\n  } = props;\n\n  const handleChangeStart = (value: Date): void => {\n    onSelect(groupIndex, 'start', new Date(value.setSeconds(0)));\n  };\n\n  const handleChangeEnd = (value: Date): void => {\n    onSelect(groupIndex, 'end', new Date(value.setSeconds(59)));\n  };\n\n  return (\n    <>\n      <InputDateTime\n        key={ `start-${ range?.start?.displayName }}` }\n        label={ range?.start?.displayName }\n        size={ size }\n        value={ activeItem?.range?.start?.value }\n        inputCalendar={ calendarOptions?.start }\n        onChange={ handleChangeStart }\n      />\n      <InputDateTime\n        key={ `end-${ range?.end?.displayName }}` }\n        label={ range?.end?.displayName }\n        size={ size }\n        value={ activeItem?.range?.end?.value }\n        inputCalendar={ calendarOptions?.end }\n        onChange={ handleChangeEnd }\n      />\n    </>\n  );\n}\n\nexport default React.memo(InputDateTimeItems);\n"],"names":["React","memo","props","activeItem","calendarOptions","groupIndex","range","size","onSelect","InputDateTime","key","start","displayName","label","value","inputCalendar","onChange","Date","setSeconds","end"],"mappings":"kFA0EA,MAAeA,EAAMC,MAxCrB,SAA4BC,uBAExBC,EAMED,aALFE,EAKEF,kBAJFG,EAIEH,aAHFI,EAGEJ,QAFFK,EAEEL,OADFM,EACEN,WAUJ,OACEF,gCACEA,gBAACS,GACCC,IAAM,oBAAUJ,eAAAA,EAAOK,4BAAOC,iBAC9BC,gBAAQP,eAAAA,EAAOK,4BAAOC,YACtBL,KAAOA,EACPO,0BAAQX,eAAAA,EAAYG,4BAAOK,4BAAOG,MAClCC,cAAgBX,eAAAA,EAAiBO,MACjCK,SAhBoB,SAACF,GACzBN,EAASH,EAAY,QAAS,IAAIY,KAAKH,EAAMI,WAAW,QAiBtDlB,gBAACS,GACCC,IAAM,kBAAQJ,eAAAA,EAAOa,0BAAKP,iBAC1BC,gBAAQP,eAAAA,EAAOa,0BAAKP,YACpBL,KAAOA,EACPO,0BAAQX,eAAAA,EAAYG,4BAAOa,0BAAKL,MAChCC,cAAgBX,eAAAA,EAAiBe,IACjCH,SApBkB,SAACF,GACvBN,EAASH,EAAY,MAAO,IAAIY,KAAKH,EAAMI,WAAW,SAuB1D"}