{"version":3,"file":"utils.js","sources":["../../src/Tooltip/utils.ts"],"sourcesContent":["import { RefObject } from 'react';\nimport { TooltipPlacement, TooltipTailAlign } from 'core/src/Tooltip/types';\n\n/**\n * Получаем координату по y в зависимости от положения треугольной стрелки относительно\n * тултипа (начало/центр/конец). Нужно только для placement: top/bottom\n * @param {number} tooltipWidth ширина тултипа\n * @param {number} targetWidth ширина целевого элемента для тултипа\n * @param {TooltipTailAlign} tailAlign выравнивание треугольной стрелки относительно тултипа\n * @return {number}\n * */\nexport function getLeftByTailAlign(\n  tooltipWidth: number,\n  targetWidth: number,\n  tailAlign?: TooltipTailAlign\n): number {\n  const indent = 14;\n\n  switch (tailAlign) {\n    case 'start':\n      return -(targetWidth / 2 - indent);\n    case 'end':\n      return tooltipWidth - targetWidth / 2 - indent;\n    default:\n      return tooltipWidth / 2 - targetWidth / 2;\n  }\n}\n\nexport const getTopLeftByPlace = (\n  cords: DOMRect,\n  target: HTMLDivElement,\n  tooltipRef: RefObject<HTMLDivElement>,\n  placement: TooltipPlacement,\n  tailAlign?: TooltipTailAlign\n): string => {\n  const top = cords.top + window.scrollY;\n  const left = cords.left + window.scrollX;\n  const verticalIndent = 6;\n  const horizontalIndent = 6.5;\n  if (tooltipRef.current && target && cords) {\n    switch (placement) {\n      case 'top':\n        return `\n            top: ${ top + target.offsetHeight + verticalIndent }px; \n            left: ${ left - getLeftByTailAlign(tooltipRef.current.offsetWidth, target.offsetWidth, tailAlign) }px;\n          `;\n      case 'bottom':\n        return `\n            top: ${ top - tooltipRef.current.offsetHeight - verticalIndent }px; \n            left: ${ left - getLeftByTailAlign(tooltipRef.current.offsetWidth, target.offsetWidth, tailAlign) }px;\n          `;\n      case 'right':\n        return `\n            top: ${ top - (tooltipRef.current.offsetHeight / 2 - target.offsetHeight / 2) }px; \n            left: \n              ${ left - target.offsetWidth\n            - (tooltipRef.current.offsetWidth - target.offsetWidth) - horizontalIndent }px;\n          `;\n      case 'left':\n        return `\n            top: ${ top - (tooltipRef.current.offsetHeight / 2 - target.offsetHeight / 2) }px; \n            left: ${ left + target.offsetWidth + horizontalIndent }px;\n        `;\n      default:\n        return `\n            top: ${ top }px;\n            left: ${ left }px \n          `;\n    }\n  }\n\n  return '';\n};\n"],"names":["getLeftByTailAlign","tooltipWidth","targetWidth","tailAlign","getTopLeftByPlace","cords","target","tooltipRef","placement","top","window","scrollY","left","scrollX","current","offsetHeight","offsetWidth"],"mappings":"SAWgBA,EACdC,EACAC,EACAC,GAIA,OAAQA,GACN,IAAK,QACH,QAASD,EAAc,EAJZ,IAKb,IAAK,MACH,OAAOD,EAAeC,EAAc,EANzB,GAOb,QACE,OAAOD,EAAe,EAAIC,EAAc,EAE9C,KAEaE,EAAoB,SAC/BC,EACAC,EACAC,EACAC,EACAL,GAEA,IAAMM,EAAMJ,EAAMI,IAAMC,OAAOC,QACzBC,EAAOP,EAAMO,KAAOF,OAAOG,QAGjC,GAAIN,EAAWO,SAAWR,GAAUD,EAClC,OAAQG,GACN,IAAK,MACH,MAAO,uBACKC,EAAMH,EAAOS,aANR,+BAOJH,EAAOZ,EAAmBO,EAAWO,QAAQE,YAAaV,EAAOU,YAAab,sBAE7F,IAAK,SACH,MAAO,uBACKM,EAAMF,EAAWO,QAAQC,aAXpB,+BAYJH,EAAOZ,EAAmBO,EAAWO,QAAQE,YAAaV,EAAOU,YAAab,sBAE7F,IAAK,QACH,MAAO,uBACKM,GAAOF,EAAWO,QAAQC,aAAe,EAAIT,EAAOS,aAAe,gDAEtEH,EAAON,EAAOU,aAChBT,EAAWO,QAAQE,YAAcV,EAAOU,aAlB5B,uBAoBrB,IAAK,OACH,MAAO,uBACKP,GAAOF,EAAWO,QAAQC,aAAe,EAAIT,EAAOS,aAAe,gCAClEH,EAAON,EAAOU,YAvBR,qBAyBrB,QACE,MAAO,sBACKP,4BACCG,oBAKnB,MAAO,EACT"}