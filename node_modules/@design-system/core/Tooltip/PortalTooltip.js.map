{"version":3,"file":"PortalTooltip.js","sources":["../../src/Tooltip/PortalTooltip.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { cssDecorator } from '@front-toolkit/utils';\nimport { Text } from 'core/src/typography';\n\nimport { getTopLeftByPlace } from './utils';\nimport { PortalTooltipProps } from './types';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\nconst PortalTooltip: React.FC<PortalTooltipProps> = ({\n  text,\n  placement,\n  width,\n  hint,\n  size = 'default',\n  zIndex,\n  target,\n  tailAlign = 'center'\n}) => {\n  const body = document.querySelector('body') as HTMLBodyElement;\n  const cords = target?.getBoundingClientRect();\n  const tooltipRef = useRef<HTMLDivElement>(null);\n\n  const indexZ = zIndex ? `z-index: ${ zIndex };` : '';\n  const tooltipWidth = width ? `width: ${ width }px;` : '';\n  const otherStyles = `${ tooltipWidth + indexZ } visibility: visible`;\n  const textSize = size === 'default' ? 'small' : 'extra_small';\n\n  useEffect(() => {\n    if (cords && target && tooltipRef.current) {\n      const tooltipStyle = `position: absolute; ${\n        getTopLeftByPlace(cords, target, tooltipRef, placement, tailAlign)\n      } ${ otherStyles } `;\n\n      tooltipRef.current.setAttribute('style', tooltipStyle);\n    }\n  }, [\n    cords,\n    otherStyles,\n    placement,\n    target,\n    tailAlign\n  ]);\n\n  return createPortal(\n    <div\n      className={ styles.tooltip_wrapper }\n      style={ { width, zIndex } }\n      data-test-id=\"tooltip_wrapper\"\n      ref={ tooltipRef }\n    >\n      <div className={ styles.tooltip }>\n\n        { /** Треугольная стрелка тултипа */ }\n        <div className={ cd('tail', {\n          [placement]: placement,\n          [`${ placement }_${ tailAlign }`]: tailAlign\n        }) }\n        />\n\n        { /** Основной текст */ }\n        <Text\n          size={ textSize }\n          color=\"inherit\"\n        >\n          { text }\n        </Text>\n\n        { /** Подсказка */ }\n        {\n            hint && (\n              <Text\n                size={ textSize }\n                color=\"disabled\"\n              >\n                { ` ${ hint }` }\n              </Text>\n            )\n          }\n      </div>\n    </div>,\n    body\n  );\n};\n\nexport default PortalTooltip;\n"],"names":["cd","cssDecorator","styles","PortalTooltip","_a","text","placement","width","hint","_c","size","zIndex","target","_d","tailAlign","body","document","querySelector","cords","getBoundingClientRect","tooltipRef","useRef","otherStyles","textSize","useEffect","current","tooltipStyle","getTopLeftByPlace","setAttribute","createPortal","React","className","tooltip_wrapper","style","ref","tooltip","_b","Text","color"],"mappings":"iYAUA,IAAMA,EAAKC,EAAaC,GAElBC,EAA8C,SAACC,SACnDC,SACAC,cACAC,UACAC,SACAC,SAAAC,aAAO,YACPC,WACAC,WACAC,cAAAC,aAAY,WAENC,EAAOC,SAASC,cAAc,QAC9BC,EAAQN,eAAAA,EAAQO,wBAChBC,EAAaC,EAAuB,MAIpCC,GADef,EAAQ,UAAWA,QAAc,KADvCI,EAAS,YAAaA,MAAa,2BAG5CY,EAAoB,YAATb,EAAqB,QAAU,cAkBhD,OAhBAc,GAAU,WACR,GAAIN,GAASN,GAAUQ,EAAWK,QAAS,CACzC,IAAMC,EAAe,uBACnBC,EAAkBT,EAAON,EAAQQ,EAAYd,EAAWQ,OACrDQ,MAELF,EAAWK,QAAQG,aAAa,QAASF,MAE1C,CACDR,EACAI,EACAhB,EACAM,EACAE,IAGKe,EACLC,uBACEC,UAAY7B,EAAO8B,gBACnBC,MAAQ,CAAE1B,QAAOI,yBACJ,kBACbuB,IAAMd,GAENU,uBAAKC,UAAY7B,EAAOiC,SAGtBL,uBAAKC,UAAY/B,EAAG,aAClBoC,EAAC9B,GAAYA,EACb8B,EAAK9B,MAAeQ,GAAeA,QAKrCgB,gBAACO,GACC3B,KAAOa,EACPe,MAAM,WAEJjC,GAKAG,GACEsB,gBAACO,GACC3B,KAAOa,EACPe,MAAM,YAEJ,IAAK9B,KAMnBO,EAEJ"}