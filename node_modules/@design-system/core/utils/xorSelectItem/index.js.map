{"version":3,"file":"index.js","sources":["../../../../../utils/xorSelectItem/index.ts"],"sourcesContent":["import { BaseSelectItem } from 'core/types/select';\n\n/** Возвращает новый массив без переданного вторым элемента селекта, если он уже в нём есть,\n * либо с ним, если он ранее отсутствовал (проверка проводится по свойству \"value\")\n * @param {BaseSelectItem[]} array исходный массив\n * @param {BaseSelectItem} newValue строка, которая будет добавлена или убрана из исходного массива\n * @returns {BaseSelectItem[]}\n *  */\nconst xorSelectItem = (array: BaseSelectItem[], newItem?: BaseSelectItem): BaseSelectItem[] => {\n  if (!newItem) { return array; }\n\n  if (array.find(prevItem => prevItem.value === newItem.value)) {\n    return array.filter(prevItem => prevItem.value !== newItem.value);\n  }\n\n  return [...array, newItem];\n};\n\nexport default xorSelectItem;\n"],"names":["xorSelectItem","array","newItem","find","prevItem","value","filter"],"mappings":"0CAQMA,EAAgB,SAACC,EAAyBC,GAC9C,OAAKA,EAEDD,EAAME,MAAK,SAAAC,GAAY,OAAAA,EAASC,QAAUH,EAAQG,SAC7CJ,EAAMK,QAAO,SAAAF,GAAY,OAAAA,EAASC,QAAUH,EAAQG,gBAGlDJ,OAAOC,OANKD,CAOzB"}