{"version":3,"file":"index.js","sources":["../../../../../utils/getUniqueSelectItems/index.ts"],"sourcesContent":["import { BaseSelectItem } from 'core/types/select';\n\n/** Из двух массивов с элементами для селекта формирует один, состоящий из уникальных (по свойству \"value\")\n * @param {BaseSelectItem[]} inutialItems массив, содержащий начальные элементы\n * @param {BaseSelectItem[]} newItems массив, содержащий дополнительные элементов\n * @returns {BaseSelectItem[]}\n */\nconst getUniqueSelectItems = (inutialItems: BaseSelectItem[], newItems: BaseSelectItem[]): BaseSelectItem[] => {\n  const allItems = inutialItems.reduce((acc: BaseSelectItem[], initialItem: BaseSelectItem) => {\n    /** Если в массивах с начальными и дополнительными элементами встречаются совпадающие,\n     * приоритет отдается элементу из массива с дополнительными */\n    const updatedItem = newItems.find(newItem => newItem.value === initialItem.value);\n\n    if (updatedItem) { return [...acc, updatedItem]; }\n\n    return [...acc, initialItem];\n  }, [] as BaseSelectItem[]);\n\n  newItems.forEach(newItem => {\n    if (!inutialItems.find(item => item.value === newItem.value)) { // maybe \"some\"?\n      allItems.push(newItem);\n    }\n  });\n\n  return allItems;\n};\n\nexport default getUniqueSelectItems;\n"],"names":["getUniqueSelectItems","inutialItems","newItems","allItems","reduce","acc","initialItem","updatedItem","find","newItem","value","forEach","item","push"],"mappings":"0CAOMA,EAAuB,SAACC,EAAgCC,GAC5D,IAAMC,EAAWF,EAAaG,QAAO,SAACC,EAAuBC,GAG3D,IAAMC,EAAcL,EAASM,MAAK,SAAAC,GAAW,OAAAA,EAAQC,QAAUJ,EAAYI,SAE3E,cAA8BL,MAA1BE,GAA+BA,IAEnBD,SACf,IAQH,OANAJ,EAASS,SAAQ,SAAAF,GACVR,EAAaO,MAAK,SAAAI,GAAQ,OAAAA,EAAKF,QAAUD,EAAQC,UACpDP,EAASU,KAAKJ,MAIXN,CACT"}