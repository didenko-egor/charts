{"version":3,"file":"index.js","sources":["../../src/CheckboxGroup/index.tsx"],"sourcesContent":["import 'focus-visible';\nimport React from 'react';\nimport classNames from 'classnames/bind';\nimport { CheckboxGroupProps } from 'core/types/checkbox';\nimport { useFormContext } from 'shared/Form/formContext';\nimport { FormSize } from 'shared/Form/types';\n\nimport { Checkbox } from '../Checkbox';\n\nimport styles from './styles.scss';\n\nconst cn = classNames.bind(styles);\n\nexport const CheckboxGroup: React.FC<CheckboxGroupProps> = ({\n  items,\n  size = 'default',\n  label,\n  labelAside,\n  disabledGroup = false,\n  activeItems = [],\n  onChange,\n  dataTestId = 'checkbox_group_id',\n  labelWidth,\n  fieldName,\n  verticalAlign\n}) => {\n  const { LABEL_WIDTH, LABEL_ASIDE, SIZE } = useFormContext({ labelWidth, labelAside, size: size as FormSize });\n\n  const groupClassNames = cn(\n    'group',\n    { 'group--aside': LABEL_ASIDE }\n  );\n  const groupLabelClassNames = cn(\n    'group__label',\n    `group__label--${ SIZE }`,\n    {\n      [`group__label--${ SIZE }_aside`]: SIZE && LABEL_ASIDE,\n      'group__label--disabled': disabledGroup\n    }\n  );\n  const checkboxClassNames = cn('checkbox_container', `checkbox_container--${ SIZE }`);\n\n  const onChangeEvent = (value: string) => (): void => (\n    activeItems.includes(value)\n      ? onChange(activeItems.filter(item => item !== value), fieldName)\n      : onChange([...activeItems, value], fieldName)\n  );\n\n  return (\n    <div className={ groupClassNames } data-test-id={ dataTestId }>\n      <span style={ { width: LABEL_WIDTH || undefined } } className={ groupLabelClassNames }>\n        { label }\n      </span>\n      <ul className={ styles.group__checkbox }>\n        { items.map(item => (\n          <li key={ item.value } className={ checkboxClassNames }>\n            <Checkbox\n              name={ item.value }\n              label={ item.label }\n              size={ SIZE }\n              verticalAlign={ verticalAlign }\n              disabled={ disabledGroup || item.disabled }\n              checked={ activeItems?.includes(item.value) }\n              onChange={ onChangeEvent(item.value) }\n            />\n          </li>\n        )) }\n      </ul>\n    </div>\n  );\n};\n"],"names":["cn","classNames","bind","styles","CheckboxGroup","_a","items","_c","size","label","labelAside","_d","disabledGroup","_e","activeItems","onChange","_f","dataTestId","labelWidth","fieldName","verticalAlign","_g","useFormContext","LABEL_WIDTH","LABEL_ASIDE","SIZE","groupClassNames","groupLabelClassNames","_b","checkboxClassNames","React","className","style","width","undefined","group__checkbox","map","item","key","value","Checkbox","name","disabled","checked","includes","filter"],"mappings":"+PAWA,IAAMA,EAAKC,EAAWC,KAAKC,GAEdC,EAA8C,SAACC,SAC1DC,UACAC,SAAAC,aAAO,YACPC,UACAC,eACAC,kBAAAC,gBACAC,gBAAAC,aAAc,KACdC,aACAC,eAAAC,aAAa,sBACbC,eACAC,cACAC,kBAEMC,EAAqCC,EAAe,CAAEJ,aAAYR,aAAYF,KAAMA,IAAlFe,gBAAaC,gBAAaC,SAE5BC,EAAkB1B,EACtB,QACA,CAAE,eAAgBwB,IAEdG,EAAuB3B,EAC3B,eACA,iBAAkByB,UAEf,iBAAkBA,YAAgBA,GAAQD,EAC3CI,4BAA0BhB,MAGxBiB,EAAqB7B,EAAG,qBAAsB,uBAAwByB,GAQ5E,OACEK,uBAAKC,UAAYL,iBAAiCT,GAChDa,wBAAME,MAAQ,CAAEC,MAAOV,QAAeW,GAAcH,UAAYJ,GAC5DlB,GAEJqB,sBAAIC,UAAY5B,EAAOgC,iBACnB7B,EAAM8B,KAAI,SAAAC,GAAQ,OAClBP,sBAAIQ,IAAMD,EAAKE,MAAQR,UAAYF,GACjCC,gBAACU,GACCC,KAAOJ,EAAKE,MACZ9B,MAAQ4B,EAAK5B,MACbD,KAAOiB,EACPL,cAAgBA,EAChBsB,SAAW9B,GAAiByB,EAAKK,SACjCC,QAAU7B,eAAAA,EAAa8B,SAASP,EAAKE,OACrCxB,UArBWwB,EAqBcF,EAAKE,MArBD,WAAY,OACnDzB,EAAY8B,SAASL,GACjBxB,EAASD,EAAY+B,QAAO,SAAAR,GAAQ,OAAAA,IAASE,KAAQpB,GACrDJ,SAAaD,OAAayB,OAAQpB,QAHlB,IAACoB,MA4BzB"}