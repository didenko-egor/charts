{"version":3,"file":"index.js","sources":["../../../../../shared/Spinner/index.tsx"],"sourcesContent":["import React from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\n\nimport { Sizes, Color } from './types';\nimport {\n  DEFAULT_PERCENT_VALUE, SIZE_BY_NAME, STROKE_WIDTH\n} from './constants';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\nexport interface SpinnerProps {\n  /** Размер спиннера */\n  size?: Sizes;\n\n  /** Цвет спиннера */\n  color?: Color;\n\n  /** Процент, указывающий на сколько должен быть заполнен спиннер */\n  percent?: number;\n\n  /** Эмулировать отсутствие CSS стилей? */\n  emulateNoCss?: boolean;\n}\n\nconst Spinner = React.memo<SpinnerProps>(({\n  size = 'default',\n  color = 'light',\n  percent,\n  emulateNoCss\n}) => {\n  const asProgress = Boolean(percent);\n  const percentValue = percent || DEFAULT_PERCENT_VALUE;\n  const sizeValue = size ? SIZE_BY_NAME[size] : SIZE_BY_NAME.default;\n  const center = sizeValue / 2;\n  const radius = (sizeValue - STROKE_WIDTH) / 2;\n  const circumference = Math.PI * 2 * radius;\n  const progress = ((100 - percentValue) / 100) * circumference;\n\n  const spinnerClassNames = emulateNoCss ? '' : cd('spinner', { animate: !asProgress });\n  const backgroundClassNames = emulateNoCss ? '' : cd('spinner__background', { [color]: true });\n  const pathClassNames = emulateNoCss ? '' : cd('spinner__path', { [color]: true });\n\n  return (\n    <svg\n      className={ spinnerClassNames }\n      width={ sizeValue }\n      height={ sizeValue }\n      role=\"progressbar\"\n    >\n      <circle\n        className={ backgroundClassNames }\n        cx={ center }\n        cy={ center }\n        r={ radius }\n        style={ {\n          transition: 'stroke-dashoffset .5s ease 0s',\n          fill: 'none',\n          strokeLinecap: 'butt',\n          strokeWidth: '2px',\n          stroke: color === 'light' ? 'rgb(18 32 144 / 10%)' : 'rgb(255 255 255 / 20%)'\n        } }\n      />\n      <circle\n        className={ pathClassNames }\n        cx={ center }\n        cy={ center }\n        r={ radius }\n        strokeDasharray={ circumference }\n        strokeDashoffset={ progress }\n        transform={ `rotate(-90 ${ center } ${ center })` }\n        fill=\"none\"\n      />\n    </svg>\n  );\n});\n\nSpinner.displayName = 'Spinner';\n\nexport { Spinner };\n"],"names":["cd","cssDecorator","styles","Spinner","React","memo","_a","_d","size","_e","color","percent","emulateNoCss","asProgress","Boolean","percentValue","DEFAULT_PERCENT_VALUE","sizeValue","SIZE_BY_NAME","center","radius","STROKE_WIDTH","circumference","Math","PI","progress","spinnerClassNames","animate","backgroundClassNames","pathClassNames","className","width","height","role","cx","cy","r","style","transition","fill","strokeLinecap","strokeWidth","stroke","strokeDasharray","strokeDashoffset","transform","displayName"],"mappings":"oMAUA,IAAMA,EAAKC,EAAaC,GAgBlBC,EAAUC,EAAMC,MAAmB,SAACC,WACxCC,SAAAC,aAAO,YACPC,UAAAC,aAAQ,UACRC,YACAC,iBAEMC,EAAaC,QAAQH,GACrBI,EAAeJ,GAAWK,EAC1BC,EAAYT,EAAOU,EAAaV,GAAQU,EAAoB,QAC5DC,EAASF,EAAY,EACrBG,GAAUH,EAAYI,GAAgB,EACtCC,EAA0B,EAAVC,KAAKC,GAASJ,EAC9BK,GAAa,IAAMV,GAAgB,IAAOO,EAE1CI,EAAoBd,EAAe,GAAKZ,EAAG,UAAW,CAAE2B,SAAUd,IAClEe,EAAuBhB,EAAe,GAAKZ,EAAG,8BAA0BU,IAAQ,MAChFmB,EAAiBjB,EAAe,GAAKZ,EAAG,wBAAoBU,IAAQ,MAE1E,OACEN,uBACE0B,UAAYJ,EACZK,MAAQd,EACRe,OAASf,EACTgB,KAAK,eAEL7B,0BACE0B,UAAYF,EACZM,GAAKf,EACLgB,GAAKhB,EACLiB,EAAIhB,EACJiB,MAAQ,CACNC,WAAY,gCACZC,KAAM,OACNC,cAAe,OACfC,YAAa,MACbC,OAAkB,UAAVhC,EAAoB,uBAAyB,4BAGzDN,0BACE0B,UAAYD,EACZK,GAAKf,EACLgB,GAAKhB,EACLiB,EAAIhB,EACJuB,gBAAkBrB,EAClBsB,iBAAmBnB,EACnBoB,UAAY,cAAe1B,MAAYA,MACvCoB,KAAK,SAIb,IAEApC,EAAQ2C,YAAc"}