{"version":3,"file":"index.js","sources":["../../../../../shared/BaseCalendar/index.tsx"],"sourcesContent":["/* eslint-disable import/no-duplicates */\nimport 'focus-visible';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\n// TODO: разобраться с импортами\nimport {\n  differenceInMonths,\n  startOfDay,\n  startOfMonth,\n  toDate\n} from 'date-fns';\nimport ru from 'date-fns/locale/ru';\n// TODO избавиться от лишних библиотек (задача на доске TGF)\nimport { CalendarProps, NewMonthType } from 'shared/types/calendar';\n\nimport defaultColorStyles from 'shared/BaseCalendar/coreColorStyles.scss';\n\nimport Weekdays from './Weekdays';\nimport DaysList from './DaysList';\nimport MonthsList from './MonthsList';\nimport YearsList from './YearsList';\n\nimport styles from './styles.scss';\n\nexport const DEFAULT_PROPS = {\n  dataTestId: 'calendar_id',\n  maxDate: new Date(2100, 11, 1),\n  minDate: new Date(1900, 0, 1),\n  onSelectedDateChange: (): void => {\n    // do nothing\n  },\n  weekdays: ['В', 'П', 'В', 'С', 'Ч', 'П', 'С']\n};\n\nexport const BaseCalendar: React.FC<CalendarProps> = ({\n  dataTestId = DEFAULT_PROPS.dataTestId,\n  defaultValue,\n  height = 350,\n  locale = ru,\n  maxDate = DEFAULT_PROPS.maxDate,\n  minDate = DEFAULT_PROPS.minDate,\n  onSelectedDateChange,\n  range,\n  rowHeight = 32,\n  tabIndex = 1,\n  value,\n  weekdays = DEFAULT_PROPS.weekdays,\n  colorStyles = defaultColorStyles\n}) => {\n  const today = startOfDay(new Date());\n\n  const [months, setMonths] = useState<NewMonthType[]>([]);\n  const [years, setYears] = useState<number[]>([]);\n  const [selected, setSelected] = useState<Date[]>([]);\n  const [selectIndex, setSelectIndex] = useState<number>(0);\n  const [active, setActive] = useState<Date | undefined>(undefined);\n\n  const calendarRef = useRef<HTMLDivElement | null>(null);\n\n  const fallbackActive = value || defaultValue;\n  const valueFirstDate = Array.isArray(value) ? value[0] : value;\n  const fallbackVisibleDate = valueFirstDate || defaultValue || today;\n\n  const activeIndex = useMemo(() => (\n    Math.abs(differenceInMonths(startOfMonth(minDate), active || fallbackVisibleDate))\n  ), [active, fallbackVisibleDate, minDate]);\n\n  const updateYears = useCallback((): void => {\n    const newMin = toDate(minDate);\n    const newMax = toDate(maxDate);\n\n    const minYear = newMin.getFullYear();\n    const minMonth = newMin.getMonth();\n    const maxYear = newMax.getFullYear();\n    const maxMonth = newMax.getMonth();\n\n    const newMonths: NewMonthType[] = [];\n    const newYears: number[] = [];\n    let year: number;\n    let month: number;\n\n    for (year = minYear; year <= maxYear; year += 1) {\n      newYears.push(year);\n\n      for (month = 0; month < 12; month += 1) {\n        const outOfRange = (year === minYear && month < minMonth) || (year === maxYear && month > maxMonth);\n\n        if (!outOfRange) {\n          newMonths.push({ month, year });\n        }\n      }\n    }\n    setMonths(newMonths);\n    setYears(newYears);\n  }, [minDate, maxDate]);\n\n  useEffect(() => { updateYears(); }, [minDate, maxDate, updateYears]);\n\n  useEffect(() => {\n    if (fallbackActive) {\n      let selectedValue = Array.isArray(fallbackActive) ? fallbackActive : [fallbackActive];\n\n      if (selectedValue.length > 2) {\n        selectedValue = [\n          selectedValue[0],\n          selectedValue[selectedValue.length - 1]\n        ];\n      }\n\n      setActive(selectedValue[0]);\n      setSelected(selectedValue);\n    }\n  }, [fallbackActive]);\n\n  const handleSelect = useCallback((date: Date): void => {\n    const newSelected: Date[] = [];\n\n    setSelectIndex(selectIndex + 1);\n\n    if (range) {\n      const [startDate, endDate] = selected;\n\n      if (selectIndex % 2 === 0) {\n        if (selected[1]) {\n          newSelected[1] = endDate;\n        }\n        newSelected[0] = date;\n      } else {\n        newSelected[0] = startDate;\n        newSelected[1] = date;\n      }\n      setSelected(newSelected);\n\n      return;\n    }\n\n    newSelected[0] = date;\n    setSelected(newSelected);\n  }, [selected, selectIndex, range]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => { if (onSelectedDateChange) onSelectedDateChange(selected); }, [selected]);\n\n  const handleMonthChange = useCallback((date: Date): void => {\n    setActive(date);\n  }, []);\n\n  const handleMonthOrYearClick = useCallback((date: Date): void => {\n    setActive(date < minDate ? minDate : date);\n  }, [minDate]);\n\n  return (\n    <div\n      tabIndex={ tabIndex }\n      className={ `${ styles.root } ${ colorStyles.color_scheme }` }\n      aria-label=\"Calendar\"\n      ref={ calendarRef }\n      data-test-id={ dataTestId }\n    >\n\n      <div className={ styles.wrapper }>\n        <Weekdays\n          rowHeight={ rowHeight }\n          weekdays={ weekdays }\n          weekStartsOn={ locale.options?.weekStartsOn }\n        />\n\n        <div className={ styles.dayslist_wrapper }>\n          <DaysList\n            activeIndex={ activeIndex }\n            height={ height }\n            locale={ locale }\n            maxDate={ maxDate }\n            minDate={ minDate }\n            months={ months }\n            onMonthChange={ handleMonthChange }\n            onSelect={ handleSelect }\n            range={ range }\n            rowHeight={ rowHeight }\n            selected={ selected }\n            today={ today }\n          />\n        </div>\n      </div>\n\n      <div className={ styles.sidebar }>\n        <div className={ styles.line } />\n        <MonthsList\n          active={ active }\n          locale={ locale }\n          months={ months }\n          onMonthClick={ handleMonthOrYearClick }\n          rowHeight={ rowHeight }\n          today={ today }\n        />\n        <div className={ styles.line } />\n        <YearsList\n          active={ active || fallbackVisibleDate }\n          onYearClick={ handleMonthOrYearClick }\n          rowHeight={ rowHeight }\n          today={ today }\n          years={ years }\n        />\n      </div>\n    </div>\n  );\n};\n"],"names":["DEFAULT_PROPS","dataTestId","maxDate","Date","minDate","onSelectedDateChange","weekdays","BaseCalendar","_a","_c","defaultValue","_d","height","_e","locale","ru","_f","_g","range","_h","rowHeight","_j","tabIndex","value","_k","_l","colorStyles","defaultColorStyles","today","startOfDay","_m","useState","months","setMonths","_o","years","setYears","_p","selected","setSelected","_q","selectIndex","setSelectIndex","_r","undefined","active","setActive","calendarRef","useRef","fallbackActive","fallbackVisibleDate","Array","isArray","activeIndex","useMemo","Math","abs","differenceInMonths","startOfMonth","updateYears","useCallback","year","month","newMin","toDate","newMax","minYear","getFullYear","minMonth","getMonth","maxYear","maxMonth","newMonths","newYears","push","useEffect","selectedValue","length","handleSelect","date","newSelected","startDate","endDate","handleMonthChange","handleMonthOrYearClick","React","className","styles","root","color_scheme","ref","wrapper","Weekdays","weekStartsOn","options","dayslist_wrapper","DaysList","onMonthChange","onSelect","sidebar","line","MonthsList","onMonthClick","YearsList","onYearClick"],"mappings":"6cA6BaA,EAAgB,CAC3BC,WAAY,cACZC,QAAS,IAAIC,KAAK,KAAM,GAAI,GAC5BC,QAAS,IAAID,KAAK,KAAM,EAAG,GAC3BE,qBAAsB,aAGtBC,SAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAG9BC,EAAwC,SAACC,SACpDC,eAAAR,aAAaD,EAAcC,aAC3BS,iBACAC,WAAAC,aAAS,MACTC,WAAAC,aAASC,IACTC,YAAAd,aAAUF,EAAcE,UACxBe,YAAAb,aAAUJ,EAAcI,UACxBC,yBACAa,UACAC,cAAAC,aAAY,KACZC,aAAAC,aAAW,IACXC,UACAC,aAAAlB,aAAWN,EAAcM,WACzBmB,gBAAAC,aAAcC,IAERC,EAAQC,EAAW,IAAI1B,MAEvB2B,EAAsBC,EAAyB,IAA9CC,OAAQC,OACTC,EAAoBH,EAAmB,IAAtCI,OAAOC,OACRC,EAA0BN,EAAiB,IAA1CO,OAAUC,OACXC,EAAgCT,EAAiB,GAAhDU,OAAaC,QACdC,GAAsBZ,OAA2Ba,GAAhDC,SAAQC,SAETC,GAAcC,EAA8B,MAE5CC,GAAiB1B,GAASb,EAE1BwC,IADiBC,MAAMC,QAAQ7B,GAASA,EAAM,GAAKA,IACXb,GAAgBkB,EAExDyB,GAAcC,GAAQ,WAAM,OAChCC,KAAKC,IAAIC,EAAmBC,EAAatD,GAAUyC,IAAUK,OAC5D,CAACL,GAAQK,GAAqB9C,IAE3BuD,GAAcC,GAAY,WAC9B,IAUIC,EACAC,EAXEC,EAASC,EAAO5D,GAChB6D,EAASD,EAAO9D,GAEhBgE,EAAUH,EAAOI,cACjBC,EAAWL,EAAOM,WAClBC,EAAUL,EAAOE,cACjBI,EAAWN,EAAOI,WAElBG,EAA4B,GAC5BC,EAAqB,GAI3B,IAAKZ,EAAOK,EAASL,GAAQS,EAAST,GAAQ,EAG5C,IAFAY,EAASC,KAAKb,GAETC,EAAQ,EAAGA,EAAQ,GAAIA,GAAS,EAAG,CAClBD,IAASK,GAAWJ,EAAQM,GAAcP,IAASS,GAAWR,EAAQS,GAGxFC,EAAUE,KAAK,CAAEZ,QAAOD,SAI9B5B,EAAUuC,GACVpC,EAASqC,KACR,CAACrE,EAASF,IAEbyE,GAAU,WAAQhB,OAAkB,CAACvD,EAASF,EAASyD,KAEvDgB,GAAU,WACR,GAAI1B,GAAgB,CAClB,IAAI2B,EAAgBzB,MAAMC,QAAQH,IAAkBA,GAAiB,CAACA,IAElE2B,EAAcC,OAAS,IACzBD,EAAgB,CACdA,EAAc,GACdA,EAAcA,EAAcC,OAAS,KAIzC/B,GAAU8B,EAAc,IACxBrC,EAAYqC,MAEb,CAAC3B,KAEJ,IAAM6B,GAAelB,GAAY,SAACmB,GAChC,IAAMC,EAAsB,GAI5B,GAFAtC,GAAeD,EAAc,GAEzBvB,EAAO,CACF,IAAA+D,EAAsB3C,KAAX4C,EAAW5C,KAa7B,OAXIG,EAAc,GAAM,GAClBH,EAAS,KACX0C,EAAY,GAAKE,GAEnBF,EAAY,GAAKD,IAEjBC,EAAY,GAAKC,EACjBD,EAAY,GAAKD,QAEnBxC,EAAYyC,GAKdA,EAAY,GAAKD,EACjBxC,EAAYyC,KACX,CAAC1C,EAAUG,EAAavB,IAG3ByD,GAAU,WAAYtE,GAAsBA,EAAqBiC,KAAc,CAACA,IAEhF,IAAM6C,GAAoBvB,GAAY,SAACmB,GACrCjC,GAAUiC,KACT,IAEGK,GAAyBxB,GAAY,SAACmB,GAC1CjC,GAAUiC,EAAO3E,EAAUA,EAAU2E,KACpC,CAAC3E,IAEJ,OACEiF,uBACE/D,SAAWA,EACXgE,UAAgBC,EAAOC,SAAU9D,EAAY+D,0BAClC,WACXC,IAAM3C,kBACS9C,GAGfoF,uBAAKC,UAAYC,EAAOI,SACtBN,gBAACO,GACCxE,UAAYA,EACZd,SAAWA,EACXuF,uBAAe/E,EAAOgF,8BAASD,eAGjCR,uBAAKC,UAAYC,EAAOQ,kBACtBV,gBAACW,GACC3C,YAAcA,GACdzC,OAASA,EACTE,OAASA,EACTZ,QAAUA,EACVE,QAAUA,EACV4B,OAASA,EACTiE,cAAgBd,GAChBe,SAAWpB,GACX5D,MAAQA,EACRE,UAAYA,EACZkB,SAAWA,EACXV,MAAQA,MAKdyD,uBAAKC,UAAYC,EAAOY,SACtBd,uBAAKC,UAAYC,EAAOa,OACxBf,gBAACgB,GACCxD,OAASA,GACT/B,OAASA,EACTkB,OAASA,EACTsE,aAAelB,GACfhE,UAAYA,EACZQ,MAAQA,IAEVyD,uBAAKC,UAAYC,EAAOa,OACxBf,gBAACkB,GACC1D,OAASA,IAAUK,GACnBsD,YAAcpB,GACdhE,UAAYA,EACZQ,MAAQA,EACRO,MAAQA,KAKlB"}