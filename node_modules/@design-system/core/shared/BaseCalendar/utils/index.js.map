{"version":3,"file":"index.js","sources":["../../../../../../shared/BaseCalendar/utils/index.ts"],"sourcesContent":["import {\n  GetMonthType,\n  NewMonthType,\n  WeekStartsOnType\n} from 'shared/types/calendar';\nimport {\n  getDaysInMonth,\n  getDay\n} from 'date-fns';\n\nconst MS_IN_DAY = 60 * 60 * 24 * 1000;\n\nconst monthHeights: number[] = [];\nconst cache: Record<string, GetMonthType> = {};\n\n/**\n * Находит индекс дня недели, соответствующий выбранной локализации\n */\nexport const getEndOfWeekIndex = (weekStartsOn: number): number => (weekStartsOn === 0 ? 6 : weekStartsOn - 1);\n\n/**\n * Возвращает строки для указанного месяца\n */\nexport const getMonth = (\n  year: number,\n  month: number,\n  weekStartsOn: WeekStartsOnType = 0\n): GetMonthType => {\n  const rows: number[][] = [];\n  const monthDate = new Date(year, month, 1);\n  const daysInMonth = getDaysInMonth(monthDate);\n  const weekEndsOn = getEndOfWeekIndex(weekStartsOn);\n\n  let dayOfWeek: number = getDay(new Date(year, month, 1));\n  let week = 0;\n\n  for (let day = 1; day <= daysInMonth; day += 1) {\n    if (!rows[week]) {\n      rows[week] = [];\n    }\n\n    rows[week].push(day);\n\n    if (dayOfWeek === weekEndsOn) {\n      week += 1;\n    }\n\n    dayOfWeek = dayOfWeek < 6 ? dayOfWeek + 1 : 0;\n  }\n\n  return {\n    date: monthDate,\n    rows\n  };\n};\n\n/**\n * Возвращает номер недели в году, которой соответствует переданная дата\n*/\n\nexport const getWeek = (\n  yearStart: number | Date,\n  date: Date,\n  weekStartsOn: WeekStartsOnType = 0\n): number => {\n  const yearStartDate = (typeof yearStart === 'number')\n    ? new Date(yearStart, 0, 1) // 1st Jan of the Year\n    : yearStart;\n\n  return Math.ceil(\n    (Math.round((date.getTime() - yearStartDate.getTime()) / MS_IN_DAY)\n    + yearStartDate.getDay() + 1 - weekStartsOn) / 7\n  );\n};\n\n/**\n * Возвращает количество недель в году\n*/\n\nexport const getWeeksInMonth = (\n  month: number,\n  year: number = new Date().getFullYear(),\n  weekStartsOn: WeekStartsOnType = 0\n): number => {\n  const firstOfMonth = new Date(year, month, 1);\n  const firstWeekNumber = getWeek(year, firstOfMonth, weekStartsOn);\n\n  const lastOfMonth = new Date(year, month + 1, 0); // Last date of the Month\n  const lastWeekNumber = getWeek(year, lastOfMonth, weekStartsOn);\n\n  return lastWeekNumber - firstWeekNumber;\n};\n\n/**\n * Создает строку формата 'YYYY-MM-DD' из полученных значений года, месяца, дня\n */\n\nexport const getDateString = (\n  year: number,\n  month: number,\n  day: number\n// eslint-disable-next-line sonarjs/no-nested-template-literals\n): string => `${ year }-${ (`0${ month + 1 }`).slice(-2) }-${ (`0${ day }`).slice(-2) }`;\n\n/**\n * Возвращает true если date входит в диазон dates\n */\n\nexport const getInRange = (\n  dateNow: string,\n  dates: string[],\n  range?: boolean\n): boolean => {\n  const [date1, date2] = dates;\n\n  if (range) {\n    if (date1 < date2) {\n      return dateNow > date1 && dateNow < date2;\n    }\n\n    return dateNow > date2 && dateNow < date1;\n  }\n\n  return false;\n};\n\n/**\n * Возвращает высоту сдвига для списка месяцев\n*/\n\nexport const monthsOffset = (\n  activeDate: Date | undefined,\n  minDate: NewMonthType,\n  rowHeight: number\n): number => {\n  if (activeDate === undefined) return 0;\n\n  let months = 0;\n  months = (activeDate.getFullYear() - minDate.year) * 12;\n  months -= minDate.month;\n  months += activeDate.getMonth();\n  months += activeDate.getFullYear() - minDate.year;\n\n  return months * rowHeight;\n};\n\n/**\n * Возвращает дату первого дня месяца, к которому проскроллили список месяцев\n*/\n\nexport const getMonthByScroll = (\n  scrollTop: number | undefined,\n  minDate: NewMonthType,\n  rowHeight: number\n): Date => {\n  if (scrollTop !== undefined) {\n    const { year, month } = minDate;\n\n    const diff = Math.round(scrollTop / rowHeight);\n    const correctedDiff = diff % 13;\n\n    const newMonth = ((month + correctedDiff) % 12) - Math.floor((month + correctedDiff) / 12);\n    const newYear = Math.floor((month + correctedDiff) / 12) + Math.floor(diff / 13) + year;\n\n    return new Date(newYear, newMonth > 0 ? newMonth : 0, 1);\n  }\n\n  return new Date(minDate.year, minDate.month, 1);\n};\n\n/**\n * Возвращает дату первого дня года, к которому проскроллили список лет\n*/\n\nexport const getYearByScroll = (\n  scrollTop: number | undefined,\n  minDate: number,\n  rowHeight: number\n): Date => {\n  if (scrollTop !== undefined) {\n    const diff = Math.round(scrollTop / rowHeight);\n    const newYear = minDate + diff;\n\n    return new Date(newYear, 0, 1);\n  }\n\n  return new Date(minDate, 0, 1);\n};\n\n/** Возвращает высоту месяца в пикселях */\n\nexport const getMonthHeight = (index: number, months: NewMonthType[], locale: Locale, rowHeight: number): number => {\n  if (!monthHeights[index]) {\n    const { month, year } = months[index];\n    const weeks = getWeeksInMonth(month, year, locale.options?.weekStartsOn) + 2;\n    monthHeights[index] = weeks * rowHeight + 40;\n  }\n\n  return monthHeights[index];\n};\n\n/** Возвращает данные по указанному месяцу  */\n\nexport const memoize = (param: string, locale: Locale): GetMonthType => {\n  if (!cache[param]) {\n    const [year, month] = param.split(':');\n    const result = getMonth(Number(year), Number(month), locale.options?.weekStartsOn);\n    cache[param] = result;\n  }\n\n  return cache[param];\n};\n"],"names":["monthHeights","cache","getEndOfWeekIndex","weekStartsOn","getMonth","year","month","rows","monthDate","Date","daysInMonth","getDaysInMonth","weekEndsOn","dayOfWeek","getDay","week","day","push","date","getWeek","yearStart","yearStartDate","Math","ceil","round","getTime","getWeeksInMonth","getFullYear","firstOfMonth","firstWeekNumber","lastOfMonth","getDateString","slice","getInRange","dateNow","dates","range","date1","date2","monthsOffset","activeDate","minDate","rowHeight","undefined","months","getMonthByScroll","scrollTop","diff","correctedDiff","newMonth","floor","newYear","getYearByScroll","getMonthHeight","index","locale","_b","weeks","options","memoize","param","split","result","Number"],"mappings":"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"}