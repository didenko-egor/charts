{"version":3,"file":"index.js","sources":["../../src/InputSelect/index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from 'react';\nimport { SelectProps } from 'core/types/select';\nimport { IconChevronDown, IconSearch } from 'core/src/icons';\nimport { BaseSelect, InputLabel, InputHint } from 'core/shared';\nimport { BaseInput } from 'shared/BaseInput';\nimport { useFormContext } from 'shared/Form/formContext';\nimport getLabelColor from 'core/utils/getLabelColor';\n\nimport inputStyles from 'shared/BaseInput/coreStyles.scss';\nimport iconsStyles from 'shared/BaseInput/WithIcons/coreStyles.scss';\n\nconst DEFAULT_PROPS = {\n  size: 'default',\n  dataTestId: 'select_input_id',\n  placeholder: ''\n} as SelectProps;\n\nconst emptyWrapperStyles = {};\n\nconst InputSelect = ({\n  id,\n  items,\n  label,\n  placeholder = DEFAULT_PROPS.placeholder,\n  disabled,\n  isError,\n  showHint,\n  hintMessage,\n  onChange = (): void => undefined,\n  labelAside,\n  activeValue,\n  size = DEFAULT_PROPS.size,\n  dataTestId = DEFAULT_PROPS.dataTestId,\n  labelWidth,\n  fieldName,\n  fixedModeID\n}: SelectProps): JSX.Element => {\n  const { LABEL_WIDTH, LABEL_ASIDE, SIZE } = useFormContext({ labelWidth, labelAside, size });\n\n  const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n\n  const activeLabel = useMemo(() => items.find(item => item.value === activeValue)?.label, [activeValue, items]);\n\n  const filteredItems = useMemo(() => items.filter(item => item.label.toLowerCase()\n    .includes(inputValue.toLowerCase())), [inputValue, items]);\n\n  const onItemClickHandler = useCallback((value: string): void => {\n    onChange(value, fieldName);\n    setIsOpenDropdown(false);\n  }, [fieldName, onChange]);\n\n  const onChangeHandler = useCallback((value: string): void => {\n    setInputValue(value);\n\n    if (value.length === 0) {\n      onChange(undefined, fieldName);\n    }\n  }, [fieldName, onChange]);\n\n  const onOpenDropdown = useCallback((): void => setIsOpenDropdown(true), []);\n\n  const onHandleClickOutside = useCallback((): void => {\n    if (inputValue === '') {\n      onChange(undefined, fieldName);\n    }\n\n    setInputValue(activeLabel || '');\n    setIsOpenDropdown(false);\n  }, [inputValue, activeLabel, onChange, fieldName]);\n\n  const inputIcon = useMemo(() => [\n    {\n      icon: isOpenDropdown ? <IconSearch /> : <IconChevronDown />,\n      onClick: onOpenDropdown\n    }\n  ], [isOpenDropdown, onOpenDropdown]);\n\n  useEffect(() => setInputValue(activeLabel || ''), [activeLabel, activeValue, items]);\n\n  const renderedLabel = label\n    ? (\n      <InputLabel\n        color={ getLabelColor(disabled) }\n        text={ label }\n        size={ SIZE }\n        htmlFor={ id }\n      />\n    )\n    : null;\n\n  const renderedHint = showHint\n    ? (\n      <InputHint\n        disabled={ disabled }\n        isError={ isError }\n        hintMessage={ hintMessage }\n      />\n    )\n    : null;\n\n  return (\n    <BaseSelect\n      size={ SIZE }\n      label={ renderedLabel }\n      disabled={ disabled }\n      labelAside={ LABEL_ASIDE }\n      dataTestId={ dataTestId }\n      hint={ renderedHint }\n      showHint={ showHint }\n      isError={ isError }\n      items={ inputValue ? filteredItems : items }\n      isOpenDropdown={ isOpenDropdown }\n      activeValue={ activeValue }\n      onItemClick={ onItemClickHandler }\n      onCloseDropdown={ onHandleClickOutside }\n      labelWidth={ LABEL_WIDTH }\n      fixedModeID={ fixedModeID }\n    >\n      <BaseInput\n        id={ id }\n        size={ SIZE }\n        hint={ renderedHint }\n        disabled={ disabled }\n        isError={ isError }\n        onChange={ onChangeHandler }\n        onFocus={ onOpenDropdown }\n        placeholder={ placeholder }\n        value={ inputValue }\n        icons={ inputIcon }\n        styles={ inputStyles }\n        iconsStyles={ iconsStyles }\n        wrapperStyles={ emptyWrapperStyles }\n      />\n    </BaseSelect>\n  );\n};\n\nconst StoryComponent: React.FC<SelectProps> = () => null;\nStoryComponent.defaultProps = DEFAULT_PROPS;\n\nexport { InputSelect, StoryComponent };\n"],"names":["DEFAULT_PROPS","emptyWrapperStyles","InputSelect","_a","id","items","label","_b","placeholder","disabled","isError","showHint","hintMessage","_c","onChange","labelAside","activeValue","_d","size","_e","dataTestId","labelWidth","fieldName","fixedModeID","_f","useFormContext","LABEL_WIDTH","LABEL_ASIDE","SIZE","_g","useState","isOpenDropdown","setIsOpenDropdown","_h","inputValue","setInputValue","activeLabel","useMemo","find","item","value","filteredItems","filter","toLowerCase","includes","onItemClickHandler","useCallback","onChangeHandler","length","undefined","onOpenDropdown","onHandleClickOutside","inputIcon","icon","React","IconSearch","IconChevronDown","onClick","useEffect","renderedLabel","InputLabel","color","getLabelColor","text","htmlFor","renderedHint","InputHint","BaseSelect","hint","onItemClick","onCloseDropdown","BaseInput","onFocus","icons","styles","inputStyles","iconsStyles","wrapperStyles"],"mappings":"urBAgBA,IAAMA,EACE,UADFA,EAEQ,kBAFRA,EAGS,GAGTC,EAAqB,GAErBC,EAAc,SAACC,OACnBC,OACAC,UACAC,UACAC,gBAAAC,aAAcR,IACdS,aACAC,YACAC,aACAC,gBACAC,aAAAC,aAAW,eACXC,eACAC,gBACAC,SAAAC,aAAOlB,IACPmB,eAAAC,aAAapB,IACbqB,eACAC,cACAC,gBAEMC,EAAqCC,EAAe,CAAEJ,aAAYN,aAAYG,SAA5EQ,gBAAaC,gBAAaC,SAE5BC,EAAsCC,GAAS,GAA9CC,OAAgBC,OACjBC,EAA8BH,EAAS,IAAtCI,OAAYC,OAEbC,EAAcC,GAAQ,iBAAM,iBAAAhC,EAAMiC,MAAK,SAAAC,GAAQ,OAAAA,EAAKC,QAAUxB,2BAAcV,QAAO,CAACU,EAAaX,IAEjGoC,EAAgBJ,GAAQ,WAAM,OAAAhC,EAAMqC,QAAO,SAAAH,GAAQ,OAAAA,EAAKjC,MAAMqC,cACjEC,SAASV,EAAWS,oBAAiB,CAACT,EAAY7B,IAE/CwC,EAAqBC,GAAY,SAACN,GACtC1B,EAAS0B,EAAOlB,GAChBU,GAAkB,KACjB,CAACV,EAAWR,IAETiC,EAAkBD,GAAY,SAACN,GACnCL,EAAcK,GAEO,IAAjBA,EAAMQ,QACRlC,OAASmC,EAAW3B,KAErB,CAACA,EAAWR,IAEToC,GAAiBJ,GAAY,WAAY,OAAAd,GAAkB,KAAO,IAElEmB,GAAuBL,GAAY,WACpB,KAAfZ,GACFpB,OAASmC,EAAW3B,GAGtBa,EAAcC,GAAe,IAC7BJ,GAAkB,KACjB,CAACE,EAAYE,EAAatB,EAAUQ,IAEjC8B,GAAYf,GAAQ,WAAM,MAAA,CAC9B,CACEgB,KAAMtB,EAAiBuB,gBAACC,QAAgBD,gBAACE,QACzCC,QAASP,OAEV,CAACnB,EAAgBmB,KAEpBQ,GAAU,WAAM,OAAAvB,EAAcC,GAAe,MAAK,CAACA,EAAapB,EAAaX,IAE7E,IAAMsD,GAAgBrD,EAElBgD,gBAACM,GACCC,MAAQC,EAAcrD,GACtBsD,KAAOzD,EACPY,KAAOU,EACPoC,QAAU5D,IAGZ,KAEE6D,GAAetD,EAEjB2C,gBAACY,GACCzD,SAAWA,EACXC,QAAUA,EACVE,YAAcA,IAGhB,KAEJ,OACE0C,gBAACa,GACCjD,KAAOU,EACPtB,MAAQqD,GACRlD,SAAWA,EACXM,WAAaY,EACbP,WAAaA,EACbgD,KAAOH,GACPtD,SAAWA,EACXD,QAAUA,EACVL,MAAQ6B,EAAaO,EAAgBpC,EACrC0B,eAAiBA,EACjBf,YAAcA,EACdqD,YAAcxB,EACdyB,gBAAkBnB,GAClB9B,WAAaK,EACbH,YAAcA,GAEd+B,gBAACiB,GACCnE,GAAKA,EACLc,KAAOU,EACPwC,KAAOH,GACPxD,SAAWA,EACXC,QAAUA,EACVI,SAAWiC,EACXyB,QAAUtB,GACV1C,YAAcA,EACdgC,MAAQN,EACRuC,MAAQrB,GACRsB,OAASC,EACTC,YAAcA,EACdC,cAAgB5E,IAIxB"}