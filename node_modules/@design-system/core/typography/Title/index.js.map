{"version":3,"file":"index.js","sources":["../../../src/typography/Title/index.tsx"],"sourcesContent":["import React from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\nimport { withLink } from 'core/shared/linkHOC';\nimport { FontCommon } from 'core/types/common';\nimport {\n  useFontColor,\n  useFontIndex,\n  useHighlightColor,\n  useTextDecoration\n} from 'core/shared/typographyHooks';\nimport useFont from 'core/shared/typographyHooks/useFont';\nimport type { TitleFontWeight, TitleVariant } from 'core/shared/typographyHooks/useFont/types';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\nconst getTag = (variant: TitleVariant): string => {\n  switch (variant) {\n    case 'h2_default':\n    case 'h2_large':\n      return 'h2';\n\n    case 'h3_default':\n      return 'h3';\n\n    case 'h4_default':\n      return 'h4';\n\n    case 'h1_default':\n    case 'h1_large':\n    case 'h1_extra_large':\n    case 'h1_display':\n    default:\n      return 'h1';\n  }\n};\n\nexport interface TitleProps extends FontCommon {\n  /** Вариант заголовка */\n  variant: TitleVariant;\n\n  /** Насыщенность шрифта */\n  fontWeight?: TitleFontWeight;\n\n  /** Коллбэк, вызываемый при нажатии на заголовок */\n  onClick?: React.MouseEventHandler<HTMLElement>;\n\n  /** Флаг для отрисовки span вместо h1-h5 */\n  pseudo?: boolean;\n\n  /** Флаг для курсивного начертания */\n  italic?: boolean;\n}\n\nconst Title: React.FC<TitleProps> = ({\n  variant,\n  fontWeight = 'regular',\n  color = 'primary',\n  pseudo = false,\n  onClick,\n  inline = false,\n  highlightingColor,\n  fontIndex,\n  dataTestId,\n  italic,\n  lineThrough,\n  underline,\n  children\n}) => {\n  const colorClassName = useFontColor(color);\n  const textDecorationClassName = useTextDecoration(lineThrough, underline);\n  const fontIndexClassName = useFontIndex(fontIndex);\n  const style = useHighlightColor(highlightingColor);\n  const isInline = Boolean(style?.backgroundColor || inline || fontIndex);\n  const fontClass = useFont(variant, fontWeight, !!fontIndex);\n  const titleClasses = cd(\n    'title',\n    {\n      inline: isInline,\n      italic\n    },\n    [\n      fontClass,\n      colorClassName,\n      textDecorationClassName,\n      fontIndexClassName\n    ]\n  );\n\n  return React.createElement(\n    fontIndex || (pseudo ? 'span' : getTag(variant)),\n    {\n      'data-test-id': dataTestId,\n      onClick,\n      className: titleClasses,\n      style\n    },\n    children\n  );\n};\n\nconst MemoizedTitle = React.memo(Title);\n\nconst WithLinkTitle = withLink(MemoizedTitle);\n\nexport { WithLinkTitle as Title };\n\nexport default WithLinkTitle;\n"],"names":["cd","cssDecorator","styles","WithLinkTitle","withLink","React","memo","_a","variant","_b","fontWeight","_c","color","_d","pseudo","onClick","_e","inline","highlightingColor","fontIndex","dataTestId","italic","lineThrough","underline","children","colorClassName","useFontColor","textDecorationClassName","useTextDecoration","fontIndexClassName","useFontIndex","style","useHighlightColor","isInline","Boolean","backgroundColor","fontClass","useFont","titleClasses","createElement","getTag","className"],"mappings":"2oBAeA,IAAMA,EAAKC,EAAaC,GAyFlBC,EAAgBC,EAFAC,EAAMC,MA/CQ,SAACC,OACnCC,YACAC,eAAAC,aAAa,YACbC,UAAAC,aAAQ,YACRC,WAAAC,gBACAC,YACAC,WAAAC,gBACAC,sBACAC,cACAC,eACAC,WACAC,gBACAC,cACAC,aAEMC,EAAiBC,EAAad,GAC9Be,EAA0BC,EAAkBN,EAAaC,GACzDM,EAAqBC,EAAaX,GAClCY,EAAQC,EAAkBd,GAC1Be,EAAWC,SAAQH,eAAAA,EAAOI,kBAAmBlB,GAAUE,GACvDiB,EAAYC,EAAQ7B,EAASE,IAAcS,GAC3CmB,EAAetC,EACnB,QACA,CACEiB,OAAQgB,EACRZ,UAEF,CACEe,EACAX,EACAE,EACAE,IAIJ,OAAOxB,EAAMkC,cACXpB,IAAcL,EAAS,OA1EZ,SAACN,GACd,OAAQA,GACN,IAAK,aACL,IAAK,WACH,MAAO,KAET,IAAK,aACH,MAAO,KAET,IAAK,aACH,MAAO,KAMT,QACE,MAAO,KAEb,CAuDoCgC,CAAOhC,IACvC,CACE,eAAgBY,EAChBL,UACA0B,UAAWH,EACXP,SAEFP,EAEJ"}