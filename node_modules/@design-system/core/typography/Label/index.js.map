{"version":3,"file":"index.js","sources":["../../../src/typography/Label/index.tsx"],"sourcesContent":["import React from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\nimport { FontCommon } from 'core/types/common';\nimport { useFontColor } from 'core/shared/typographyHooks';\n\nimport { LabelSize } from './types';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\ntype CommonProps = Pick<FontCommon<null>, 'inline' | 'dataTestId' | 'children' | 'color'>;\n\nexport interface LabelProps extends CommonProps {\n  /** Тип лэйбла */\n  size?: LabelSize;\n\n  /** Атрибут связи с элементом формы */\n  htmlFor?: string;\n\n  /** Имя тега (при заполненном htmlFor будет игнорироваться) */\n  tagName?: 'div' | 'span';\n}\n\nconst Label: React.FC<LabelProps> = ({\n  size = 'default',\n  color = 'primary',\n  tagName = 'label',\n  htmlFor,\n  inline,\n  children,\n  dataTestId\n}) => {\n  const colorClassName = useFontColor(color);\n  const labelClasses = cd(\n    'label',\n    {\n      [`size_${ size }`]: 1,\n      inline\n    },\n    colorClassName\n  );\n\n  return React.createElement(\n    htmlFor ? 'label' : tagName,\n    {\n      'data-test-id': dataTestId,\n      htmlFor,\n      className: labelClasses\n    },\n    children\n  );\n};\n\nconst MemoizedLabel = React.memo(Label);\n\nMemoizedLabel.displayName = 'Label';\n\nexport { Label };\n\nexport default MemoizedLabel;\n"],"names":["cd","cssDecorator","styles","Label","_a","_c","size","_d","color","_e","tagName","htmlFor","inline","children","dataTestId","colorClassName","useFontColor","labelClasses","_b","React","createElement","className","MemoizedLabel","memo","displayName"],"mappings":"mRASA,IAAMA,EAAKC,EAAaC,GAclBC,EAA8B,SAACC,SACnCC,SAAAC,aAAO,YACPC,UAAAC,aAAQ,YACRC,YAAAC,aAAU,UACVC,YACAC,WACAC,aACAC,eAEMC,EAAiBC,EAAaR,GAC9BS,EAAejB,EACnB,gBAEG,QAASM,GAAU,EACpBY,cAEFH,GAGF,OAAOI,EAAMC,cACXT,EAAU,QAAUD,EACpB,CACE,eAAgBI,EAChBH,UACAU,UAAWJ,GAEbJ,EAEJ,EAEMS,EAAgBH,EAAMI,KAAKpB,GAEjCmB,EAAcE,YAAc"}