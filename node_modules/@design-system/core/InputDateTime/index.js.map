{"version":3,"file":"index.js","sources":["../../src/InputDateTime/index.tsx"],"sourcesContent":["import React, { useCallback, useContext, useMemo } from 'react';\nimport { setHours, setMinutes } from 'date-fns';\nimport { cssDecorator } from '@front-toolkit/utils';\nimport { InputCalendar } from 'core/src/Calendar/InputCalendar';\nimport { getTimePrefix } from 'core/utils/getTimePrefix';\nimport { InputTime, InputTimeProps } from 'core/src/InputTime';\nimport { InputWrapper } from 'shared/InputWrapper';\nimport { useFormContext } from 'shared/Form/formContext';\nimport { InputWrapperContext } from 'shared/InputWrapper/InputWrapperContext';\nimport { CalendarProps } from 'shared/types/calendar';\nimport { FormSize } from 'shared/Form/types';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\nexport interface InputDateTimeProps {\n  /** Подсказка */\n  hintMessage?: string;\n\n  /** Ярлык */\n  label?: string;\n\n  /** Размер */\n  size?: FormSize;\n\n  /** Флаг, если компенент не активен */\n  disabled?: boolean;\n\n  /** Флаг при ошибке */\n  isError?: boolean;\n\n  /** Флаг расположения ярлыка */\n  labelAside?: boolean;\n\n  /** Коллбэк, возвращающий выбранную дату и время */\n  onChange: (value: Date) => void;\n\n  /** Свойства для компонента InputTime */\n  inputCalendar?: CalendarProps;\n\n  /** Свойства для компонента InputTime */\n  inputTime?: InputTimeProps;\n\n  /** Начальное значение */\n  value?: Date | string;\n\n  /** ID для тестирования */\n  dataTestId?: string;\n\n  /** Флаг отображения подсказки / ошибки */\n  showHint?: boolean;\n\n  /** Ширина label */\n  labelWidth?: number;\n\n  /** Отключает по дефолту заданную минимальную ширину инпута */\n  withoutDefaultMinWidth?: boolean;\n\n  /** id поля ввода */\n  id?: string;\n}\n\n/**\n * @deprecated Компонент более не поддерживается и будет удален.\n * Используйте новый: {@link @design-system/core/CalendarV2}\n * */\nexport const InputDateTime: React.FC<InputDateTimeProps> = ({\n  size = 'default',\n  disabled = false,\n  isError = false,\n  labelAside = false,\n  label = '',\n  hintMessage = '',\n  inputCalendar,\n  inputTime,\n  onChange,\n  value,\n  showHint = false,\n  dataTestId,\n  withoutDefaultMinWidth,\n  id,\n  labelWidth\n}) => {\n  const parentWrapperSize = useContext(InputWrapperContext)?.size ?? size;\n  const { LABEL_WIDTH, LABEL_ASIDE, SIZE } = useFormContext({ labelWidth, labelAside, size: parentWrapperSize });\n\n  const { date, time } = useMemo(() => {\n    if (value) {\n      const dateObject = new Date(value);\n      const hours = +(dateObject.getHours());\n      const minutes = +(dateObject.getMinutes());\n\n      return {\n        date: dateObject,\n        time: `${ getTimePrefix(hours) }:${ getTimePrefix(minutes) }`\n      };\n    }\n\n    return {\n      date: undefined,\n      time: ''\n    };\n  }, [value]);\n\n  const handleChangeDate = useCallback((dates: Date[]): void => {\n    const changedDate = dates[0];\n\n    if (changedDate && changedDate !== date) {\n      onChange(changedDate);\n    }\n  }, [onChange, date]);\n\n  const handleChangeTime = useCallback((changedTime: string) => {\n    const [h, m] = changedTime && changedTime.split(':').length >= 2\n      ? changedTime.split(':')\n      : ['00', '00'];\n\n    const copyDate = date ? new Date(date) : new Date();\n    const dateTime = setHours(setMinutes(copyDate, +m), +h);\n\n    onChange(dateTime);\n  }, [onChange, date]);\n\n  return (\n    <InputWrapper\n      label={ label }\n      hint={ hintMessage }\n      styles={ styles }\n      showHint={ showHint }\n      size={ SIZE }\n      disabled={ disabled }\n      labelAside={ LABEL_ASIDE }\n      labelWidth={ LABEL_WIDTH }\n      isError={ isError }\n      withoutDefaultMinWidth={ withoutDefaultMinWidth }\n      htmlFor={ id }\n      dataTestId={ dataTestId }\n    >\n      <div className={ cd('input_date_time', { [`${ SIZE }`]: true }) }>\n        <InputCalendar\n          { ...inputCalendar }\n          id={ id }\n          value={ date }\n          onSelectedDateChange={ handleChangeDate }\n          disabled={ disabled }\n          isError={ isError }\n          withoutDefaultMinWidth\n        />\n        <InputTime\n          { ...inputTime }\n          value={ time }\n          onChange={ handleChangeTime }\n          disabled={ disabled }\n          isError={ isError }\n        />\n      </div>\n    </InputWrapper>\n  );\n};\n"],"names":["cd","cssDecorator","styles","InputDateTime","_a","_e","size","_f","disabled","_g","isError","_h","labelAside","_j","label","_k","hintMessage","inputCalendar","inputTime","onChange","value","_l","showHint","dataTestId","withoutDefaultMinWidth","id","labelWidth","parentWrapperSize","useContext","InputWrapperContext","_m","useFormContext","LABEL_WIDTH","LABEL_ASIDE","SIZE","_o","useMemo","dateObject","Date","hours","getHours","minutes","getMinutes","date","time","getTimePrefix","undefined","handleChangeDate","useCallback","dates","changedDate","handleChangeTime","changedTime","split","length","h","m","copyDate","dateTime","setHours","setMinutes","React","InputWrapper","hint","htmlFor","className","_b","InputCalendar","onSelectedDateChange","InputTime"],"mappings":"4nBAcA,IAAMA,EAAKC,EAAaC,GAqDXC,EAA8C,SAACC,aAC1DC,SAAAC,aAAO,YACPC,aAAAC,gBACAC,YAAAC,gBACAC,eAAAC,gBACAC,UAAAC,aAAQ,KACRC,gBAAAC,aAAc,KACdC,kBACAC,cACAC,aACAC,UACAC,aAAAC,gBACAC,eACAC,2BACAC,OACAC,eAEMC,sBAAoBC,EAAWC,yBAAsBvB,oBAAQA,EAC7DwB,EAAqCC,EAAe,CAAEL,aAAYd,aAAYN,KAAMqB,IAAlFK,gBAAaC,gBAAaC,SAE5BC,EAAiBC,GAAQ,WAC7B,GAAIhB,EAAO,CACT,IAAMiB,EAAa,IAAIC,KAAKlB,GACtBmB,GAAUF,EAAWG,WACrBC,GAAYJ,EAAWK,aAE7B,MAAO,CACLC,KAAMN,EACNO,KAAUC,EAAcN,OAAYM,EAAcJ,IAItD,MAAO,CACLE,UAAMG,EACNF,KAAM,MAEP,CAACxB,IAhBIuB,SAAMC,SAkBRG,EAAmBC,GAAY,SAACC,GACpC,IAAMC,EAAcD,EAAM,GAEtBC,GAAeA,IAAgBP,GACjCxB,EAAS+B,KAEV,CAAC/B,EAAUwB,IAERQ,EAAmBH,GAAY,SAACI,GAC9B,IAAAhD,EAASgD,GAAeA,EAAYC,MAAM,KAAKC,QAAU,EAC3DF,EAAYC,MAAM,KAClB,CAAC,KAAM,MAFJE,OAAGC,OAIJC,EAAWd,EAAO,IAAIL,KAAKK,GAAQ,IAAIL,KACvCoB,EAAWC,EAASC,EAAWH,GAAWD,IAAKD,GAErDpC,EAASuC,KACR,CAACvC,EAAUwB,IAEd,OACEkB,gBAACC,GACChD,MAAQA,EACRiD,KAAO/C,EACPd,OAASA,EACToB,SAAWA,EACXhB,KAAO4B,EACP1B,SAAWA,EACXI,WAAaqB,EACbP,WAAaM,EACbtB,QAAUA,EACVc,uBAAyBA,EACzBwC,QAAUvC,EACVF,WAAaA,GAEbsC,uBAAKI,UAAYjE,EAAG,wBAAqBkE,EAAC,GAAIhC,IAAU,OACtD2B,gBAACM,OACMlD,GACLQ,GAAKA,EACLL,MAAQuB,EACRyB,qBAAuBrB,EACvBvC,SAAWA,EACXE,QAAUA,EACVc,6BAEFqC,gBAACQ,OACMnD,GACLE,MAAQwB,EACRzB,SAAWgC,EACX3C,SAAWA,EACXE,QAAUA,MAKpB"}