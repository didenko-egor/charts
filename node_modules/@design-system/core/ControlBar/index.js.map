{"version":3,"file":"index.js","sources":["../../src/ControlBar/index.tsx"],"sourcesContent":["import React from 'react';\nimport * as ReactDOMServer from 'react-dom/server';\nimport { cssDecorator } from '@front-toolkit/utils';\n\nimport { ControlButtons, ControlStyle } from './types';\nimport ControllButton from './ContollButton';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\nexport interface ControlBarProps {\n  /** Список элементов-кнопок */\n  controlButtons: ControlButtons[];\n\n  /** Цветовая схема отображения ControlBar */\n  colorStyle?: ControlStyle;\n\n  /** ID для тестирования */\n  dataTestId?: string;\n}\n\nexport const ControlBar: React.FC<ControlBarProps> = ({\n  controlButtons,\n  dataTestId,\n  colorStyle = 'default'\n}) => {\n  if (!controlButtons) {\n    return null;\n  }\n\n  return (\n    <div\n      className={ cd('wrapper', { [colorStyle]: true }) }\n      data-test-id={ dataTestId }\n    >\n      { controlButtons.map(button => {\n        const IconComponent = button.icon;\n\n        return (\n          <ControllButton\n            colorStyle={ colorStyle }\n            disabled={ button.disabled }\n            onClick={ button.onClick }\n            key={ ReactDOMServer.renderToString(IconComponent) }\n          >\n            { IconComponent }\n          </ControllButton>\n        );\n      }) }\n    </div>\n  );\n};\n"],"names":["cd","cssDecorator","styles","ControlBar","_a","controlButtons","dataTestId","_c","colorStyle","React","className","_b","map","button","IconComponent","icon","ControllButton","disabled","onClick","key","ReactDOMServer","renderToString"],"mappings":"8KASA,IAAMA,EAAKC,EAAaC,GAaXC,EAAwC,SAACC,SACpDC,mBACAC,eACAC,eAAAC,aAAa,YAEb,OAAKH,EAKHI,uBACEC,UAAYV,EAAG,gBAAaW,EAACH,IAAa,qBAC3BF,GAEbD,EAAeO,KAAI,SAAAC,GACnB,IAAMC,EAAgBD,EAAOE,KAE7B,OACEN,gBAACO,GACCR,WAAaA,EACbS,SAAWJ,EAAOI,SAClBC,QAAUL,EAAOK,QACjBC,IAAMC,EAAeC,eAAeP,IAElCA,OAlBH,IAwBX"}