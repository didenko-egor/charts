{"version":3,"file":"ScrollArea.js","sources":["../../../src/Modals/Modal/ScrollArea.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { ScrollBox } from 'shared/ScrollBox';\n\nimport { useScrollResizeObserver } from '../useScrollResizeObserver';\n\nimport styles from './styles.scss';\n\nexport const ScrollArea: React.FC<{ isFullscreen: boolean; withoutScroll: boolean }> = (\n  {\n    children,\n    isFullscreen,\n    withoutScroll\n  }\n) => {\n  const {\n    setInnerWrapperRef,\n    scrollBoxWidth,\n    overrideScrollBoxClassName,\n    scrollParentClassName,\n    scrollParentStyle\n  } = useScrollResizeObserver(styles.scroll_parent);\n\n  const contentBlock = useMemo(() => (\n    <div className={ styles.content } ref={ isFullscreen ? null : setInnerWrapperRef }>\n      { children }\n    </div>\n  ), [isFullscreen, setInnerWrapperRef, children]);\n\n  return (\n    <div\n      className={ scrollParentClassName }\n      style={ scrollParentStyle }\n      ref={ isFullscreen ? setInnerWrapperRef : null }\n    >\n      { withoutScroll && isFullscreen ? (\n        contentBlock\n      ) : (\n        <ScrollBox overrideWrapperClassName={ overrideScrollBoxClassName } width={ scrollBoxWidth }>\n          { contentBlock }\n        </ScrollBox>\n      ) }\n    </div>\n  );\n};\n"],"names":["ScrollArea","_a","children","isFullscreen","withoutScroll","_b","useScrollResizeObserver","styles","scroll_parent","setInnerWrapperRef","scrollBoxWidth","overrideScrollBoxClassName","scrollParentClassName","scrollParentStyle","contentBlock","useMemo","React","className","content","ref","style","ScrollBox","overrideWrapperClassName","width"],"mappings":"iNAOaA,EAA0E,SACrFC,OACEC,aACAC,iBACAC,kBAGIC,EAMFC,EAAwBC,EAAOC,eALjCC,uBACAC,mBACAC,+BACAC,0BACAC,sBAGIC,EAAeC,GAAQ,WAAM,OACjCC,uBAAKC,UAAYV,EAAOW,QAAUC,IAAMhB,EAAe,KAAOM,GAC1DP,KAEH,CAACC,EAAcM,EAAoBP,IAEtC,OACEc,uBACEC,UAAYL,EACZQ,MAAQP,EACRM,IAAMhB,EAAeM,EAAqB,MAExCL,GAAiBD,IAGjBa,gBAACK,GAAUC,yBAA2BX,EAA6BY,MAAQb,GACvEI,GAKZ"}