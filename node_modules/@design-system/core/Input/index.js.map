{"version":3,"file":"index.js","sources":["../../src/Input/index.tsx"],"sourcesContent":["import 'focus-visible';\nimport React from 'react';\nimport { ShareableInputProps } from 'shared/types/input';\nimport { BaseInput, DEFAULT_PROPS as BASE_INPUT_DEFAULT_PROPS } from 'shared/BaseInput';\nimport { InputHint, InputLabel } from 'core/shared';\nimport { InputAndFieldCommonProps } from 'core/types/input';\nimport { useFormContext } from 'shared/Form/formContext';\nimport { FormSize } from 'shared/Form/types';\nimport getLabelColor from 'core/utils/getLabelColor';\n\nimport wrapperStyles from 'shared/InputWrapper/coreStyles.scss';\nimport iconsStyles from 'shared/BaseInput/WithIcons/coreStyles.scss';\nimport styles from 'shared/BaseInput/coreStyles.scss';\n\nexport interface InputProps extends ShareableInputProps, InputAndFieldCommonProps {}\n\nconst Input: React.FC<InputProps> = ({\n  id,\n  size = 'default',\n  label,\n  disabled,\n  isError,\n  dataTestHintId,\n  hintMessage,\n  showHint,\n  maxLength,\n  counter,\n  ...rest\n}) => {\n  const { SIZE } = useFormContext({ size: size as FormSize });\n\n  const renderedLabel = label ? (\n    <InputLabel\n      color={ getLabelColor(disabled) }\n      text={ label }\n      size={ SIZE }\n      htmlFor={ id }\n    />\n  )\n    : null;\n\n  const renderedHint = showHint ? (\n    <InputHint\n      disabled={ disabled }\n      isError={ isError }\n      dataTestId={ dataTestHintId }\n      hintMessage={ hintMessage }\n    />\n  )\n    : null;\n\n  return (\n    <BaseInput\n      { ...rest }\n      id={ id }\n      size={ SIZE }\n      disabled={ disabled }\n      isError={ isError }\n      showHint={ showHint }\n      hint={ renderedHint }\n      label={ renderedLabel }\n      styles={ styles }\n      wrapperStyles={ wrapperStyles }\n      iconsStyles={ iconsStyles }\n      maxLength={ maxLength }\n      counter={ counter }\n    />\n  );\n};\n\nInput.defaultProps = {\n  ...BASE_INPUT_DEFAULT_PROPS\n} as InputProps;\n\nexport { Input };\n"],"names":["Input","_a","id","_b","size","label","disabled","isError","dataTestHintId","hintMessage","showHint","maxLength","counter","rest","SIZE","useFormContext","renderedLabel","React","InputLabel","color","getLabelColor","text","htmlFor","renderedHint","InputHint","dataTestId","BaseInput","hint","styles","wrapperStyles","iconsStyles","defaultProps","__assign","BASE_INPUT_DEFAULT_PROPS"],"mappings":"kwBAgBMA,EAA8B,SAACC,GACnC,IAAAC,OACAC,SAAAC,aAAO,YACPC,UACAC,aACAC,YACAC,mBACAC,gBACAC,aACAC,cACAC,YACGC,MAXgC,4GAa3BC,EAASC,EAAe,CAAEX,KAAMA,SAElCY,EAAgBX,EACpBY,gBAACC,GACCC,MAAQC,EAAcd,GACtBe,KAAOhB,EACPD,KAAOU,EACPQ,QAAUpB,IAGV,KAEEqB,EAAeb,EACnBO,gBAACO,GACClB,SAAWA,EACXC,QAAUA,EACVkB,WAAajB,EACbC,YAAcA,IAGd,KAEJ,OACEQ,gBAACS,OACMb,GACLX,GAAKA,EACLE,KAAOU,EACPR,SAAWA,EACXC,QAAUA,EACVG,SAAWA,EACXiB,KAAOJ,EACPlB,MAAQW,EACRY,OAASA,EACTC,cAAgBA,EAChBC,YAAcA,EACdnB,UAAYA,EACZC,QAAUA,IAGhB,EAEAZ,EAAM+B,aAAeC,KAChBC"}