/// <reference types="react" />
import React from 'react';
import { SizeVariant } from "./common-03e05004";
type ModalSize = Exclude<SizeVariant, 'large'>;
interface BaseModalProps {
    /** Заголовок */
    label: string | React.ReactElement;
    /** Описание */
    description?: string;
    /** ID для тестирования */
    dataTestId?: string;
    /** Массив компонентов футера слева */
    footerItemsLeft?: React.ReactElement[];
    /** Массив компонентов футера справа */
    footerItemsRight?: React.ReactElement[];
    /** Функция клика по крестику */
    onClose?: () => void;
    /** Функция клика по оверлею */
    onOverlayClick?: () => void;
    /** Z-index диалога. По умолчанию 400 */
    zIndex?: number;
    /** Селектор, в который рендерить модалку */
    selector?: string;
    /** Размер диалогового окна */
    size?: ModalSize;
}
interface DialogModalProps extends BaseModalProps {
    /** Флаг для встраивания description в качестве html-разметки */
    isHTMLDescription?: boolean;
    /** Дочерний компонент для рендера контента */
    children?: React.ReactElement;
}
interface ModalProps extends BaseModalProps {
    /** Флаг полноэкранной модалки */
    isFullscreen?: boolean;
    /** Флаг полноэкранной модалки */
    withoutScroll?: boolean;
    /** Дочерний компонент для рендера контента */
    children: React.ReactElement;
}
interface FooterProps {
    /** Размер модального окна */
    size?: ModalSize;
    /** Массив компонентов футера слева */
    footerItemsLeft?: React.ReactElement[];
    /** Массив компонентов футера справа */
    footerItemsRight?: React.ReactElement[];
    /** ID для тестирования */
    dataTestId?: string;
}
interface HeaderProps {
    /** Заголовок */
    label: string | React.ReactElement;
    /** Размер модального окна */
    size?: ModalSize;
    /** ID для тестирования */
    dataTestId?: string;
    /** Функция клика по крестику */
    onClose?: () => void;
}
export { ModalSize, BaseModalProps, DialogModalProps, ModalProps, FooterProps, HeaderProps };
