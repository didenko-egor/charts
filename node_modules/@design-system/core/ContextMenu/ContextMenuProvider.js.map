{"version":3,"file":"ContextMenuProvider.js","sources":["../../src/ContextMenu/ContextMenuProvider.tsx"],"sourcesContent":["import React, {\n  useState,\n  useMemo,\n  createContext,\n  useContext,\n  ReactNode\n} from 'react';\n\nimport { Context } from './types';\n\nconst initContext: Context = {\n  expandedMenu: null,\n  hoveredId: null,\n  setExpandedMenu: () => {},\n  setHoveredId: () => {}\n};\n\nconst ContextMenuContext = createContext<Context>(initContext);\n\nexport const useContextMenuContext = (): Context => useContext(ContextMenuContext);\n\ninterface ContextMenuProviderProps {\n  children?: ReactNode;\n}\n\nconst ContextMenuProvider = ({ children }: ContextMenuProviderProps): JSX.Element => {\n  const [expandedMenu, setExpandedMenu] = useState<Context['expandedMenu']>(null);\n  const [hoveredId, setHoveredId] = useState<Context['hoveredId']>(null);\n\n  const context = useMemo(() => ({\n    expandedMenu,\n    setExpandedMenu,\n    setHoveredId,\n    hoveredId\n  }), [\n    expandedMenu,\n    setExpandedMenu,\n    setHoveredId,\n    hoveredId\n  ]);\n\n  return (\n    <ContextMenuContext.Provider value={ context }>\n      { children }\n    </ContextMenuContext.Provider>\n  );\n};\n\nexport default ContextMenuProvider;\n"],"names":["ContextMenuContext","createContext","expandedMenu","hoveredId","setExpandedMenu","setHoveredId","useContextMenuContext","useContext","ContextMenuProvider","_a","children","_b","useState","_c","context","useMemo","React","Provider","value"],"mappings":"oFAUA,IAOMA,EAAqBC,EAPE,CAC3BC,aAAc,KACdC,UAAW,KACXC,gBAAiB,aACjBC,aAAc,eAKHC,EAAwB,WAAe,OAAAC,EAAWP,IAMzDQ,EAAsB,SAACC,OAAEC,aACvBC,EAAkCC,EAAkC,MAAnEV,OAAcE,OACfS,EAA4BD,EAA+B,MAA1DT,OAAWE,OAEZS,EAAUC,GAAQ,WAAM,OAC5Bb,eACAE,kBACAC,eACAF,eACE,CACFD,EACAE,EACAC,EACAF,IAGF,OACEa,gBAAChB,EAAmBiB,UAASC,MAAQJ,GACjCJ,EAGR"}