{"version":3,"file":"position.js","sources":["../../../src/ContextMenu/utils/position.ts"],"sourcesContent":["import { isSSR } from '@front-toolkit/utils';\n\nimport { MousePosition, MenuPosition } from '../types';\n\nconst getWindowSize = (): { width: number; height: number } => (\n  !isSSR ? { width: window.innerWidth, height: window.innerHeight } : { width: 0, height: 0 }\n);\n\nconst getWindowScroll = (): { scrollX: number; scrollY: number } => (\n  !isSSR ? { scrollX: window.scrollX, scrollY: window.scrollY } : { scrollX: 0, scrollY: 0 }\n);\n\nconst MOUSE_POSITION_OFFSET = 4;\nconst SUBMENU_OFFSET = 8;\nconst MENU_OFFSET = 12;\nconst MENU_LEVEL = 2; // todo для реализации нескольких уровней заменить на входящий параметр\n\n/** Определить позицию меню */\nexport const calculateMenuPosition = (\n  menu: HTMLUListElement,\n  mousePosition: MousePosition,\n  srcMenuHeight: number\n): MenuPosition => {\n  const { width, height } = getWindowSize();\n  const { scrollY } = getWindowScroll();\n  const menuPosition = { x: 0, y: 0 };\n\n  const moveMenu = 'offsetWidth' in menu\n    && 'offsetHeight' in menu\n    && 'x' in mousePosition\n    && 'y' in mousePosition;\n\n  if (!moveMenu) return menuPosition;\n\n  const menuWidth = menu.offsetWidth;\n  const menuHeight = menu.offsetHeight;\n\n  const isFittedRight = mousePosition.x + menuWidth <= width;\n  const isFittedLeft = mousePosition.x - menuWidth >= 0;\n  const isFittedDown = mousePosition.y + srcMenuHeight < height - MOUSE_POSITION_OFFSET - MENU_OFFSET;\n  const isFittedUp = mousePosition.y - srcMenuHeight - MENU_OFFSET - MOUSE_POSITION_OFFSET >= 0;\n\n  if (isFittedRight || (!isFittedLeft && !isFittedRight)) {\n    menuPosition.x = mousePosition.x + MOUSE_POSITION_OFFSET;\n  }\n\n  if (!isFittedRight && isFittedLeft) {\n    menuPosition.x = mousePosition.x - menuWidth - MOUSE_POSITION_OFFSET;\n  }\n\n  if (!isFittedDown && !isFittedUp) {\n    menuPosition.y = scrollY + height - menuHeight - MENU_OFFSET;\n\n    return menuPosition;\n  }\n\n  if (isFittedDown) {\n    menuPosition.y = mousePosition.y + MOUSE_POSITION_OFFSET + scrollY;\n\n    return menuPosition;\n  }\n\n  if (isFittedUp) {\n    menuPosition.y = mousePosition.y - menuHeight - MOUSE_POSITION_OFFSET + scrollY;\n\n    return menuPosition;\n  }\n\n  return menuPosition;\n};\n\n/** Определить позицию подменю */\nexport const calculateSubmenuPosition = (\n  parentNode: HTMLLIElement,\n  elementsCount: number\n): MenuPosition => {\n  const { width, height } = getWindowSize();\n  const { scrollY } = getWindowScroll();\n  const menuPosition: MenuPosition = { x: 0, y: 0 };\n\n  const moveSubmenu = 'getBoundingClientRect' in parentNode && elementsCount > 0;\n\n  if (!moveSubmenu) return menuPosition;\n\n  const {\n    x,\n    y,\n    width: parentNodeWidth,\n    height: parentNodeHeight\n  } = parentNode.getBoundingClientRect();\n  const subMenuHeight = parentNodeHeight * elementsCount;\n\n  const isFittedRight = x + (parentNodeWidth * MENU_LEVEL) <= width;\n  const isFittedLeft = x - (parentNodeWidth) >= 0;\n  const isFittedDown = y + subMenuHeight < height - MOUSE_POSITION_OFFSET;\n  const isFittedUp = y - subMenuHeight >= 0;\n\n  if (isFittedRight || (!isFittedRight && !isFittedLeft)) {\n    menuPosition.x = x + parentNodeWidth;\n  }\n\n  if (!isFittedRight && isFittedLeft) {\n    menuPosition.x = x - parentNodeWidth;\n  }\n\n  if (isFittedDown) {\n    menuPosition.y = y - SUBMENU_OFFSET + scrollY;\n\n    return menuPosition;\n  }\n\n  if (isFittedUp && !isFittedDown) {\n    menuPosition.y = y - subMenuHeight + parentNodeHeight - SUBMENU_OFFSET + scrollY;\n\n    return menuPosition;\n  }\n\n  if (!isFittedDown && !isFittedUp) {\n    menuPosition.y = MENU_OFFSET + scrollY;\n\n    return menuPosition;\n  }\n\n  return menuPosition;\n};\n"],"names":["getWindowSize","isSSR","width","height","window","innerWidth","innerHeight","getWindowScroll","scrollX","scrollY","calculateMenuPosition","menu","mousePosition","srcMenuHeight","_a","menuPosition","x","y","menuWidth","offsetWidth","menuHeight","offsetHeight","isFittedRight","isFittedLeft","isFittedDown","isFittedUp","calculateSubmenuPosition","parentNode","elementsCount","_b","getBoundingClientRect","parentNodeWidth","parentNodeHeight","subMenuHeight"],"mappings":"6CAIA,IAAMA,EAAgB,WAAyC,OAC5DC,EAAmE,CAAEC,MAAO,EAAGC,OAAQ,GAA/E,CAAED,MAAOE,OAAOC,WAAYF,OAAQC,OAAOE,cAGhDC,EAAkB,WAA4C,OACjEN,EAA+D,CAAEO,QAAS,EAAGC,QAAS,GAA9E,CAAED,QAASJ,OAAOI,QAASC,QAASL,OAAOK,UASzCC,EAAwB,SACnCC,EACAC,EACAC,GAEM,IAAAC,EAAoBd,IAAlBE,UAAOC,WACPM,EAAYF,YACdQ,EAAe,CAAEC,EAAG,EAAGC,EAAG,GAOhC,KALiB,gBAAiBN,GAC7B,iBAAkBA,GAClB,MAAOC,GACP,MAAOA,GAEG,OAAOG,EAEtB,IAAMG,EAAYP,EAAKQ,YACjBC,EAAaT,EAAKU,aAElBC,EAAgBV,EAAcI,EAAIE,GAAahB,EAC/CqB,EAAeX,EAAcI,EAAIE,GAAa,EAC9CM,EAAeZ,EAAcK,EAAIJ,EAAgBV,EA3B3B,EAEV,GA0BZsB,EAAab,EAAcK,EAAIJ,EA1BnB,GAFU,GA4BgE,EAU5F,OARIS,IAAmBC,IAAiBD,KACtCP,EAAaC,EAAIJ,EAAcI,EA/BL,IAkCvBM,GAAiBC,IACpBR,EAAaC,EAAIJ,EAAcI,EAAIE,EAnCT,GAsCvBM,GAAiBC,EAMlBD,GACFT,EAAaE,EAAIL,EAAcK,EA7CL,EA6CiCR,EAEpDM,GAGLU,GACFV,EAAaE,EAAIL,EAAcK,EAAIG,EAnDT,EAmD8CX,EAEjEM,GAGFA,GAjBLA,EAAaE,EAAIR,EAAUN,EAASiB,EArCpB,GAuCTL,EAgBX,EAGaW,EAA2B,SACtCC,EACAC,GAEM,IAAAd,EAAoBd,IAAlBE,UAAOC,WACPM,EAAYF,YACdQ,EAA6B,CAAEC,EAAG,EAAGC,EAAG,GAI9C,KAFoB,0BAA2BU,GAAcC,EAAgB,GAE3D,OAAOb,EAEnB,IAAAc,EAKFF,EAAWG,wBAJbd,MACAC,MACOc,UACCC,WAEJC,EAAgBD,EAAmBJ,EAEnCN,EAAgBN,EA7EL,EA6EUe,GAAiC7B,EACtDqB,EAAeP,KAAyB,EACxCQ,EAAeP,EAAIgB,EAAgB9B,EAlFb,EAmFtBsB,EAAaR,EAAIgB,GAAiB,EAUxC,OARIX,IAAmBA,IAAkBC,KACvCR,EAAaC,EAAIA,EAAIe,IAGlBT,GAAiBC,IACpBR,EAAaC,EAAIA,EAAIe,GAGnBP,GACFT,EAAaE,EAAIA,EA7FE,EA6FmBR,EAE/BM,GAGLU,IAAeD,GACjBT,EAAaE,EAAIA,EAAIgB,EAAgBD,EAnGlB,EAmGsDvB,EAElEM,IAGJS,GAAiBC,IACpBV,EAAaE,EAxGG,GAwGeR,GAK1BM,EACT"}