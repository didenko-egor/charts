{"version":3,"file":"index.js","sources":["../../src/ContextMenu/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useContextMenu } from '@front-toolkit/hooks';\n\nimport { MousePosition, ContextMenuProps } from './types';\nimport { ContextMenuView } from './ContextMenuView';\n\nfunction ContextMenu({\n  trigger,\n  size,\n  children,\n  onHide,\n  onShow\n}: ContextMenuProps): JSX.Element | null {\n  const [isOpen, setIsOpen] = useState(false);\n  const [mousePosition, setMousePosition] = useState<MousePosition | undefined>(undefined);\n\n  const handleOpen = (event: MouseEvent): void => {\n    setMousePosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n    setIsOpen(true);\n\n    if (onShow) {\n      onShow();\n    }\n  };\n\n  const handleClose = (): void => {\n    setIsOpen(false);\n    setMousePosition(undefined);\n\n    if (onHide) {\n      onHide();\n    }\n  };\n\n  useContextMenu(trigger, handleOpen);\n\n  if (!isOpen || !mousePosition) return null;\n\n  return (\n    <ContextMenuView\n      mousePosition={ mousePosition }\n      size={ size }\n      onClose={ handleClose }\n    >\n      { children }\n    </ContextMenuView>\n  );\n}\n\nexport { default as ContextSubMenu } from './Menu';\nexport { default as ContextMenuItem } from './Menu/Item';\nexport { ContextMenu };\nexport { ContextMenuView };\n"],"names":["ContextMenu","_a","trigger","size","children","onHide","onShow","_b","useState","isOpen","setIsOpen","_c","undefined","mousePosition","setMousePosition","useContextMenu","event","x","clientX","y","clientY","React","ContextMenuView","onClose"],"mappings":"uTAMA,SAASA,EAAYC,OACnBC,YACAC,SACAC,aACAC,WACAC,WAEMC,EAAsBC,GAAS,GAA9BC,OAAQC,OACTC,EAAoCH,OAAoCI,GAAvEC,OAAeC,OAyBtB,OAFAC,EAAeb,GArBI,SAACc,GAClBF,EAAiB,CACfG,EAAGD,EAAME,QACTC,EAAGH,EAAMI,UAEXV,GAAU,GAENJ,GACFA,OAeCG,GAAWI,EAGdQ,gBAACC,GACCT,cAAgBA,EAChBV,KAAOA,EACPoB,QAjBgB,WAClBb,GAAU,GACVI,OAAiBF,GAEbP,GACFA,MAcED,GARgC,IAWxC"}