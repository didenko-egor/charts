import { ReactElement } from 'react';
interface TabItem {
    /** Текст вкладки */
    label: string;
    /** Уникальное значение для отображения активной вкладки, уникально только для конкретного конфига */
    value: string;
    /** При передаче берется значение из свойства для вставки после label */
    counter?: number;
    /** Кастомный элемент для вставки в конце вкладки */
    iconRight?: ReactElement | null;
    /** Флаг дизейбла вкладки */
    disabled?: boolean;
    /** id для тестирования */
    dataTestId?: string;
}
/** Размер вкладок. На данный момент оставлено для согласования с макетом */
type TabSize = 'small';
/** Тип ширины вкладок */
declare enum TabsWidth {
    Hug = "hug",
    Fill = "fill"
}
/** Тип уровня вкладки */
type TabLevel = 'level1' | 'level2';
/** Тип расстояния между вкладками */
type TabGap = 'default' | 'small';
interface TabsProps {
    /** Список всех вкладок */
    items: TabItem[];
    /** Колбэк нажатия на таб */
    onChange(value: string): void;
    /** Размер вкладки. Для совместимости с макетом */
    size?: TabSize;
    /** Тип для отображения вкладок */
    width?: TabsWidth;
    /** Задаёт высоту вкладок */
    level?: TabLevel;
    /** Задает расстояние между вкладками */
    gap?: TabGap;
    /** Активное value одного из вкладок */
    activeValue?: string;
    /** Data атрибут */
    dataTestId?: string;
}
export { TabItem, TabsWidth, TabLevel, TabGap, TabsProps };
