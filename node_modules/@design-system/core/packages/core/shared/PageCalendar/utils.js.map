{"version":3,"file":"utils.js","sources":["../../../../../shared/PageCalendar/utils.ts"],"sourcesContent":["/* eslint-disable import/no-duplicates */\nimport { Locale, format } from 'date-fns';\nimport ru from 'date-fns/locale/ru';\n\nimport { DayValue, LocaleOptions, SelectedDate } from './types';\n\n/** Сегодняшний день с нулевым временем */\nexport function getToday(): Date {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n\n  return today;\n}\n\n/** Проверка, что две даты равны. Время не учитывается */\nexport function dayEqual(day1: Date, day2: Date): boolean {\n  return (\n    day1.getFullYear() === day2.getFullYear()\n      && day1.getMonth() === day2.getMonth()\n      && day1.getDate() === day2.getDate()\n  );\n}\n\n/** Преобразовать даты в хеш-строку */\nexport function dateToHash(date: Date): string {\n  return `${ date.getFullYear() }.${ date.getMonth() }.${ date.getDate() }`;\n}\n\n/** Получить количество дней в месяце */\nexport function getDaysInMonth(year: number, month: number): number {\n  /** Важный нюанс. Нужно, чтобы день стоял - 0, но\n   * в этом случае 0,0 - это будет декабрь, чтобы был январь - 1,0\n   * Поэтому к месяцу добавляется 1. Но индексы месяцев идут с 0 во всех других местах\n   */\n  return new Date(year, month + 1, 0).getDate();\n}\n\n/** Получить номер дня недели с учетом начала недели\n * Если задан startOfWeek, то он будет 0 и от него пойдёт нумерация\n*/\nexport function getDayOfWeek(date: Date, startOfWeek?: number): number {\n  /**\n   * Алгоритм:\n   * 1. По дефолту 0 - Воскресенье, 1 - Понедельник.\n   * Если вычесть из дефолтного дня недели startOfWeek, понедельник сместится к нулю.\n   * 2. Чтобы не было отрицательных дней недели, нужно добавить +7\n   * 3. Чтобы после +7 вернуться к форматы [0;6] - можно взять остаток от деления на 7\n   */\n  return (date.getDay() + 7 - (startOfWeek ?? 0)) % 7;\n}\n\n/** Сформировать новую выбранную дату на основе старой и нового значения */\nexport function getNewSelection(\n  date: DayValue,\n  isFirst: boolean,\n  old?: SelectedDate,\n  rangeMode?: boolean\n): [SelectedDate, boolean?] {\n  if (!rangeMode) {\n    return [{ from: date.value }];\n  }\n\n  // Далее идёт обработка выбора диапазона\n  if (isFirst) {\n    return [{ from: date.value }, false];\n  }\n\n  if (old?.from) {\n    // Даже если следующая дата меньше предыдущей - будет сформирован правильный диапазон\n    const newValue = date.value;\n    const oldFrom = old.from;\n\n    return [\n      newValue < oldFrom\n        ? { from: newValue, to: oldFrom }\n        : { from: oldFrom, to: newValue },\n      true\n    ];\n  }\n\n  return [{ from: date.value }];\n}\n\n/** Сделать первую букву строки заглавной */\nfunction capitalizeString(str: string): string {\n  return `${ str[0].toUpperCase() }${ str.slice(1) }`;\n}\n\n/** Преобразовать короткое название месяца к нужному формату */\nfunction formatShortMonthString(shortMonth: string): string {\n  const workingString = shortMonth.length > 3 ? shortMonth.slice(0, 3) : shortMonth;\n\n  return capitalizeString(workingString);\n}\n\n/** Получить параметры локализации из локали */\nexport function getLocaleOptions(\n  locale?: Locale,\n  weekends = [5, 6]\n): LocaleOptions {\n  const localeValue = locale ?? ru;\n  const weekStart = localeValue.options?.weekStartsOn ?? 1;\n  const longMonths = [];\n  const shortMonths = [];\n  const shortWeekdays = [];\n\n  for (let i = 0; i < 12; i += 1) {\n    const date = new Date(2023, i, 1);\n    longMonths.push(capitalizeString(format(date, 'LLLL', { locale: localeValue })));\n    shortMonths.push(formatShortMonthString(format(date, 'LLL', { locale: localeValue })));\n  }\n\n  // поиск дня, с которого начинается неделя\n  let weekNameStartDay = 0;\n  const startWeekday = new Date(2023, 4, weekNameStartDay);\n  let weekNameStartIndex = startWeekday.getDay();\n  while (weekNameStartIndex !== weekStart) {\n    weekNameStartDay += 1;\n    weekNameStartIndex += 1;\n    if (weekNameStartIndex === 7) {\n      weekNameStartIndex = 0;\n    }\n  }\n\n  for (let i = weekNameStartDay; i < weekNameStartDay + 7; i += 1) {\n    const date = new Date(2023, 4, i);\n    shortWeekdays.push(format(date, 'EEEEE', { locale: localeValue }));\n  }\n\n  const result: LocaleOptions = {\n    weekStartsOn: weekStart,\n    weekends: new Set(weekends),\n    longMonths,\n    shortMonths,\n    shortWeekdays\n  };\n\n  return result;\n}\n"],"names":["getToday","today","Date","setHours","dayEqual","day1","day2","getFullYear","getMonth","getDate","dateToHash","date","getDaysInMonth","year","month","getDayOfWeek","startOfWeek","getDay","getNewSelection","isFirst","old","rangeMode","from","value","newValue","oldFrom","to","capitalizeString","str","toUpperCase","slice","getLocaleOptions","locale","weekends","shortMonth","localeValue","ru","weekStart","options","weekStartsOn","longMonths","shortMonths","shortWeekdays","i","push","format","length","weekNameStartDay","weekNameStartIndex","Set"],"mappings":"6EAOgBA,IACd,IAAMC,EAAQ,IAAIC,KAGlB,OAFAD,EAAME,SAAS,EAAG,EAAG,EAAG,GAEjBF,CACT,UAGgBG,EAASC,EAAYC,GACnC,OACED,EAAKE,gBAAkBD,EAAKC,eACvBF,EAAKG,aAAeF,EAAKE,YACzBH,EAAKI,YAAcH,EAAKG,SAEjC,UAGgBC,EAAWC,GACzB,OAAWA,EAAKJ,kBAAmBI,EAAKH,eAAgBG,EAAKF,SAC/D,UAGgBG,EAAeC,EAAcC,GAK3C,OAAO,IAAIZ,KAAKW,EAAMC,EAAQ,EAAG,GAAGL,SACtC,UAKgBM,EAAaJ,EAAYK,GAQvC,OAAQL,EAAKM,SAAW,GAAKD,QAAAA,EAAe,IAAM,CACpD,UAGgBE,EACdP,EACAQ,EACAC,EACAC,GAEA,IAAKA,EACH,MAAO,CAAC,CAAEC,KAAMX,EAAKY,QAIvB,GAAIJ,EACF,MAAO,CAAC,CAAEG,KAAMX,EAAKY,QAAS,GAGhC,GAAIH,eAAAA,EAAKE,KAAM,CAEb,IAAME,EAAWb,EAAKY,MAChBE,EAAUL,EAAIE,KAEpB,MAAO,CACLE,EAAWC,EACP,CAAEH,KAAME,EAAUE,GAAID,GACtB,CAAEH,KAAMG,EAASC,GAAIF,IACzB,GAIJ,MAAO,CAAC,CAAEF,KAAMX,EAAKY,OACvB,CAGA,SAASI,EAAiBC,GACxB,MAAO,GAAIA,EAAI,GAAGC,cAAkBD,EAAIE,MAAM,EAChD,UAUgBC,EACdC,EACAC,wBAAAA,GAAY,EAAG,IAQf,IANA,IAX8BC,EAWxBC,EAAcH,QAAAA,EAAUI,EACxBC,sBAAYF,EAAYG,8BAASC,4BAAgB,EACjDC,EAAa,GACbC,EAAc,GACdC,EAAgB,GAEbC,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC9B,IAAMhC,EAAO,IAAIT,KAAK,KAAMyC,EAAG,GAC/BH,EAAWI,KAAKjB,EAAiBkB,EAAOlC,EAAM,OAAQ,CAAEqB,OAAQG,MAChEM,EAAYG,KAjBPjB,GAHuBO,EAoBYW,EAAOlC,EAAM,MAAO,CAAEqB,OAAQG,KAnBvCW,OAAS,EAAIZ,EAAWJ,MAAM,EAAG,GAAKI,IA0BvE,IAHA,IAAIa,EAAmB,EAEnBC,EADiB,IAAI9C,KAAK,KAAM,EAAG6C,GACD9B,SAC/B+B,IAAuBX,GAC5BU,GAAoB,EAEO,KAD3BC,GAAsB,KAEpBA,EAAqB,GAIzB,IAASL,EAAII,EAAkBJ,EAAII,EAAmB,EAAGJ,GAAK,EAAG,CACzDhC,EAAO,IAAIT,KAAK,KAAM,EAAGyC,GAC/BD,EAAcE,KAAKC,EAAOlC,EAAM,QAAS,CAAEqB,OAAQG,KAWrD,MAR8B,CAC5BI,aAAcF,EACdJ,SAAU,IAAIgB,IAAIhB,GAClBO,aACAC,cACAC,gBAIJ"}