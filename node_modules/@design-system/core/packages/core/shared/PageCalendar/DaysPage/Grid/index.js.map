{"version":3,"file":"index.js","sources":["../../../../../../../shared/PageCalendar/DaysPage/Grid/index.tsx"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\n\nimport { DEFAULT_LOCALE_OPTIONS, DayValue } from '../../types';\nimport { dateToHash } from '../../utils';\n\nimport commonStyles from '../../styles/common.scss';\nimport styles from './DaysGrid.module.scss';\n\nconst cdCommon = cssDecorator(commonStyles);\n\nexport interface DaysGridProps {\n  /** Даты для отображения. undefined - для пустых ячеек */\n  items: Array<DayValue | undefined>;\n\n  /** Подписи дней недели */\n  weekDays?: string[];\n\n  /** Скрыть выходные? */\n  hideWeekends?: boolean;\n\n  /** Изменена выбранная дата */\n  onChange?: (value: DayValue, index?: number) => void;\n}\n\n/** Сетка дней в месяце */\nexport function DaysGrid({\n  items,\n  weekDays = DEFAULT_LOCALE_OPTIONS.shortWeekdays,\n  hideWeekends,\n  onChange\n}: DaysGridProps): JSX.Element {\n  /** Подписи дней недели */\n  const weeks = weekDays.map((week, index) => {\n    const classes = cdCommon(\n      'cell',\n      {\n        weekday: true,\n        weekend: !hideWeekends && (index === 5 || index === 6)\n      },\n      [styles.day, styles.week]\n    );\n\n    return (\n      <div\n        key={ `week_${ index }_${ week }` }\n        className={ classes }\n      >\n        { week }\n      </div>\n    );\n  });\n\n  /** Дни */\n  const days = items.map((day, index) => {\n    // Заполнитель \"до 1 числа\"\n    if (!day) {\n      return (\n        <div\n          className={ cdCommon('cell', {}, [styles.day]) }\n          key={ `day_${ index }` }\n        />\n      );\n    }\n\n    const classes = cdCommon(\n      'cell',\n      {\n        hover: !day.disabled && !day.selected,\n        disabled: day.disabled,\n        range: day.inRange,\n        today: day.today,\n        selected: day.selected,\n        weekend: day.weekend && !day.disabled,\n        mark: day.mark\n      },\n      [commonStyles.button, styles.day]\n    );\n\n    const dateToDisplay = day.value.getDate();\n\n    return (\n      <button\n        type=\"button\"\n        key={ `day_${ index }_${ dateToHash(day.value) }` }\n        className={ classes }\n        tabIndex={ -1 }\n        onClick={ (): void => {\n          if (day.disabled || !onChange) return;\n          onChange(day, index);\n        } }\n      >\n        { dateToDisplay }\n      </button>\n    );\n  });\n\n  return (\n    <div\n      className={ commonStyles['grid-column7'] }\n    >\n      { weeks }\n      { days }\n    </div>\n  );\n}\n"],"names":["cdCommon","cssDecorator","commonStyles","DaysGrid","_a","items","_b","weekDays","DEFAULT_LOCALE_OPTIONS","shortWeekdays","hideWeekends","onChange","weeks","map","week","index","classes","weekday","weekend","styles","day","React","key","className","days","hover","disabled","selected","range","inRange","today","mark","button","dateToDisplay","value","getDate","type","dateToHash","tabIndex","onClick"],"mappings":"iQAUA,IAAMA,EAAWC,EAAaC,YAiBdC,EAASC,OACvBC,UACAC,aAAAC,aAAWC,EAAuBC,gBAClCC,iBACAC,aAGMC,EAAQL,EAASM,KAAI,SAACC,EAAMC,GAChC,IAAMC,EAAUhB,EACd,OACA,CACEiB,SAAS,EACTC,SAAUR,IAA2B,IAAVK,GAAyB,IAAVA,IAE5C,CAACI,EAAOC,IAAKD,EAAOL,OAGtB,OACEO,uBACEC,IAAM,QAASP,MAAWD,EAC1BS,UAAYP,GAEVF,MAMFU,EAAOnB,EAAMQ,KAAI,SAACO,EAAKL,GAE3B,IAAKK,EACH,OACEC,uBACEE,UAAYvB,EAAS,OAAQ,GAAI,CAACmB,EAAOC,MACzCE,IAAM,OAAQP,IAKpB,IAAMC,EAAUhB,EACd,OACA,CACEyB,OAAQL,EAAIM,WAAaN,EAAIO,SAC7BD,SAAUN,EAAIM,SACdE,MAAOR,EAAIS,QACXC,MAAOV,EAAIU,MACXH,SAAUP,EAAIO,SACdT,QAASE,EAAIF,UAAYE,EAAIM,SAC7BK,KAAMX,EAAIW,MAEZ,CAAC7B,EAAa8B,OAAQb,EAAOC,MAGzBa,EAAgBb,EAAIc,MAAMC,UAEhC,OACEd,0BACEe,KAAK,SACLd,IAAM,OAAQP,MAAWsB,EAAWjB,EAAIc,OACxCX,UAAYP,EACZsB,UAAY,EACZC,QAAU,YACJnB,EAAIM,UAAaf,GACrBA,EAASS,EAAKL,KAGdkB,MAKR,OACEZ,uBACEE,UAAYrB,EAAa,iBAEvBU,EACAY,EAGR"}