{"version":3,"file":"index.js","sources":["../../../../../../shared/PageCalendar/DaysPage/index.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\n\nimport { DaysGrid } from './Grid';\nimport {\n  DEFAULT_LOCALE_OPTIONS,\n  DayValue,\n  LocaleOptions,\n  SelectedDate\n} from '../types';\nimport { NavHeader } from '../NavHeader';\nimport {\n  dayDisabled,\n  dayInRage,\n  daySelected\n} from './utils';\nimport {\n  dateToHash,\n  dayEqual,\n  getDayOfWeek,\n  getDaysInMonth,\n  getToday\n} from '../utils';\n\nimport styles from './DaysPage.module.scss';\nimport commonStyles from '../styles/common.scss';\n\nconst cdCommon = cssDecorator(commonStyles);\n\nexport interface DaysPageProps {\n  /** Выбранная дата/диапазон */\n  selectedDate?: SelectedDate;\n\n  /** Месяц, год на котором должна отображаться страница */\n  activeDate: Date;\n\n  /** Минимальная дата */\n  minDate?: Date;\n\n  /** Максимальная дата */\n  maxDate?: Date;\n\n  /** Скрыть отображение выходных? */\n  hideWeekends?: boolean;\n\n  /** Отмеченные дни */\n  marks?: Date[];\n\n  /** Параметры локализации */\n  localeOptions?: LocaleOptions;\n\n  /** Выбранная дата изменилась */\n  onChange?: (value: DayValue) => void;\n\n  /** Показать страницу месяцев */\n  onShowMonths?: (year: number) => void;\n\n  /** Показать страницу годов */\n  onShowYears?: (year: number) => void;\n\n  /** Показать предыдущий месяц */\n  onPrev?: VoidFunction;\n\n  /** Показать следующий месяц */\n  onNext?: VoidFunction;\n}\n\n/** Страница дней */\nexport function DaysPage({\n  activeDate,\n  selectedDate,\n  minDate,\n  maxDate,\n  hideWeekends,\n  marks,\n  localeOptions = DEFAULT_LOCALE_OPTIONS,\n  onChange,\n  onShowYears,\n  onShowMonths,\n  onPrev,\n  onNext\n}: DaysPageProps): JSX.Element {\n  /** Сет для проверки на отмеченные дни */\n  const marksSet = useMemo((): Set<string> => {\n    const daysHash = marks?.map(dateToHash) ?? [];\n\n    return new Set<string>(daysHash);\n  }, [marks]);\n\n  /** Год, который сейчас отображается */\n  const currentYear = activeDate.getFullYear();\n\n  /** Месяц, который сейчас отображается */\n  const currentMonth = activeDate.getMonth();\n\n  const days = useMemo(() => {\n    const result: Array<DayValue | undefined> = [];\n\n    const daysInMonth = getDaysInMonth(currentYear, currentMonth);\n    const today = getToday();\n\n    /** Формирование массива с параметрами дней */\n    for (let i = 1; i <= daysInMonth; i += 1) {\n      const dayValue = new Date(currentYear, currentMonth, i);\n      const dayOfWeek = getDayOfWeek(dayValue, localeOptions.weekStartsOn);\n\n      if (i === 1) {\n        /** \"Пустые дни\" - это количество ячеек до 1 числа  */\n        result.unshift(...Array(dayOfWeek));\n      }\n\n      result.push({\n        value: dayValue,\n        disabled: dayDisabled(dayValue, minDate, maxDate),\n        today: dayEqual(dayValue, today),\n        weekend: !hideWeekends && localeOptions.weekends.has(dayOfWeek),\n        selected: daySelected(dayValue, selectedDate),\n        inRange: dayInRage(dayValue, selectedDate),\n        mark: marksSet.has(dateToHash(dayValue))\n      });\n    }\n\n    return result;\n  }, [\n    currentYear,\n    currentMonth,\n    localeOptions,\n    minDate,\n    maxDate,\n    hideWeekends,\n    selectedDate,\n    marksSet\n  ]);\n\n  return (\n    <div\n      className={ commonStyles['page-container'] }\n    >\n      <NavHeader\n        onNext={ onNext }\n        onPrev={ onPrev }\n      >\n        <button\n          type=\"button\"\n          className={ cdCommon('header-item', {}, [styles['header-gap'], commonStyles.button]) }\n          tabIndex={ -1 }\n          onClick={ (): void => {\n            if (onShowMonths) onShowMonths(activeDate.getFullYear());\n          } }\n        >\n          { localeOptions.longMonths[activeDate.getMonth()] }\n        </button>\n\n        <button\n          type=\"button\"\n          className={ cdCommon('header-item', {}, [commonStyles.button]) }\n          tabIndex={ -1 }\n          onClick={ (): void => {\n            if (onShowYears) onShowYears(activeDate.getFullYear());\n          } }\n        >\n          { activeDate.getFullYear() }\n        </button>\n      </NavHeader>\n      <DaysGrid\n        hideWeekends={ hideWeekends }\n        items={ days }\n        onChange={ onChange }\n        weekDays={ localeOptions.shortWeekdays }\n      />\n    </div>\n  );\n}\n"],"names":["cdCommon","cssDecorator","commonStyles","DaysPage","_a","activeDate","selectedDate","minDate","maxDate","hideWeekends","marks","_b","localeOptions","DEFAULT_LOCALE_OPTIONS","onChange","onShowYears","onShowMonths","onPrev","onNext","marksSet","useMemo","daysHash","map","dateToHash","Set","currentYear","getFullYear","currentMonth","getMonth","days","result","daysInMonth","getDaysInMonth","today","getToday","i","dayValue","Date","dayOfWeek","getDayOfWeek","weekStartsOn","unshift","Array","push","value","disabled","dayDisabled","dayEqual","weekend","weekends","has","selected","daySelected","inRange","dayInRage","mark","React","className","NavHeader","type","styles","button","tabIndex","onClick","longMonths","DaysGrid","items","weekDays","shortWeekdays"],"mappings":"8eA2BA,IAAMA,EAAWC,EAAaC,YAyCdC,EAASC,OACvBC,eACAC,iBACAC,YACAC,YACAC,iBACAC,UACAC,kBAAAC,aAAgBC,IAChBC,aACAC,gBACAC,iBACAC,WACAC,WAGMC,EAAWC,GAAQ,iBACjBC,YAAWX,eAAAA,EAAOY,IAAIC,kBAAe,GAE3C,OAAO,IAAIC,IAAYH,KACtB,CAACX,IAGEe,EAAcpB,EAAWqB,cAGzBC,EAAetB,EAAWuB,WAE1BC,EAAOT,GAAQ,WAOnB,IANA,IAAMU,EAAsC,GAEtCC,EAAcC,EAAeP,EAAaE,GAC1CM,EAAQC,IAGLC,EAAI,EAAGA,GAAKJ,EAAaI,GAAK,EAAG,CACxC,IAAMC,EAAW,IAAIC,KAAKZ,EAAaE,EAAcQ,GAC/CG,EAAYC,EAAaH,EAAUxB,EAAc4B,cAE7C,IAANL,GAEFL,EAAOW,cAAPX,EAAkBY,MAAMJ,IAG1BR,EAAOa,KAAK,CACVC,MAAOR,EACPS,SAAUC,EAAYV,EAAU7B,EAASC,GACzCyB,MAAOc,EAASX,EAAUH,GAC1Be,SAAUvC,GAAgBG,EAAcqC,SAASC,IAAIZ,GACrDa,SAAUC,EAAYhB,EAAU9B,GAChC+C,QAASC,EAAUlB,EAAU9B,GAC7BiD,KAAMpC,EAAS+B,IAAI3B,EAAWa,MAIlC,OAAON,IACN,CACDL,EACAE,EACAf,EACAL,EACAC,EACAC,EACAH,EACAa,IAGF,OACEqC,uBACEC,UAAYvD,EAAa,mBAEzBsD,gBAACE,GACCxC,OAASA,EACTD,OAASA,GAETuC,0BACEG,KAAK,SACLF,UAAYzD,EAAS,cAAe,GAAI,CAAC4D,EAAO,cAAe1D,EAAa2D,SAC5EC,UAAY,EACZC,QAAU,WACJ/C,GAAcA,EAAaX,EAAWqB,iBAG1Cd,EAAcoD,WAAW3D,EAAWuB,aAGxC4B,0BACEG,KAAK,SACLF,UAAYzD,EAAS,cAAe,GAAI,CAACE,EAAa2D,SACtDC,UAAY,EACZC,QAAU,WACJhD,GAAaA,EAAYV,EAAWqB,iBAGxCrB,EAAWqB,gBAGjB8B,gBAACS,GACCxD,aAAeA,EACfyD,MAAQrC,EACRf,SAAWA,EACXqD,SAAWvD,EAAcwD,gBAIjC"}