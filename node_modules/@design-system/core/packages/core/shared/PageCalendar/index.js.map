{"version":3,"file":"index.js","sources":["../../../../../shared/PageCalendar/index.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\n\nimport {\n  CalendarInitialState,\n  CalendarPage,\n  DEFAULT_LOCALE_OPTIONS,\n  LocaleOptions,\n  SelectedDate\n} from './types';\nimport { getToday } from './utils';\nimport { useDaySelect } from './useDaySelect';\nimport { START_YEAR_OFFSET, YearsPage } from './YearsPage';\nimport { MonthsPage } from './MonthsPage';\nimport { DaysPage } from './DaysPage';\n\nexport interface PageCalendarProps {\n  /** Выбранная дата */\n  value?: SelectedDate;\n\n  /** На какой дате и странице открыть календарь */\n  openAt?: CalendarInitialState;\n\n  /** Минимальная дата */\n  minDate?: Date;\n\n  /** Максимальная дата */\n  maxDate?: Date;\n\n  /** Не отображать выходные? */\n  hideWeekends?: boolean;\n\n  /** Отмеченные дни */\n  marks?: Date[];\n\n  /** Включить режим выбора диапазона */\n  rangeMode?: boolean;\n\n  /** Параметры локализации */\n  localeOptions?: LocaleOptions;\n\n  /** Выбранная дата изменилась */\n  onChange?: (value: SelectedDate) => void;\n\n  /** Нажатие на любой кнопке календаря. Используется, чтобы вернуть фокус куда нужно */\n  onClick?: VoidFunction;\n}\n\n/** Страничный календарь */\nexport function PageCalendar({\n  minDate,\n  maxDate,\n  hideWeekends,\n  marks,\n  value,\n  openAt,\n  rangeMode,\n  localeOptions = DEFAULT_LOCALE_OPTIONS,\n  onChange,\n  onClick\n}: PageCalendarProps): JSX.Element {\n  const initialState = useMemo(() => {\n    const result: CalendarInitialState = {\n      date: value?.from ?? openAt?.date ?? getToday(),\n      page: openAt?.page\n    };\n\n    return result;\n  }, [openAt, value?.from]);\n\n  const onChangeMiddleWare = (selectedValue: SelectedDate): void => {\n    if (onClick) onClick();\n    if (onChange) onChange(selectedValue);\n  };\n\n  const {\n    selection: selectedDate,\n    handleChange: handleDateChange\n  } = useDaySelect({\n    rangeMode,\n    initialSelection: value,\n    onChange: onChangeMiddleWare\n  });\n\n  const [calendarPage, setCalendarPage] = useState(initialState.page ?? CalendarPage.Days);\n  const [activeYear, setActiveYear] = useState(initialState.date.getFullYear());\n  const [activeMonth, setActiveMonth] = useState(initialState.date.getMonth());\n\n  useEffect(() => {\n    setCalendarPage(initialState.page ?? CalendarPage.Days);\n    setActiveYear(initialState.date.getFullYear());\n    setActiveMonth(initialState.date.getMonth());\n  }, [initialState]);\n\n  const showMonthsPage = (year: number): void => {\n    setActiveYear(year);\n    setCalendarPage(CalendarPage.Months);\n    if (onClick) onClick();\n  };\n\n  const showYearsPage = (year: number): void => {\n    setActiveYear(year);\n    setCalendarPage(CalendarPage.Years);\n    if (onClick) onClick();\n  };\n\n  if (calendarPage === CalendarPage.Years) {\n    const decYearPage = (): void => {\n      setActiveYear(activeYear - 2 * START_YEAR_OFFSET);\n      if (onClick) onClick();\n    };\n\n    const incYearPage = (): void => {\n      setActiveYear(activeYear + 2 * START_YEAR_OFFSET);\n      if (onClick) onClick();\n    };\n\n    return (\n      <YearsPage\n        minDate={ minDate }\n        maxDate={ maxDate }\n        selectedDate={ selectedDate }\n        onShowMonths={ showMonthsPage }\n        activeYear={ activeYear }\n        onNext={ incYearPage }\n        onPrev={ decYearPage }\n      />\n    );\n  }\n\n  if (calendarPage === CalendarPage.Months) {\n    const showDays = (month: number, year: number): void => {\n      setActiveMonth(month);\n      setActiveYear(year);\n      setCalendarPage(CalendarPage.Days);\n      if (onClick) onClick();\n    };\n\n    const decYear = (): void => {\n      setActiveYear(activeYear - 1);\n      if (onClick) onClick();\n    };\n\n    const incYear = (): void => {\n      setActiveYear(activeYear + 1);\n      if (onClick) onClick();\n    };\n\n    return (\n      <MonthsPage\n        minDate={ minDate }\n        maxDate={ maxDate }\n        selectedDate={ selectedDate }\n        onShowYears={ showYearsPage }\n        activeYear={ activeYear }\n        monthsNames={ localeOptions.shortMonths }\n        onShowDays={ showDays }\n        onNext={ incYear }\n        onPrev={ decYear }\n      />\n    );\n  }\n\n  const decMonthYear = (): void => {\n    let prevMonth = activeMonth - 1;\n\n    if (prevMonth < 0) {\n      prevMonth = 11;\n      setActiveYear(activeYear - 1);\n    }\n\n    setActiveMonth(prevMonth);\n    if (onClick) onClick();\n  };\n\n  const incMonthYear = (): void => {\n    let nextMonth = activeMonth + 1;\n\n    if (nextMonth > 11) {\n      nextMonth = 0;\n      setActiveYear(activeYear + 1);\n    }\n\n    setActiveMonth(nextMonth);\n    if (onClick) onClick();\n  };\n\n  return (\n    <DaysPage\n      marks={ marks }\n      minDate={ minDate }\n      maxDate={ maxDate }\n      hideWeekends={ hideWeekends }\n      selectedDate={ selectedDate }\n      onShowMonths={ showMonthsPage }\n      onShowYears={ showYearsPage }\n      activeDate={ new Date(activeYear, activeMonth, 1) }\n      localeOptions={ localeOptions }\n      onChange={ handleDateChange }\n      onNext={ incMonthYear }\n      onPrev={ decMonthYear }\n    />\n  );\n}\n"],"names":["PageCalendar","_a","minDate","maxDate","hideWeekends","marks","value","openAt","rangeMode","_c","localeOptions","DEFAULT_LOCALE_OPTIONS","onChange","onClick","initialState","useMemo","date","from","getToday","page","_d","useDaySelect","initialSelection","selectedValue","selectedDate","handleDateChange","_e","useState","CalendarPage","Days","calendarPage","setCalendarPage","_f","getFullYear","activeYear","setActiveYear","_g","getMonth","activeMonth","setActiveMonth","useEffect","showMonthsPage","year","Months","showYearsPage","Years","React","YearsPage","onShowMonths","onNext","START_YEAR_OFFSET","onPrev","MonthsPage","onShowYears","monthsNames","shortMonths","onShowDays","month","DaysPage","activeDate","Date","nextMonth","prevMonth"],"mappings":"gZAgDgBA,EAAaC,SAC3BC,YACAC,YACAC,iBACAC,UACAC,UACAC,WACAC,cACAC,kBAAAC,aAAgBC,IAChBC,aACAC,YAEMC,EAAeC,GAAQ,mBAM3B,MALqC,CACnCC,yBAAMV,eAAAA,EAAOW,oBAAQV,eAAAA,EAAQS,oBAAQE,IACrCC,KAAMZ,eAAAA,EAAQY,QAIf,CAACZ,EAAQD,eAAAA,EAAOW,OAObG,EAGFC,EAAa,CACfb,YACAc,iBAAkBhB,EAClBM,SAXyB,SAACW,GACtBV,GAASA,IACTD,GAAUA,EAASW,MAIZC,cACGC,iBAOVC,EAAkCC,YAASb,EAAaK,oBAAQS,EAAaC,MAA5EC,OAAcC,OACfC,EAA8BL,EAASb,EAAaE,KAAKiB,eAAxDC,OAAYC,OACbC,EAAgCT,EAASb,EAAaE,KAAKqB,YAA1DC,OAAaC,OAEpBC,GAAU,iBACRT,YAAgBjB,EAAaK,oBAAQS,EAAaC,MAClDM,EAAcrB,EAAaE,KAAKiB,eAChCM,EAAezB,EAAaE,KAAKqB,cAChC,CAACvB,IAEJ,IAAM2B,EAAiB,SAACC,GACtBP,EAAcO,GACdX,EAAgBH,EAAae,QACzB9B,GAASA,KAGT+B,EAAgB,SAACF,GACrBP,EAAcO,GACdX,EAAgBH,EAAaiB,OACzBhC,GAASA,KAGf,GAAIiB,IAAiBF,EAAaiB,MAAO,CAWvC,OACEC,gBAACC,GACC7C,QAAUA,EACVC,QAAUA,EACVqB,aAAeA,EACfwB,aAAeP,EACfP,WAAaA,EACbe,OAZgB,WAClBd,EAAcD,EAAa,EAAIgB,GAC3BrC,GAASA,KAWXsC,OAlBgB,WAClBhB,EAAcD,EAAa,EAAIgB,GAC3BrC,GAASA,OAqBjB,GAAIiB,IAAiBF,EAAae,OAAQ,CAkBxC,OACEG,gBAACM,GACClD,QAAUA,EACVC,QAAUA,EACVqB,aAAeA,EACf6B,YAAcT,EACdV,WAAaA,EACboB,YAAc5C,EAAc6C,YAC5BC,WAzBa,SAACC,EAAef,GAC/BH,EAAekB,GACftB,EAAcO,GACdX,EAAgBH,EAAaC,MACzBhB,GAASA,KAsBXoC,OAdY,WACdd,EAAcD,EAAa,GACvBrB,GAASA,KAaXsC,OApBY,WACdhB,EAAcD,EAAa,GACvBrB,GAASA,OA+CjB,OACEiC,gBAACY,GACCrD,MAAQA,EACRH,QAAUA,EACVC,QAAUA,EACVC,aAAeA,EACfoB,aAAeA,EACfwB,aAAeP,EACfY,YAAcT,EACde,WAAa,IAAIC,KAAK1B,EAAYI,EAAa,GAC/C5B,cAAgBA,EAChBE,SAAWa,EACXwB,OAxBiB,WACnB,IAAIY,EAAYvB,EAAc,EAE1BuB,EAAY,KACdA,EAAY,EACZ1B,EAAcD,EAAa,IAG7BK,EAAesB,GACXhD,GAASA,KAgBXsC,OArCiB,WACnB,IAAIW,EAAYxB,EAAc,EAE1BwB,EAAY,IACdA,EAAY,GACZ3B,EAAcD,EAAa,IAG7BK,EAAeuB,GACXjD,GAASA,MA+BjB"}