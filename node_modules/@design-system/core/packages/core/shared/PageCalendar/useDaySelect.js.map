{"version":3,"file":"useDaySelect.js","sources":["../../../../../shared/PageCalendar/useDaySelect.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport { DayValue, SelectedDate } from './types';\nimport { getNewSelection } from './utils';\n\ninterface UseDaySelectProps {\n  /** Разрешит выбор диапазона? */\n  rangeMode?: boolean;\n\n  /** Параметры установленного выбора */\n  initialSelection?: SelectedDate;\n\n  /** Выбранная дата изменена */\n  onChange?: (value: SelectedDate) => void;\n}\n\ninterface UseDaySelectResult {\n  /** Выбранные даты */\n  selection?: SelectedDate;\n\n  /** Обработчик изменения даты */\n  handleChange: (date: DayValue) => void;\n}\n\n/** Логика выбора дат */\nexport function useDaySelect({\n  rangeMode,\n  initialSelection,\n  onChange\n}: UseDaySelectProps): UseDaySelectResult {\n  const [selection, setSelection] = useState(initialSelection);\n  const isFirst = useRef(true);\n\n  const handleChange = (date: DayValue): void => {\n    const [newSelection, newIsFirst] = getNewSelection(date, isFirst.current, selection, rangeMode);\n\n    if (newIsFirst !== undefined) {\n      isFirst.current = newIsFirst;\n    }\n\n    setSelection(newSelection);\n    if (onChange) onChange(newSelection);\n  };\n\n  /** Поддержка обновления через пропсы */\n  useEffect(() => {\n    setSelection(initialSelection);\n    isFirst.current = true;\n  }, [initialSelection]);\n\n  return { selection, handleChange };\n}\n"],"names":["useDaySelect","_a","rangeMode","initialSelection","onChange","_b","useState","selection","setSelection","isFirst","useRef","useEffect","current","handleChange","date","getNewSelection","newSelection","newIsFirst","undefined"],"mappings":"kHAyBgBA,EAAaC,OAC3BC,cACAC,qBACAC,aAEMC,EAA4BC,EAASH,GAApCI,OAAWC,OACZC,EAAUC,GAAO,GAmBvB,OALAC,GAAU,WACRH,EAAaL,GACbM,EAAQG,SAAU,IACjB,CAACT,IAEG,CAAEI,YAAWM,aAjBC,SAACC,GACd,IAAAb,EAA6Bc,EAAgBD,EAAML,EAAQG,QAASL,EAAWL,GAA9Ec,OAAcC,YAEFC,IAAfD,IACFR,EAAQG,QAAUK,GAGpBT,EAAaQ,GACTZ,GAAUA,EAASY,IAU3B"}