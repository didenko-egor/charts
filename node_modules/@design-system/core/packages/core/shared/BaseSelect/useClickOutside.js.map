{"version":3,"file":"useClickOutside.js","sources":["../../../../../shared/BaseSelect/useClickOutside.ts"],"sourcesContent":["import { useEffect, RefObject } from 'react';\n\n/**\n * Определение клика вне Select-a\n * При текущей реализации dropdown-а он может находится внутри BaseSelect, а может находится\n * в Body. Чтобы правильно скрывать dropdown используется его реф (ищем таргет с помощью contains).\n * Также нужен реф инпута, елси dropdown отрендерился внутри Select-a (ищем тагрет с помощью contains)\n */\nconst useClickOutside = (\n  dropDownRef: RefObject<HTMLElement>,\n  inputRef: RefObject<HTMLElement>,\n  callback: VoidFunction,\n  isOpenDropdown?: boolean\n): void => {\n  useEffect(() => {\n    const onClickOutside = (event: Event): void => {\n      if (dropDownRef.current\n        && !dropDownRef.current.contains(event.target as Node)\n        && !inputRef.current?.contains(event.target as Node)) {\n        callback();\n      }\n    };\n\n    if (isOpenDropdown) {\n      window.addEventListener('pointerdown', onClickOutside);\n\n      return (): void => {\n        window.removeEventListener('pointerdown', onClickOutside);\n      };\n    }\n\n    return undefined;\n  }, [\n    dropDownRef,\n    callback,\n    inputRef,\n    isOpenDropdown\n  ]);\n};\n\nexport default useClickOutside;\n"],"names":["useClickOutside","dropDownRef","inputRef","callback","isOpenDropdown","useEffect","onClickOutside","event","current","contains","target","window","addEventListener","removeEventListener"],"mappings":"sCAQMA,EAAkB,SACtBC,EACAC,EACAC,EACAC,GAEAC,GAAU,WACR,IAAMC,EAAiB,SAACC,UAClBN,EAAYO,SACVP,EAAYO,QAAQC,SAASF,EAAMG,oBACnCR,EAASM,8BAASC,SAASF,EAAMG,UACrCP,KAIJ,GAAIC,EAGF,OAFAO,OAAOC,iBAAiB,cAAeN,GAEhC,WACLK,OAAOE,oBAAoB,cAAeP,MAK7C,CACDL,EACAE,EACAD,EACAE,GAEJ"}