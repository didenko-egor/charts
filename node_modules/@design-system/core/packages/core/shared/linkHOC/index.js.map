{"version":3,"file":"index.js","sources":["../../../../../shared/linkHOC/index.tsx"],"sourcesContent":["import React, { HTMLAttributeAnchorTarget } from 'react';\nimport { getDisplayName } from 'utils';\n\nimport { LINK_CLASS_NAME } from 'core/shared/linkHOC/constants';\n\nexport interface LinkProps {\n  /** URL */\n  href?: string;\n\n  /** Атрибут target */\n  target?: HTMLAttributeAnchorTarget;\n\n  /** Атрибут rel */\n  rel?: string;\n\n  /** ID для тестирования */\n  dataTestId?: string;\n\n  /** Коллбэк, вызываемый при нажатии на ссылку */\n  onClick?: React.MouseEventHandler<HTMLElement>;\n}\n\nconst DEFAULT_PROPS = {\n  target: '_blank',\n  rel: 'noopener noreferrer'\n};\n\nconst Link: React.FC<LinkProps> = ({\n  href,\n  target = DEFAULT_PROPS.target,\n  rel = DEFAULT_PROPS.rel,\n  dataTestId,\n  onClick,\n  children\n}) => (\n  <a\n    onClick={ onClick }\n    data-test-id={ dataTestId }\n    href={ href }\n    rel={ rel }\n    target={ target }\n    className={ LINK_CLASS_NAME }\n  >\n    { children }\n  </a>\n);\n\nfunction withLink<T extends React.PropsWithChildren<unknown>>(\n  WrappedComponent: React.FC<T>\n): React.FC<T & LinkProps> {\n  const ComponentWithLink: React.FC<T & LinkProps> = props => {\n    const {\n      href,\n      rel,\n      target,\n      onClick,\n      children,\n      ...rest\n    } = props;\n\n    if (href) {\n      return (\n        React.createElement(\n          WrappedComponent,\n          rest as T,\n          <Link\n            href={ href }\n            rel={ rel }\n            onClick={ onClick }\n            target={ target }\n          >\n            { children }\n          </Link>\n        )\n      );\n    }\n\n    return <WrappedComponent { ...rest as T }>{ children }</WrappedComponent>;\n  };\n\n  ComponentWithLink.displayName = `withLink(${ getDisplayName(WrappedComponent) })`;\n\n  return ComponentWithLink;\n}\n\nexport { Link, withLink, DEFAULT_PROPS };\n"],"names":["DEFAULT_PROPS","target","rel","Link","_a","href","_b","_c","dataTestId","onClick","children","React","className","LINK_CLASS_NAME","withLink","WrappedComponent","ComponentWithLink","props","rest","createElement","displayName","getDisplayName"],"mappings":"gLAsBMA,EAAgB,CACpBC,OAAQ,SACRC,IAAK,uBAGDC,EAA4B,SAACC,OACjCC,SACAC,WAAAL,aAASD,EAAcC,SACvBM,QAAAL,aAAMF,EAAcE,MACpBM,eACAC,YACAC,aACI,OACJC,qBACEF,QAAUA,iBACKD,EACfH,KAAOA,EACPH,IAAMA,EACND,OAASA,EACTW,UAAYC,GAEVH,EATA,EAaN,SAASI,EACPC,GAEA,IAAMC,EAA6C,SAAAC,GAE/C,IAAAZ,EAMEY,OALFf,EAKEe,MAJFhB,EAIEgB,SAHFR,EAGEQ,UAFFP,EAEEO,WADCC,IACDD,EAPE,8CASN,OAAIZ,EAEAM,EAAMQ,cACJJ,EACAG,EACAP,gBAACR,GACCE,KAAOA,EACPH,IAAMA,EACNO,QAAUA,EACVR,OAASA,GAEPS,IAMHC,gBAACI,OAAsBG,GAAcR,IAK9C,OAFAM,EAAkBI,YAAc,YAAaC,EAAeN,OAErDC,CACT"}