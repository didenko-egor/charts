{"version":3,"file":"useLoadMoreData.js","sources":["../../../../hooks/useLoadMoreData.ts"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nimport { useInView } from 'react-intersection-observer';\n\n/** хук которые подгружает данные */\nconst useLoadMoreData = (onLoadMoreData?: VoidFunction): typeof refInView => {\n  const {\n    ref: refInView,\n    entry\n  } = useInView({\n    threshold: 1,\n    initialInView: false,\n    triggerOnce: true\n  });\n\n  const inViewOnChange = useCallback((observerEntry: IntersectionObserverEntry) => {\n    const intersectionRatio = Math.floor(observerEntry.intersectionRatio);\n\n    if (intersectionRatio === 1 && onLoadMoreData) {\n      onLoadMoreData();\n    }\n  }, [onLoadMoreData]);\n\n  useEffect(() => {\n    if (entry) {\n      inViewOnChange(entry);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [entry]); // зависимости лучше не трогать так как ломается поведение в select\n\n  return refInView;\n};\n\nexport default useLoadMoreData;\n"],"names":["useLoadMoreData","onLoadMoreData","_a","useInView","threshold","initialInView","triggerOnce","refInView","entry","inViewOnChange","useCallback","observerEntry","Math","floor","intersectionRatio","useEffect"],"mappings":"+GAIMA,EAAkB,SAACC,GACjB,IAAAC,EAGFC,EAAU,CACZC,UAAW,EACXC,eAAe,EACfC,aAAa,IALRC,QACLC,UAOIC,EAAiBC,GAAY,SAACC,GAGR,IAFAC,KAAKC,MAAMF,EAAcG,oBAEpBb,GAC7BA,MAED,CAACA,IASJ,OAPAc,GAAU,WACJP,GACFC,EAAeD,KAGhB,CAACA,IAEGD,CACT"}