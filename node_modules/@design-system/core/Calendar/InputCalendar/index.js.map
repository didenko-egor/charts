{"version":3,"file":"index.js","sources":["../../../src/Calendar/InputCalendar/index.tsx"],"sourcesContent":["/* eslint-disable no-restricted-globals */\nimport 'focus-visible';\nimport React, {\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n  useRef\n} from 'react';\nimport { format, parse } from 'date-fns';\nimport { useDropdownElementBehavior } from 'core/hooks';\nimport { CalendarProps } from 'shared/types/calendar';\nimport { InputProps } from 'core/src/Input';\nimport { MaskedInput } from 'core/src/MaskedInput';\n\nimport { IconCalendar } from 'core/src/icons';\n\nimport { BaseCalendar } from 'shared/BaseCalendar';\n\nimport styles from './styles.scss';\n\n/** Регулярка, проверяющая введена ли валидная дата или инпут пуст */\n// eslint-disable-next-line max-len\nconst dateRegExp = /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^\\s*$/;\n/** Возвращает валидный для date-fns паттерн на основании переданной строки с датой */\nconst getPattern = (dateStr: string): string => {\n  if (dateStr && dateStr.split('.').length >= 3) {\n    const [day, month, year] = dateStr.split('.');\n    const patternValues = ['d'.repeat(day.length), 'L'.repeat(month.length), 'y'.repeat(year.length)];\n\n    return patternValues.join('.');\n  }\n\n  return 'dd.LL.yyyy';\n};\n\n/**\n * @deprecated Компонент более не поддерживается и будет удален.\n * Используйте новый: {@link @design-system/core/CalendarV2}\n * */\nexport const InputCalendar: React.FC<Omit<InputProps & CalendarProps, 'value'> & { value?: Date }> = props => {\n  const {\n    size,\n    hintMessage,\n    label,\n    labelWidth,\n    id,\n    name,\n    pseudo,\n    disabled,\n    showHint,\n    labelAside,\n    placeholder,\n    inputRef,\n    dataTestId,\n    dataTestHintId,\n    onClick,\n    onSelectedDateChange,\n    onKeyPress,\n    uncontrolled,\n    onFocus,\n    onBlur,\n    height,\n    maxDate,\n    minDate,\n    locale,\n    rowHeight,\n    tabIndex,\n    value,\n    weekdays,\n    isError,\n    withoutDefaultMinWidth,\n    defaultValue\n  } = props;\n\n  const [inputValue, setInputValue] = useState<string>('');\n  const [calendarValue, setCalendarValue] = useState<Date | undefined>(value);\n  const [isInvalid, setIsInvalid] = useState<boolean>(false);\n\n  const targetRef = useRef<HTMLInputElement>(null);\n  const childRef = useRef<HTMLInputElement>(null);\n\n  const { dropdownStyle } = useDropdownElementBehavior(targetRef, childRef);\n\n  const fallbackActive = value || defaultValue;\n\n  const inputIcons = useMemo(() => [\n    {\n      icon: <IconCalendar />,\n      disabled: false\n    }\n  ], []);\n\n  useEffect(() => {\n    if (fallbackActive) {\n      setInputValue(prevValue => format(fallbackActive, getPattern(prevValue)));\n      setCalendarValue(fallbackActive);\n    }\n  }, [fallbackActive]);\n\n  const stopPropagation = useCallback((event: React.MouseEvent<HTMLDivElement>): void => event.stopPropagation(), []);\n\n  const handleSelectedDateChange = useCallback((dates: Date[]): void => {\n    if (dates[0]) {\n      setInputValue(format(dates[0], getPattern(inputValue)));\n    }\n\n    if (onSelectedDateChange) {\n      onSelectedDateChange(dates);\n    }\n  }, [inputValue, onSelectedDateChange]);\n\n  useEffect(() => { setIsInvalid(!dateRegExp.test(inputValue)); }, [inputValue]);\n\n  const handleInputChange = useCallback((newValue: string): void => {\n    setInputValue(newValue);\n\n    if (newValue && dateRegExp.test(newValue)) {\n      const date = parse(newValue, getPattern(newValue), new Date());\n\n      setCalendarValue(date);\n    }\n  }, []);\n\n  return (\n    <div className={ styles.wrapper } ref={ targetRef }>\n      <MaskedInput\n        placeholderMask=\"дд.мм.гггг\"\n        name={ name }\n        value={ value ? inputValue : '' }\n        onChange={ handleInputChange }\n        placeholder={ placeholder }\n        isError={ isError || isInvalid }\n        icons={ inputIcons }\n        size={ size }\n        hintMessage={ hintMessage }\n        label={ label }\n        labelWidth={ labelWidth }\n        id={ id }\n        pseudo={ pseudo }\n        disabled={ disabled }\n        showHint={ showHint }\n        labelAside={ labelAside }\n        inputRef={ inputRef }\n        dataTestId={ dataTestId }\n        dataTestHintId={ dataTestHintId }\n        onClick={ onClick }\n        onKeyPress={ onKeyPress }\n        uncontrolled={ uncontrolled }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        withoutDefaultMinWidth={ withoutDefaultMinWidth }\n      />\n      <div\n        className={ styles.dropdown }\n        onClick={ stopPropagation }\n        style={ dropdownStyle }\n        ref={ childRef }\n        role=\"presentation\"\n      >\n        <BaseCalendar\n          height={ height }\n          locale={ locale }\n          maxDate={ maxDate }\n          minDate={ minDate }\n          onSelectedDateChange={ handleSelectedDateChange }\n          rowHeight={ rowHeight }\n          tabIndex={ tabIndex }\n          weekdays={ weekdays }\n          value={ calendarValue }\n          defaultValue={ defaultValue }\n        />\n      </div>\n    </div>\n  );\n};\n"],"names":["dateRegExp","getPattern","dateStr","split","length","_a","day","month","year","repeat","join","InputCalendar","props","size","hintMessage","label","labelWidth","id","name","pseudo","disabled","showHint","labelAside","placeholder","inputRef","dataTestId","dataTestHintId","onClick","onSelectedDateChange","onKeyPress","uncontrolled","onFocus","onBlur","height","maxDate","minDate","locale","rowHeight","tabIndex","value","weekdays","isError","withoutDefaultMinWidth","defaultValue","useState","inputValue","setInputValue","_b","calendarValue","setCalendarValue","_c","isInvalid","setIsInvalid","targetRef","useRef","childRef","dropdownStyle","useDropdownElementBehavior","fallbackActive","inputIcons","useMemo","icon","React","IconCalendar","useEffect","prevValue","format","stopPropagation","useCallback","event","handleSelectedDateChange","dates","test","handleInputChange","newValue","date","parse","Date","className","styles","wrapper","ref","MaskedInput","placeholderMask","onChange","icons","dropdown","style","role","BaseCalendar"],"mappings":"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"}