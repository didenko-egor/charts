{"version":3,"file":"index.js","sources":["../../src/DropdownListCommand/index.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\n\nimport { IconChevronRight } from 'core/src/icons';\n\nimport { DropdownListCommandProps } from './types';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\nconst DropdownListCommand = forwardRef<HTMLLIElement, DropdownListCommandProps>(({\n  label,\n  hint: IconRightOrHint,\n  Icon,\n  withIcons,\n  size = 'default',\n  withSubmenu,\n  disabled,\n  controlledHover = false,\n  uncontrolledHover = false,\n  dataTestId,\n  width,\n  onClick,\n  onMouseDown,\n  handleMouseEnter,\n  handleMouseLeave\n}, ref) => {\n  const isHint = typeof IconRightOrHint === 'string';\n  const menuItemClassNames = cd('dropdown-list-command', {\n    [size]: true,\n    hovered: !disabled && controlledHover && !uncontrolledHover,\n    'uncontrolled-hovered': !disabled && uncontrolledHover && !controlledHover,\n    disabled,\n    inset: withIcons && !Icon\n  });\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    <li // eslint-disable-line jsx-a11y/click-events-have-key-events\n      data-test-id={ dataTestId }\n      ref={ ref }\n      className={ menuItemClassNames }\n      onClick={ !disabled ? onClick : undefined }\n      onMouseEnter={ handleMouseEnter }\n      onMouseLeave={ handleMouseLeave }\n      onMouseDown={ !disabled ? onMouseDown : undefined }\n      style={ width ? { width } : undefined }\n    >\n      { Icon && <span className={ styles.icon }><Icon /></span> }\n      <span className={ styles.label }>{ label }</span>\n      { IconRightOrHint && !withSubmenu && (\n        <span className={ cd('right_element', { disabled, icon: !isHint }) }>\n          { /* eslint-disable-next-line react/no-danger */ }\n          { isHint ? <span dangerouslySetInnerHTML={ { __html: IconRightOrHint } } /> : <IconRightOrHint /> }\n        </span>\n      ) }\n      { withSubmenu && <IconChevronRight dataTestId=\"chevron-right-test-id\" /> }\n    </li>\n  );\n});\n\nDropdownListCommand.displayName = 'DropdownListCommand';\n\nexport default memo(DropdownListCommand);\n"],"names":["cd","cssDecorator","styles","DropdownListCommand","forwardRef","_a","ref","label","IconRightOrHint","Icon","withIcons","_c","size","withSubmenu","disabled","_d","controlledHover","_e","uncontrolledHover","dataTestId","width","onClick","onMouseDown","handleMouseEnter","handleMouseLeave","isHint","menuItemClassNames","_b","React","className","undefined","onMouseEnter","onMouseLeave","style","icon","dangerouslySetInnerHTML","__html","IconChevronRight","displayName","memo"],"mappings":"yLASA,IAAMA,EAAKC,EAAaC,GAElBC,EAAsBC,GAAoD,SAACC,EAgB9EC,SAfDC,UACMC,SACNC,SACAC,cACAC,SAAAC,aAAO,YACPC,gBACAC,aACAC,oBAAAC,gBACAC,sBAAAC,gBACAC,eACAC,UACAC,YACAC,gBACAC,qBACAC,qBAEMC,EAAoC,iBAApBjB,EAChBkB,EAAqB1B,EAAG,gCAC3BY,IAAO,EACRe,WAAUb,GAAYE,IAAoBE,EAC1CS,2BAAyBb,GAAYI,IAAsBF,EAC3DW,aACAA,QAAOjB,IAAcD,MAGvB,OAEEmB,qCACiBT,EACfb,IAAMA,EACNuB,UAAYH,EACZL,QAAWP,OAAqBgB,EAAVT,EACtBU,aAAeR,EACfS,aAAeR,EACfF,YAAeR,OAAyBgB,EAAdR,EAC1BW,MAAQb,EAAQ,CAAEA,cAAUU,GAE1BrB,GAAQmB,wBAAMC,UAAY3B,EAAOgC,MAAON,gBAACnB,SAC3CmB,wBAAMC,UAAY3B,EAAOK,OAAUA,GACjCC,IAAoBK,GACpBe,wBAAMC,UAAY7B,EAAG,gBAAiB,CAAEc,WAAUoB,MAAOT,KAErDA,EAASG,wBAAMO,wBAA0B,CAAEC,OAAQ5B,KAAyBoB,gBAACpB,SAGjFK,GAAee,gBAACS,GAAiBlB,WAAW,0BAGpD,IAEAhB,EAAoBmC,YAAc,sBAElC,MAAeC,EAAKpC"}