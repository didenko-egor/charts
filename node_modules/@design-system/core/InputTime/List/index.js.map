{"version":3,"file":"index.js","sources":["../../../src/InputTime/List/index.tsx"],"sourcesContent":["import React, {\n  KeyboardEvent,\n  MouseEvent,\n  useCallback,\n  useEffect,\n  useRef\n} from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\n\nimport { scrollToTop } from '../utils';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\ntype CarryChange = (val: string) => (e: KeyboardEvent<HTMLElement> | MouseEvent<HTMLElement>) => void;\n\nexport interface ListProps {\n  /** Набор возможных значений */\n  items: string[];\n\n  /** Обработчик выбора значения */\n  onChange: (value: string) => void;\n\n  /** Активное значение */\n  value?: string;\n\n  /** ID для тестирования */\n  dataTestId?: string;\n}\n\nexport const List: React.FC<ListProps> = ({\n  items,\n  value,\n  onChange,\n  dataTestId\n}) => {\n  const listRef = useRef<HTMLUListElement | null>(null);\n\n  /** При первом открытии дропдауна или выборе значения скроллим к выбранному значению */\n  useEffect(() => {\n    const activeElement = listRef.current?.querySelector(`.${ styles['option--active'] }`);\n\n    if (activeElement) {\n      scrollToTop(listRef, activeElement as HTMLElement);\n    }\n  }, [listRef, value]);\n\n  const onCarryChange = useCallback<CarryChange>(item => (event): void => {\n    const isPressEnter = (event as KeyboardEvent).code === 'Enter';\n    const isClick = !(event as KeyboardEvent).code;\n\n    if (isPressEnter || isClick) {\n      onChange(item);\n    }\n  }, [onChange]);\n\n  return (\n    <ul\n      className={ styles.list }\n      data-test-id=\"input-time_list\"\n      ref={ listRef }\n    >\n      { items.map(item => (\n        <li\n          key={ item }\n          onClick={ onCarryChange(item) }\n          onKeyPress={ onCarryChange(item) }\n          role=\"presentation\"\n          className={ cd('option', { active: value === item }) }\n          /* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex, jsx-a11y/tabindex-no-positive */\n          tabIndex={ 1 }\n          data-test-id={ dataTestId }\n        >\n          { item }\n        </li>\n      )) }\n\n      <div className={ styles.filler } />\n    </ul>\n  );\n};\n"],"names":["cd","cssDecorator","styles","List","_a","items","value","onChange","dataTestId","listRef","useRef","useEffect","activeElement","current","querySelector","scrollToTop","onCarryChange","useCallback","item","event","isPressEnter","code","isClick","React","className","list","ref","map","key","onClick","onKeyPress","role","active","tabIndex","filler"],"mappings":"gMAaA,IAAMA,EAAKC,EAAaC,GAkBXC,EAA4B,SAACC,OACxCC,UACAC,UACAC,aACAC,eAEMC,EAAUC,EAAgC,MAGhDC,GAAU,iBACFC,YAAgBH,EAAQI,8BAASC,cAAc,IAAKZ,EAAO,mBAE7DU,GACFG,EAAYN,EAASG,KAEtB,CAACH,EAASH,IAEb,IAAMU,EAAgBC,GAAyB,SAAAC,GAAQ,OAAA,SAACC,GACtD,IAAMC,EAAiD,UAAjCD,EAAwBE,KACxCC,GAAYH,EAAwBE,MAEtCD,GAAgBE,IAClBf,EAASW,MAEV,CAACX,IAEJ,OACEgB,sBACEC,UAAYtB,EAAOuB,oBACN,kBACbC,IAAMjB,GAEJJ,EAAMsB,KAAI,SAAAT,GAAQ,OAClBK,sBACEK,IAAMV,EACNW,QAAUb,EAAcE,GACxBY,WAAad,EAAcE,GAC3Ba,KAAK,eACLP,UAAYxB,EAAG,SAAU,CAAEgC,OAAQ1B,IAAUY,IAE7Ce,SAAW,iBACIzB,GAEbU,MAINK,uBAAKC,UAAYtB,EAAOgC,SAG9B"}