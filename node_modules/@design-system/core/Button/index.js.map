{"version":3,"file":"index.js","sources":["../../src/Button/index.tsx"],"sourcesContent":["import 'focus-visible';\nimport React, { ReactNode } from 'react';\nimport { BaseButton, DEFAULT_PROPS as DEFAULT_PROPS_BASE_BUTTON } from 'shared/BaseButton';\nimport { ButtonCoreSize, ButtonCoreType, ShareableButtonProps } from 'shared/types/button';\nimport { Sizes } from 'shared/Spinner/types';\nimport { Spinner } from 'shared/Spinner';\n\nimport styles from 'shared/BaseButton/coreStyles.scss';\n\nexport const DEFAULT_PROPS = {\n  type: 'primary',\n  size: 'default',\n  isLoading: false\n};\n\nexport interface ButtonProps extends Omit<ShareableButtonProps, 'isIcon'> {\n  /** Контект кнопки */\n  text: string;\n\n  /** Тип кнопки */\n  type?: ButtonCoreType;\n\n  /** Размер кнопки */\n  size?: ButtonCoreSize;\n\n  /** Пропс для растягивания кнопки на ширину родительского контейнера */\n  stretch?: boolean;\n}\n\nconst renderLoader = (size: Sizes | undefined): ReactNode => (\n  <div className={ styles[`spinner--${ size }`] }>\n    <Spinner size={ size } color=\"dark\" />\n  </div>\n);\n\nexport const Button = ({\n  text,\n  ...props\n}: ButtonProps): JSX.Element => (\n  <BaseButton\n    { ...props }\n    styles={ styles }\n    content={ text }\n    renderLoader={ renderLoader }\n  />\n);\n\nButton.defaultProps = {\n  ...DEFAULT_PROPS,\n  ...DEFAULT_PROPS_BASE_BUTTON\n} as ButtonProps;\n"],"names":["DEFAULT_PROPS","type","size","isLoading","renderLoader","React","className","styles","Spinner","color","Button","_a","text","props","BaseButton","content","defaultProps","__assign","DEFAULT_PROPS_BASE_BUTTON"],"mappings":"sRASaA,EAAgB,CAC3BC,KAAM,UACNC,KAAM,UACNC,WAAW,GAiBPC,EAAe,SAACF,GAAuC,OAC3DG,uBAAKC,UAAYC,EAAO,YAAaL,IACnCG,gBAACG,GAAQN,KAAOA,EAAOO,MAAM,WAIpBC,EAAS,SAACC,GACrB,IAAAC,SACGC,MAFkB,UAGS,OAC9BR,gBAACS,OACMD,GACLN,OAASA,EACTQ,QAAUH,EACVR,aAAeA,MAInBM,EAAOM,aAAeC,OACjBjB,GACAkB"}