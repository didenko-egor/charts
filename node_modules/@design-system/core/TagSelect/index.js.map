{"version":3,"file":"index.js","sources":["../../src/TagSelect/index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useState,\n  useRef,\n  useEffect\n} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { SelectProps, BaseSelectItem } from 'core/types/select';\nimport { BaseSelect } from 'core/shared';\nimport { BaseInput } from 'shared/BaseInput';\nimport { useFormContext } from 'shared/Form/formContext';\nimport { Mark } from 'core/src/Mark';\nimport { FieldWrapper } from 'core/src/FieldWrapper';\nimport { xorSelectItem, getUniqueSelectItems } from 'utils';\n\nimport inputStyles from 'shared/BaseInput/coreStyles.scss';\nimport iconsStyles from 'shared/BaseInput/WithIcons/coreStyles.scss';\n\nimport { IconPlus } from '../icons';\n\nimport styles from './styles.scss';\n\nconst emptyWrapperStyles = {};\n\ntype TagSelectProps = {\n  /** Выбранные по умолчанию тэги */\n  defaultSelectedItems?: BaseSelectItem[];\n\n  /** Колбэк получает обновленный список выбранных тэгов при его изменении */\n  onSelectedItemsChange: (selectedItems: string[], fieldName?: string) => void;\n} & Pick<SelectProps, 'id' | 'items' | 'label' | 'disabled' | 'labelAside' | 'labelWidth' | 'size' | 'dataTestId' | 'fieldName'>;\n\nconst TagSelect: React.FC<TagSelectProps> = ({\n  id,\n  items,\n  label,\n  disabled,\n  labelAside,\n  labelWidth,\n  fieldName,\n  size = 'default',\n  dataTestId = 'tag_select_id',\n  defaultSelectedItems = [],\n  onSelectedItemsChange\n}) => {\n  const { LABEL_WIDTH, LABEL_ASIDE, SIZE } = useFormContext({ labelWidth, labelAside, size });\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isMounted = useRef(false);\n\n  const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [isFilterItems, setIsFilterItems] = useState(false);\n  const [showAddButton, setShowAddButton] = useState(false);\n  const [dropdownItems, setDropdownItems] = useState<BaseSelectItem[]>(\n    getUniqueSelectItems(items, defaultSelectedItems)\n  );\n  const [selectedItems, setSelectedItems] = useState<BaseSelectItem[]>(defaultSelectedItems);\n\n  const onOpenDropdown = useCallback((): void => setIsOpenDropdown(true), []);\n\n  const onCloseDropdown = useCallback((): void => {\n    setIsOpenDropdown(false);\n    setIsFilterItems(false);\n    setShowAddButton(false);\n    setInputValue('');\n  }, []);\n\n  const onItemClickHandler = useCallback((value: string): void => {\n    const clickedItem = dropdownItems.find(item => item.value === value);\n\n    setSelectedItems(prevState => xorSelectItem(prevState, clickedItem));\n    onCloseDropdown();\n  }, [dropdownItems, onCloseDropdown]);\n\n  const onChangeHandler = useCallback((newInputValue: string): void => {\n    const trimmedValue = newInputValue.trim();\n\n    setIsOpenDropdown(true);\n    setIsFilterItems(true);\n    setInputValue(newInputValue);\n    setShowAddButton(!!trimmedValue && !dropdownItems.find(item => item.label === trimmedValue));\n  }, [dropdownItems]);\n\n  const onAddButtonClick = useCallback(() => {\n    const newSelectItem = { label: inputValue.trim(), value: uuidv4() };\n\n    setSelectedItems(prevState => [...prevState, newSelectItem]);\n    setDropdownItems(prevState => [...prevState, newSelectItem]);\n    onCloseDropdown();\n\n    inputRef.current?.focus();\n  }, [inputValue, onCloseDropdown]);\n\n  const handleRemoveTag = useCallback((removedTagValue: string) => () => {\n    setSelectedItems(prevState => prevState.filter(item => item.value !== removedTagValue));\n  }, []);\n\n  const filteredItems = useMemo(() => dropdownItems.filter(\n    item => {\n      const trimmedValue = inputValue.trim();\n\n      return item.label.toLowerCase().slice(0, trimmedValue.length) === trimmedValue.toLowerCase();\n    }\n  ), [inputValue, dropdownItems]);\n\n  const addIcon = useMemo(() => [\n    {\n      icon: <IconPlus />,\n      onClick: onAddButtonClick\n    }\n  ], [onAddButtonClick]);\n\n  const activeValues = useMemo(() => selectedItems.map(tag => tag.value), [selectedItems]);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      onSelectedItemsChange(selectedItems.map(item => item.label), fieldName);\n    } else {\n      isMounted.current = true;\n    }\n  }, [selectedItems, fieldName, onSelectedItemsChange]);\n\n  return (\n    <FieldWrapper\n      id={ id }\n      size={ SIZE }\n      disabled={ disabled }\n      label={ label }\n      labelAside={ LABEL_ASIDE }\n      dataTestId={ dataTestId }\n      labelWidth={ LABEL_WIDTH }\n    >\n      <BaseSelect\n        size={ SIZE }\n        activeValue={ activeValues }\n        items={ isFilterItems ? filteredItems : dropdownItems }\n        isOpenDropdown={ isOpenDropdown }\n        onItemClick={ onItemClickHandler }\n        onCloseDropdown={ onCloseDropdown }\n      >\n        <BaseInput\n          id={ id }\n          inputRef={ inputRef }\n          disabled={ disabled }\n          onChange={ onChangeHandler }\n          onClick={ onOpenDropdown }\n          placeholder=\"\"\n          value={ inputValue }\n          icons={ showAddButton ? addIcon : undefined }\n          styles={ inputStyles }\n          iconsStyles={ iconsStyles }\n          wrapperStyles={ emptyWrapperStyles }\n        />\n        <div className={ styles.tags }>\n          { selectedItems.map(tag => (\n            <Mark\n              key={ tag.value }\n              text={ tag.label }\n              onClose={ tag.disabled ? undefined : handleRemoveTag(tag.value) }\n              disabled={ disabled }\n              size={ SIZE }\n              dataTestId=\"selected_tag\"\n            />\n          )) }\n        </div>\n      </BaseSelect>\n    </FieldWrapper>\n  );\n};\n\nconst StoryComponent: React.FC<TagSelectProps> = () => null;\n\nexport { TagSelect, StoryComponent, TagSelectProps };\n"],"names":["emptyWrapperStyles","TagSelect","_a","id","items","label","disabled","labelAside","labelWidth","fieldName","_b","size","_c","dataTestId","_d","defaultSelectedItems","onSelectedItemsChange","_e","useFormContext","LABEL_WIDTH","LABEL_ASIDE","SIZE","inputRef","useRef","isMounted","_f","useState","isOpenDropdown","setIsOpenDropdown","_g","inputValue","setInputValue","_h","isFilterItems","setIsFilterItems","_j","showAddButton","setShowAddButton","_k","getUniqueSelectItems","dropdownItems","setDropdownItems","_l","selectedItems","setSelectedItems","onOpenDropdown","useCallback","onCloseDropdown","onItemClickHandler","value","clickedItem","find","item","prevState","xorSelectItem","onChangeHandler","newInputValue","trimmedValue","trim","onAddButtonClick","newSelectItem","uuidv4","current","focus","handleRemoveTag","removedTagValue","filter","filteredItems","useMemo","toLowerCase","slice","length","addIcon","icon","React","IconPlus","onClick","activeValues","map","tag","useEffect","FieldWrapper","BaseSelect","activeValue","onItemClick","BaseInput","onChange","placeholder","icons","undefined","styles","inputStyles","iconsStyles","wrapperStyles","className","tags","Mark","key","text","onClose"],"mappings":"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"}