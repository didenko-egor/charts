{"version":3,"file":"index.js","sources":["../../src/useClickOutside/index.tsx"],"sourcesContent":["import { useEffect } from 'react';\n\n/**\n * Хук позволяет вызовать колбэк по клику за пределами переданного элемента\n * @param {React.RefObject<HTMLElement>} ref Ссылка на элемент, по клику за пределами которого нужно вызывать колбэк\n * @param {VoidFunction} callback Колбэк для вызова\n * @returns {void}\n */\nconst useClickOutside = (ref: React.RefObject<HTMLElement>, callback: VoidFunction): void => {\n  useEffect(() => {\n    const onClickOutside = (event: Event): void => {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        callback();\n      }\n    };\n\n    window.addEventListener('pointerdown', onClickOutside);\n\n    return (): void => {\n      window.removeEventListener('pointerdown', onClickOutside);\n    };\n  }, [ref, callback]);\n};\n\nexport default useClickOutside;\n"],"names":["useClickOutside","ref","callback","useEffect","onClickOutside","event","current","contains","target","window","addEventListener","removeEventListener"],"mappings":"kCAQA,IAAMA,EAAkB,SAACC,EAAmCC,GAC1DC,GAAU,WACR,IAAMC,EAAiB,SAACC,GAClBJ,EAAIK,UAAYL,EAAIK,QAAQC,SAASF,EAAMG,SAC7CN,KAMJ,OAFAO,OAAOC,iBAAiB,cAAeN,GAEhC,WACLK,OAAOE,oBAAoB,cAAeP,MAE3C,CAACH,EAAKC"}