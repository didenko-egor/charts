{"version":3,"file":"index.js","sources":["../../src/InputFile/index.tsx"],"sourcesContent":["import 'focus-visible';\nimport React, {\n  useRef,\n  useState,\n  useCallback,\n  useMemo\n} from 'react';\nimport { cssDecorator, noOp } from '@front-toolkit/utils';\nimport { Text } from 'core/src/typography';\n\nimport UploadScreen from './screens/Upload';\nimport LoadingScreen from './screens/Loading';\nimport UploadedScreen from './screens/Uploaded';\nimport { InputFileProps } from './types';\nimport { checkFileAccept, checkViewerVisible } from './utils';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\nconst stopBubbleAndPreventDefault = (event: React.SyntheticEvent): void => {\n  event.preventDefault();\n  event.stopPropagation();\n};\n\nfunction InputFile({\n  size = 'default',\n  textButton = '',\n  accept = 'image/*',\n  textTypes = 'JPG, PNG',\n  multiple = false,\n  onChange = noOp,\n  isLoading = false,\n  isLoadingText = 'Загрузка...',\n  onCancelLoading = noOp,\n  errorText,\n  enablePreview = false,\n  files = [],\n  disabled = false\n}: InputFileProps): JSX.Element {\n  const [dragging, setDrag] = useState<boolean>(false);\n  const [isError, setError] = useState<boolean>(false);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>): void => {\n    if (event.target.files !== null) {\n      const filesArray = Array.from(event.target.files);\n      const isEqualType = filesArray[0] ? checkFileAccept(accept, filesArray[0]) : true;\n\n      setError(!isEqualType);\n      onChange(filesArray);\n    }\n  }, [accept, onChange]);\n\n  const handleDragIn = useCallback((event: React.DragEvent<HTMLDivElement>): void => {\n    stopBubbleAndPreventDefault(event);\n\n    if (disabled) return;\n\n    if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n      setDrag(true);\n    }\n  }, [disabled]);\n\n  const handleDragOut = useCallback(() => setDrag(false), []);\n\n  const handleDragOver = stopBubbleAndPreventDefault;\n\n  const handleDrop = useCallback((event: React.DragEvent<HTMLDivElement>): void => {\n    stopBubbleAndPreventDefault(event);\n\n    if (disabled) return;\n\n    if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n      const isEqualType = checkFileAccept(accept, event.dataTransfer.files[0]);\n\n      setDrag(false);\n      setError(!isEqualType);\n\n      if (isEqualType) {\n        const filesArray = Array.from(event.dataTransfer.files);\n        const dataTransfer = multiple ? filesArray : filesArray.slice(0, 1);\n        onChange(dataTransfer);\n      }\n\n      event.dataTransfer.clearData();\n    }\n  }, [\n    disabled,\n    accept,\n    multiple,\n    onChange\n  ]);\n\n  const clickInputFile = useCallback((): void => {\n    if (inputRef.current) {\n      inputRef.current.value = '';\n      inputRef.current.click();\n    }\n  }, []);\n\n  const handleFileClear = useCallback(() => {\n    onChange([]);\n    setError(false);\n  }, [onChange]);\n\n  /** Проверить, что переданный тип файла соответствует разрешенному */\n  const isTypeAccepted = useMemo(\n    () => files.length <= 0 || checkFileAccept(accept, files[0]),\n    [files, accept]\n  );\n\n  const showError = isError || errorText || !isTypeAccepted;\n  const showPreview = enablePreview && !multiple && !showError && !dragging && !isLoading && files.length >= 1;\n  const showUpload = !dragging && !isLoading && !showPreview;\n\n  const wrapperClassNames = cd('input_file', {\n    [size]: true,\n    error: showError,\n    dragging,\n    upload: showUpload,\n    loading: isLoading,\n    uploaded: showPreview,\n    uploaded_hidden: showPreview && !checkViewerVisible(files[0]),\n    disabled\n  });\n\n  const buttonSize = size === 'small' ? 'small' : 'default';\n  const textSize = size === 'small' ? 'small' : 'default';\n  const loaderSize = size === 'small' ? 'default' : 'large';\n\n  return (\n    <div className={ cd('wrapper', { stretch: size === 'stretch' }) }>\n      <div\n        className={ wrapperClassNames }\n        onDragEnter={ handleDragIn }\n        onDragOver={ handleDragOver }\n        onDrop={ handleDrop }\n        onDragLeave={ handleDragOut }\n        data-test-id=\"inputFile_container\"\n      >\n        { showUpload && (\n          <UploadScreen\n            textButton={ textButton }\n            buttonSize={ buttonSize }\n            textSize={ textSize }\n            mediaTypes={ textTypes }\n            onClick={ clickInputFile }\n            disabled={ disabled }\n          />\n        ) }\n\n        { isLoading && (\n          <LoadingScreen\n            loaderSize={ loaderSize }\n            textSize={ textSize }\n            loadingText={ isLoadingText }\n            fileName={ files[0]?.name }\n            buttonSize={ buttonSize }\n            onCancel={ onCancelLoading }\n          />\n        ) }\n\n        { showPreview && (\n          <UploadedScreen\n            file={ files[0] }\n            onDelete={ handleFileClear }\n            textSize={ textSize }\n            disabled={ disabled }\n          />\n        ) }\n\n        <input\n          type=\"file\"\n          accept={ accept }\n          multiple={ multiple }\n          ref={ inputRef }\n          onChange={ handleChange }\n        />\n      </div>\n\n      { showError && (\n        <Text color=\"negative_dark\" size=\"extra_small\">{ errorText || 'Ошибка' }</Text>\n      ) }\n    </div>\n  );\n}\n\nexport { InputFile };\n"],"names":["cd","cssDecorator","styles","stopBubbleAndPreventDefault","event","preventDefault","stopPropagation","InputFile","_a","_d","size","_e","textButton","_f","accept","_g","textTypes","_h","multiple","_j","onChange","noOp","_k","isLoading","_l","isLoadingText","_m","onCancelLoading","errorText","_o","enablePreview","_p","files","_q","disabled","_r","useState","dragging","setDrag","_s","isError","setError","inputRef","useRef","handleChange","useCallback","target","filesArray","Array","from","isEqualType","checkFileAccept","handleDragIn","dataTransfer","items","length","handleDragOut","handleDragOver","handleDrop","slice","clearData","clickInputFile","current","value","click","handleFileClear","isTypeAccepted","useMemo","showError","showPreview","showUpload","wrapperClassNames","_b","checkViewerVisible","buttonSize","textSize","loaderSize","React","className","stretch","onDragEnter","onDragOver","onDrop","onDragLeave","UploadScreen","mediaTypes","onClick","LoadingScreen","loadingText","fileName","name","onCancel","UploadedScreen","file","onDelete","type","ref","Text","color"],"mappings":"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"}