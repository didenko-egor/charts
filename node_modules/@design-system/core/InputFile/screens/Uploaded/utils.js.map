{"version":3,"file":"utils.js","sources":["../../../../src/InputFile/screens/Uploaded/utils.ts"],"sourcesContent":["/** Прочитать файл как Data URL */\nexport function readFileAsURL(file: File): Promise<string | null> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    // Ранее использовался метод readAsDataURL, преобразовывавший файл в base64 строку.\n    // Был заменен из-за того, что при чтении тяжелых файлов он возвращает пустую строку.\n    reader.readAsArrayBuffer(file);\n    reader.onerror = (error): void => reject(error);\n    reader.onload = (): void => {\n      const blob = new Blob(\n        [new Uint8Array(reader.result as ArrayBuffer)],\n        { type: file.type }\n      );\n      const url = URL.createObjectURL(blob);\n      resolve(url);\n    };\n  });\n}\n"],"names":["readFileAsURL","file","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onerror","error","onload","blob","Blob","Uint8Array","result","type","url","URL","createObjectURL"],"mappings":"SACgBA,EAAcC,GAC5B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WAInBD,EAAOE,kBAAkBN,GACzBI,EAAOG,QAAU,SAACC,GAAgB,OAAAL,EAAOK,IACzCJ,EAAOK,OAAS,WACd,IAAMC,EAAO,IAAIC,KACf,CAAC,IAAIC,WAAWR,EAAOS,SACvB,CAAEC,KAAMd,EAAKc,OAETC,EAAMC,IAAIC,gBAAgBP,GAChCR,EAAQa,MAGd"}