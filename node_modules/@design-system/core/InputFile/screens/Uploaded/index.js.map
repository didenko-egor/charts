{"version":3,"file":"index.js","sources":["../../../../src/InputFile/screens/Uploaded/index.tsx"],"sourcesContent":["import React, {\n  memo,\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\nimport { TextSize } from 'core/src/typography';\nimport ControllButton from 'core/src/ControlBar/ContollButton';\n\nimport { IconBin } from 'core/src/icons';\n\nimport PlayButton from './PlayButton';\nimport MediaViewer from './MediaViewer';\nimport MiddleOverflowText from '../../MiddleOverflowText';\nimport { readFileAsURL } from './utils';\nimport { MediaType, PREVIEW_MIME, getMediaType } from '../../mimeTypes';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\ninterface UploadedScreenProps {\n  /** Файл для просмотра */\n  file: File;\n\n  /** Обработчик удаления файла */\n  onDelete: VoidFunction;\n\n  /** Размер текста */\n  textSize?: TextSize;\n\n  /** Заблокирован */\n  disabled?: boolean;\n}\n\n/** Экран предпросмотра медиа */\nfunction UploadedScreen({\n  file,\n  onDelete,\n  textSize = 'small',\n  disabled\n}: UploadedScreenProps): JSX.Element {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [mediaUrl, setMediaUrl] = useState<string | null>(null);\n\n  /** Чтение содержимого файла */\n  useEffect(() => {\n    readFileAsURL(file).then(url => {\n      setMediaUrl(url);\n      setIsPlaying(false);\n    });\n  }, [file]);\n\n  const togglePlay = useCallback(() => {\n    setIsPlaying(prev => !prev);\n  }, []);\n\n  /** Возможен ли вообще предпросмотр? */\n  const canPreview = PREVIEW_MIME.has(file.type);\n\n  /** Тип предросмотра */\n  const mediaType = getMediaType(file);\n\n  const showPlayPause = canPreview\n    && (mediaType === MediaType.Video || mediaType === MediaType.Audio);\n\n  const previewStyles = cd('preview', {\n    video: mediaType === MediaType.Video,\n    image: mediaType === MediaType.Image,\n    audio: mediaType === MediaType.Audio,\n    other: mediaType === MediaType.Other\n  });\n\n  return (\n    <div\n      className={ styles.container }\n      data-test-id=\"inputFile_uploadedScreen\"\n    >\n      <div className={ styles.header }>\n        { showPlayPause\n        && (\n        <PlayButton\n          isPlaying={ isPlaying }\n          togglePlay={ togglePlay }\n          dataTestId=\"inputFile_uploadedScreen_play\"\n        />\n        ) }\n\n        <MiddleOverflowText\n          key={ file.name }\n          value={ file.name }\n          size={ textSize }\n          color=\"primary\"\n          dataTestId=\"inputFile_uploadedScreen_fileName\"\n        />\n\n        <ControllButton\n          disabled={ disabled }\n          onClick={ onDelete }\n          dataTestId=\"inputFile_uploadedScreen_bin\"\n        >\n          <IconBin />\n        </ControllButton>\n      </div>\n      <div className={ previewStyles }>\n        { mediaUrl && canPreview && (\n        <MediaViewer\n          fileName={ file.name }\n          mediaType={ mediaType }\n          isPlaying={ isPlaying }\n          fileUrl={ mediaUrl }\n        />\n        ) }\n      </div>\n    </div>\n  );\n}\n\nconst MemoUploadedScreen = memo(UploadedScreen);\nMemoUploadedScreen.displayName = 'UploadedScreen';\n\nexport default MemoUploadedScreen;\n"],"names":["cd","cssDecorator","styles","MemoUploadedScreen","memo","_a","file","onDelete","_b","textSize","disabled","_c","useState","isPlaying","setIsPlaying","_d","mediaUrl","setMediaUrl","useEffect","readFileAsURL","then","url","togglePlay","useCallback","prev","canPreview","PREVIEW_MIME","has","type","mediaType","getMediaType","showPlayPause","MediaType","Video","Audio","previewStyles","video","image","Image","audio","other","Other","React","className","container","header","PlayButton","dataTestId","MiddleOverflowText","key","name","value","size","color","ControllButton","onClick","IconBin","MediaViewer","fileName","fileUrl","displayName"],"mappings":"sfAoBA,IAAMA,EAAKC,EAAaC,OAmGlBC,EAAqBC,GAlF3B,SAAwBC,OACtBC,SACAC,aACAC,aAAAC,aAAW,UACXC,aAEMC,EAA4BC,GAAS,GAApCC,OAAWC,OACZC,EAA0BH,EAAwB,MAAjDI,OAAUC,OAGjBC,GAAU,WACRC,EAAcb,GAAMc,MAAK,SAAAC,GACvBJ,EAAYI,GACZP,GAAa,QAEd,CAACR,IAEJ,IAAMgB,EAAaC,GAAY,WAC7BT,GAAa,SAAAU,GAAQ,OAACA,OACrB,IAGGC,EAAaC,EAAaC,IAAIrB,EAAKsB,MAGnCC,EAAYC,EAAaxB,GAEzByB,EAAgBN,IAChBI,IAAcG,EAAUC,OAASJ,IAAcG,EAAUE,OAEzDC,EAAgBnC,EAAG,UAAW,CAClCoC,MAAOP,IAAcG,EAAUC,MAC/BI,MAAOR,IAAcG,EAAUM,MAC/BC,MAAOV,IAAcG,EAAUE,MAC/BM,MAAOX,IAAcG,EAAUS,QAGjC,OACEC,uBACEC,UAAYzC,EAAO0C,yBACN,4BAEbF,uBAAKC,UAAYzC,EAAO2C,QACpBd,GAEFW,gBAACI,GACCjC,UAAYA,EACZS,WAAaA,EACbyB,WAAW,kCAIbL,gBAACM,GACCC,IAAM3C,EAAK4C,KACXC,MAAQ7C,EAAK4C,KACbE,KAAO3C,EACP4C,MAAM,UACNN,WAAW,sCAGbL,gBAACY,GACC5C,SAAWA,EACX6C,QAAUhD,EACVwC,WAAW,gCAEXL,gBAACc,UAGLd,uBAAKC,UAAYR,GACbnB,GAAYS,GACdiB,gBAACe,GACCC,SAAWpD,EAAK4C,KAChBrB,UAAYA,EACZhB,UAAYA,EACZ8C,QAAU3C,KAMpB,IAGAb,EAAmByD,YAAc"}