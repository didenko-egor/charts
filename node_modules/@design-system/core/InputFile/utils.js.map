{"version":3,"file":"utils.js","sources":["../../src/InputFile/utils.ts"],"sourcesContent":["import { PREVIEW_MIME } from './mimeTypes';\n\ninterface FileParams {\n  /** Расширение файла */\n  extension?: string;\n\n  /** Mime-тип */\n  type?: string;\n\n  /** Mime подтип */\n  subtype?: string;\n}\n\nfunction getFileParams(file: File): FileParams {\n  const extension = file.name.split('.').at(-1)?.toLocaleLowerCase();\n\n  const result: FileParams = { extension };\n\n  if (file.type) {\n    const [type, subtype] = file.type.split('/');\n\n    result.type = type;\n    result.subtype = subtype;\n  }\n\n  return result;\n}\n\n/** Проверить, соответствует ли файл критериям  accept */\nexport function checkFileAccept(accept: string, file: File): boolean {\n  if (!accept) return false;\n\n  if (accept.includes('*/*')) return true;\n\n  const params = getFileParams(file);\n\n  /** Проверить mime-тип */\n  if (params.type && accept.includes(`${ params.type }/*`)) {\n    return true;\n  }\n\n  /** Проверить по расширению файла, так как расширение может не совпадать с mime-подтипом\n   * Пример - файл file.jpg будет иметь mime: image/jpeg, а accept задан как '.jpg'\n  */\n  if (params.extension) {\n    const extensionAllowed = accept.includes(params.extension);\n    if (extensionAllowed) {\n      return true;\n    }\n  }\n\n  if (params.subtype) {\n    return accept.includes(params.subtype);\n  }\n\n  return false;\n}\n\n/** Доступно ли область отображения содержимого для файла */\nexport function checkViewerVisible(file?: File): boolean {\n  if (!file) return false;\n\n  return PREVIEW_MIME.has(file.type) && !file.type.includes('audio');\n}\n\n/** Доступен ли предпросмотр для файла? */\nexport function checkInputFilePreviewPossible(file: File): boolean {\n  return PREVIEW_MIME.has(file.type);\n}\n"],"names":["checkFileAccept","accept","file","includes","params","result","extension","name","split","at","toLocaleLowerCase","type","_b","subtype","getFileParams","checkViewerVisible","PREVIEW_MIME","has","checkInputFilePreviewPossible"],"mappings":"uDA6BgBA,EAAgBC,EAAgBC,GAC9C,IAAKD,EAAQ,OAAO,EAEpB,GAAIA,EAAOE,SAAS,OAAQ,OAAO,EAEnC,IAAMC,EArBR,SAAuBF,SAGfG,EAAqB,CAAEC,oBAFXJ,EAAKK,KAAKC,MAAM,KAAKC,IAAI,yBAAIC,qBAI/C,GAAIR,EAAKS,KAAM,CACP,IAAAC,EAAkBV,EAAKS,KAAKH,MAAM,KAAjCG,OAAME,OAEbR,EAAOM,KAAOA,EACdN,EAAOQ,QAAUA,EAGnB,OAAOR,CACT,CAQiBS,CAAcZ,GAG7B,GAAIE,EAAOO,MAAQV,EAAOE,SAAaC,EAAOO,WAC5C,OAAO,EAMT,GAAIP,EAAOE,WACgBL,EAAOE,SAASC,EAAOE,WAE9C,OAAO,EAIX,QAAIF,EAAOS,SACFZ,EAAOE,SAASC,EAAOS,QAIlC,UAGgBE,EAAmBb,GACjC,QAAKA,IAEEc,EAAaC,IAAIf,EAAKS,QAAUT,EAAKS,KAAKR,SAAS,SAC5D,UAGgBe,EAA8BhB,GAC5C,OAAOc,EAAaC,IAAIf,EAAKS,KAC/B"}