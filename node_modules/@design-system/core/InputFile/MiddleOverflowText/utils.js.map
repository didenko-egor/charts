{"version":3,"file":"utils.js","sources":["../../../src/InputFile/MiddleOverflowText/utils.ts"],"sourcesContent":["/**\n * Функция для формирование укороченной в середине строки\n * @param str Строка текста\n * @param scrollWidth Ширина, которую текст фактически занимает\n * @param clientWidth Ширина, которую текст должен занимать\n * @returns Укороченная строка с точками в середине\n */\nexport default function overflowMiddleString(\n  str: string,\n  scrollWidth: number,\n  clientWidth: number\n): string {\n  /** Определить, на сколько процентов укоротить исходную строку */\n  const overflowFactor = (scrollWidth - clientWidth) / scrollWidth;\n\n  /** Сколько символов из исходной строки нужно удалить */\n  const overflowLength = str.length * overflowFactor;\n  /** Левая часть (до ...).\n   * От середины отступается влево половина от количества удаляемых символов\n   * + Ещё 2 (вместо них будет ...)\n   * Math.floor и -2 используется из-за того, что символы могут иметь разную ширину.\n   * И те Х% ширины текста, которые нужно убрать,\n   * могут не укладываться в количество символов, которые нужно убрать.\n   * Поэтому округляем вниз и с запасом (-2), лучше чтобы было короче.\n   * */\n  const leftIndex = Math.floor(str.length / 2 - overflowLength / 2) - 2;\n\n  /** Индекс начала правой части (после ...). Также пропускаем из середины символы\n   * + место для ... */\n  const rightIndex = Math.floor(str.length / 2 + overflowLength / 2) + 2;\n\n  /** Формирование итоговой строки */\n  return `${ str.slice(0, leftIndex) }...${ str.slice(rightIndex) }`;\n}\n"],"names":["overflowMiddleString","str","scrollWidth","clientWidth","overflowFactor","overflowLength","length","leftIndex","Math","floor","rightIndex","slice"],"mappings":"SAOwBA,EACtBC,EACAC,EACAC,GAGA,IAAMC,GAAkBF,EAAcC,GAAeD,EAG/CG,EAAiBJ,EAAIK,OAASF,EAS9BG,EAAYC,KAAKC,MAAMR,EAAIK,OAAS,EAAID,EAAiB,GAAK,EAI9DK,EAAaF,KAAKC,MAAMR,EAAIK,OAAS,EAAID,EAAiB,GAAK,EAGrE,OAAWJ,EAAIU,MAAM,EAAGJ,SAAkBN,EAAIU,MAAMD,EACtD"}