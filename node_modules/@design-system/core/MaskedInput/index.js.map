{"version":3,"file":"index.js","sources":["../../src/MaskedInput/index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n  useRef\n} from 'react';\nimport { Input } from 'core/src/Input';\n\nimport {\n  getMaskSymbolsIndexes,\n  formatValueByMask,\n  getNumbers,\n  createMask,\n  checkValueInvalid\n} from './utils';\nimport { MaskedInputProps, KeyDownInfoState } from './types';\n\n/** Данный компонент введён, чтобы иметь возможность принимать inputRef снаружи */\nfunction ForwardedMaskInput({\n  id,\n  placeholderMask,\n  placeholder,\n  isError,\n  validationFormat,\n  onChange,\n  inputRef,\n  ...rest\n}: MaskedInputProps): JSX.Element {\n  const [changeEnd, setChangeEnd] = useState(false);\n  const [keyDownInfo, setKeyDownInfo] = useState<KeyDownInfoState>({ currentPosition: 0, pressedKey: '' });\n  const [isInputError, setIsInputError] = useState(false);\n\n  const inputMask = useMemo(() => createMask(placeholderMask), [placeholderMask]);\n  const {\n    delimiterIndexes,\n    inputValueIndexes\n  } = useMemo(() => getMaskSymbolsIndexes(placeholderMask), [placeholderMask]);\n\n  const handleChange = useCallback((inputValue: string): void => {\n    const cleanValue = getNumbers(inputValue);\n\n    if (onChange) {\n      const formattedValue = formatValueByMask(cleanValue, inputMask);\n\n      onChange(formattedValue);\n      setIsInputError(checkValueInvalid(formattedValue, validationFormat));\n    }\n\n    setChangeEnd(true);\n  }, [inputMask, onChange, validationFormat]);\n\n  const handleKeyDown = useCallback((event: React.KeyboardEvent): void => {\n    const target = event.target as HTMLInputElement;\n    const pressedKey = event.key;\n\n    if ((pressedKey !== 'ArrowLeft' && pressedKey !== 'ArrowRight')) {\n      setKeyDownInfo({\n        currentPosition: Number(target.selectionStart),\n        pressedKey\n      });\n    }\n  }, []);\n\n  const handleContextMenu = useCallback((event: React.MouseEvent): void => {\n    const target = event.target as HTMLInputElement;\n\n    setKeyDownInfo({\n      currentPosition: Number(target.selectionStart),\n      pressedKey: ''\n    });\n  }, []);\n\n  /** useEffect управляет положением курсора в поле для ввода */\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  useEffect(() => {\n    // changeEnd === true признак того, что произошёл ввод (событие change) в Input\n    if (inputRef?.current && changeEnd) {\n      const { currentPosition, pressedKey } = keyDownInfo;\n      const isPositionOnDelimiter = delimiterIndexes.includes(currentPosition);\n      const isDeletePressed = pressedKey === 'Delete';\n      const isDelete = pressedKey === 'Backspace' || isDeletePressed;\n\n      let newPosition;\n      // Если произошло УДАЛЕНИЕ символа\n      if (isDelete) {\n        // При нажатии клавиши \"DELETE\" оставляем курсор на том же месте\n        if (isDeletePressed) {\n          newPosition = currentPosition;\n        } else {\n          // Иначе считаем, что была нажата клавиша \"BACKSPACE\", поэтому смещаем курсор на одну позицию влево\n          newPosition = currentPosition - 1;\n        }\n        // Иначе - произошел ВВОД нового символа\n        // Если введено число, расчитываем новую позицию курсора\n      } else if (/\\d/g.test(pressedKey)) {\n        // Если ВВОД происходит с позиции разделителя маски\n        if (isPositionOnDelimiter) {\n          // находим ближайший индекс числового значения и ставим курсор за ним (потому что ввод уже произошел)\n          newPosition = Number(inputValueIndexes.find(number => number > currentPosition)) + 1;\n        } else {\n          // иначе - просто перемещаем курсор на 1 позицию вправо\n          newPosition = currentPosition + 1;\n        }\n      // иначе - оставляем курсор на прежнем месте\n      } else {\n        newPosition = currentPosition;\n      }\n      if (inputRef?.current) {\n        // eslint-disable-next-line no-param-reassign\n        inputRef.current.selectionStart = newPosition;\n        // eslint-disable-next-line no-param-reassign\n        inputRef.current.selectionEnd = newPosition;\n      }\n\n      setChangeEnd(false);\n    }\n  }, [keyDownInfo, delimiterIndexes, changeEnd, inputValueIndexes, inputRef]);\n\n  return (\n    <Input\n      { ...rest }\n      id={ id }\n      isError={ isInputError || isError }\n      inputRef={ inputRef }\n      onChange={ handleChange }\n      onKeyDown={ handleKeyDown }\n      placeholder={ placeholderMask || placeholder }\n      onContextMenu={ handleContextMenu }\n    />\n  );\n}\n\n/** Маскированное поле ввода */\nfunction MaskedInput(props: MaskedInputProps): JSX.Element {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  return <ForwardedMaskInput { ...props } inputRef={ inputRef } />;\n}\n\nexport { MaskedInput, ForwardedMaskInput };\n"],"names":["ForwardedMaskInput","_a","id","placeholderMask","placeholder","isError","validationFormat","onChange","inputRef","rest","_b","useState","changeEnd","setChangeEnd","_c","currentPosition","pressedKey","keyDownInfo","setKeyDownInfo","_d","isInputError","setIsInputError","inputMask","useMemo","createMask","_e","getMaskSymbolsIndexes","delimiterIndexes","inputValueIndexes","handleChange","useCallback","inputValue","cleanValue","getNumbers","formattedValue","formatValueByMask","checkValueInvalid","handleKeyDown","event","target","key","Number","selectionStart","handleContextMenu","useEffect","current","currentPosition_1","isPositionOnDelimiter","includes","isDeletePressed","newPosition","test","find","number","selectionEnd","React","Input","onKeyDown","onContextMenu","MaskedInput","props","useRef"],"mappings":"sYAmBA,SAASA,EAAmBC,GAC1B,IAAAC,OACAC,oBACAC,gBACAC,YACAC,qBACAC,aACAC,aACGC,MARuB,2FAUpBC,EAA4BC,GAAS,GAApCC,OAAWC,OACZC,EAAgCH,EAA2B,CAAEI,gBAAiB,EAAGC,WAAY,KAA5FC,OAAaC,OACdC,EAAkCR,GAAS,GAA1CS,OAAcC,OAEfC,EAAYC,GAAQ,WAAM,OAAAC,EAAWrB,KAAkB,CAACA,IACxDsB,EAGFF,GAAQ,WAAM,OAAAG,EAAsBvB,KAAkB,CAACA,IAFzDwB,qBACAC,sBAGIC,EAAeC,GAAY,SAACC,GAChC,IAAMC,EAAaC,EAAWF,GAE9B,GAAIxB,EAAU,CACZ,IAAM2B,EAAiBC,EAAkBH,EAAYV,GAErDf,EAAS2B,GACTb,EAAgBe,EAAkBF,EAAgB5B,IAGpDO,GAAa,KACZ,CAACS,EAAWf,EAAUD,IAEnB+B,EAAgBP,GAAY,SAACQ,GACjC,IAAMC,EAASD,EAAMC,OACfvB,EAAasB,EAAME,IAEL,cAAfxB,GAA6C,eAAfA,GACjCE,EAAe,CACbH,gBAAiB0B,OAAOF,EAAOG,gBAC/B1B,iBAGH,IAEG2B,EAAoBb,GAAY,SAACQ,GACrC,IAAMC,EAASD,EAAMC,OAErBrB,EAAe,CACbH,gBAAiB0B,OAAOF,EAAOG,gBAC/B1B,WAAY,OAEb,IAgDH,OA5CA4B,GAAU,WAER,IAAIpC,eAAAA,EAAUqC,UAAWjC,EAAW,CAC1B,IAAAkC,EAAgC7B,kBAAfD,EAAeC,aAClC8B,EAAwBpB,EAAiBqB,SAASF,GAClDG,EAAiC,WAAfjC,EAGpBkC,SAKAA,EAP4B,cAAflC,GAA8BiC,EAMzCA,EACYH,EAGAA,EAAkB,EAIzB,MAAMK,KAAKnC,GAEhB+B,EAEYN,OAAOb,EAAkBwB,MAAK,SAAAC,GAAU,OAAAA,EAASP,MAAoB,EAGrEA,EAAkB,EAIpBA,GAEZtC,eAAAA,EAAUqC,WAEZrC,EAASqC,QAAQH,eAAiBQ,EAElC1C,EAASqC,QAAQS,aAAeJ,GAGlCrC,GAAa,MAEd,CAACI,EAAaU,EAAkBf,EAAWgB,EAAmBpB,IAG/D+C,gBAACC,OACM/C,GACLP,GAAKA,EACLG,QAAUe,GAAgBf,EAC1BG,SAAWA,EACXD,SAAWsB,EACX4B,UAAYpB,EACZjC,YAAcD,GAAmBC,EACjCsD,cAAgBf,IAGtB,CAGA,SAASgB,EAAYC,GACnB,IAAMpD,EAAWqD,EAAyB,MAE1C,OAAON,gBAACvD,OAAwB4D,GAAQpD,SAAWA,IACrD"}