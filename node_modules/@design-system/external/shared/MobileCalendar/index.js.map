{"version":3,"file":"index.js","sources":["../../../../../shared/MobileCalendar/index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from 'react';\nimport { MobileCalendarProps } from 'shared/types/calendar';\n\nimport { IconSimpleArrowLeft, IconSimpleArrowRight } from 'external/src/icons';\nimport { Label } from 'external/src/typography/Label';\n\nimport Month from './Month';\n\nimport styles from './styles.scss';\n\nexport const months = [\n  'Январь',\n  'Февраль',\n  'Март',\n  'Апрель',\n  'Май',\n  'Июнь',\n  'Июль',\n  'Август',\n  'Сентябрь',\n  'Октябрь',\n  'Ноябрь',\n  'Декабрь'\n];\n\nexport const MobileCalendar: React.FC<MobileCalendarProps> = ({\n  dataTestId = 'mobile_calendar_id',\n  onSelectedDateChange,\n  onChangeActiveYear,\n  minDate,\n  maxDate,\n  range: isRange,\n  value: presetSelected\n}) => {\n  const [activeDate, setActiveDate] = useState(new Date());\n  const [selectedDates, setSelectedDates] = useState<Date[]>([]);\n\n  const activeYear = activeDate?.getFullYear();\n  const activeMonth = activeDate?.getMonth();\n\n  const disabledBackButton = useMemo(\n    () => activeYear === minDate?.getFullYear() && activeMonth === minDate?.getMonth(),\n    [activeMonth, activeYear, minDate]\n  );\n\n  const disabledForwardButton = useMemo(\n    () => activeYear === maxDate?.getFullYear() && activeMonth === maxDate?.getMonth(),\n    [activeMonth, activeYear, maxDate]\n  );\n\n  useEffect(() => {\n    if (!presetSelected) {\n      return undefined;\n    }\n\n    if (Array.isArray(presetSelected)) {\n      const lastSelected = presetSelected[presetSelected.length - 1];\n      setActiveDate(new Date(lastSelected));\n\n      return setSelectedDates(presetSelected.length === 1 ? presetSelected : [presetSelected[0], lastSelected]);\n    }\n\n    setActiveDate(new Date(presetSelected));\n\n    return setSelectedDates(presetSelected ? [presetSelected] : []);\n  }, [presetSelected]);\n\n  useEffect(() => {\n    if (selectedDates.length && onSelectedDateChange) {\n      onSelectedDateChange(selectedDates);\n    }\n  }, [selectedDates, onSelectedDateChange]);\n\n  useEffect(() => {\n    if (onChangeActiveYear && activeYear) {\n      onChangeActiveYear(activeYear);\n    }\n  }, [onChangeActiveYear, activeYear]);\n\n  const handleChangeMonth = useCallback((\n    changeMonthValue: -1 | 1\n  ) => setActiveDate(prev => new Date(prev.setMonth(prev.getMonth() + changeMonthValue))), []);\n\n  const handleDayClick = useCallback(selectedDate => setSelectedDates(\n    prev => {\n      if (!prev[0] || !isRange || prev.length === 2) {\n        return [selectedDate];\n      }\n\n      if (prev.length === 1 && prev[0]?.getDate() === selectedDate.getDate()) {\n        return prev;\n      }\n\n      return [...prev, selectedDate].sort((a, b) => +a - +b);\n    }\n  ), [isRange]);\n\n  return (\n    <div\n      data-test-id={ dataTestId }\n      className={ styles.wrapper }\n      aria-label=\"Calendar\"\n    >\n      <div className={ styles.header }>\n        <button\n          type=\"button\"\n          aria-label=\"Назад\"\n          className={ styles.arrow_button }\n          onClick={ (): void => handleChangeMonth(-1) }\n          disabled={ disabledBackButton }\n        >\n          <IconSimpleArrowLeft />\n        </button>\n        <div className={ styles.label }>\n          <Label size=\"large\" color=\"tass\">{ `${ months[activeMonth] } ${ activeYear }` }</Label>\n        </div>\n        <button\n          type=\"button\"\n          aria-label=\"Вперед\"\n          className={ styles.arrow_button }\n          onClick={ (): void => handleChangeMonth(+1) }\n          disabled={ disabledForwardButton }\n        >\n          <IconSimpleArrowRight />\n        </button>\n      </div>\n      <Month\n        month={ activeMonth }\n        year={ activeYear }\n        selectedDates={ selectedDates }\n        minDate={ minDate }\n        maxDate={ maxDate }\n        handleDayClick={ handleDayClick }\n      />\n    </div>\n  );\n};\n"],"names":["months","MobileCalendar","_a","_b","dataTestId","onSelectedDateChange","onChangeActiveYear","minDate","maxDate","isRange","presetSelected","_c","useState","Date","activeDate","setActiveDate","_d","selectedDates","setSelectedDates","activeYear","getFullYear","activeMonth","getMonth","disabledBackButton","useMemo","disabledForwardButton","useEffect","Array","isArray","lastSelected","length","handleChangeMonth","useCallback","changeMonthValue","prev","setMonth","handleDayClick","selectedDate","getDate","__spreadArray","sort","a","b","React","className","styles","wrapper","header","type","arrow_button","onClick","disabled","IconSimpleArrowLeft","label","Label","size","color","IconSimpleArrowRight","Month","month","year"],"mappings":"+UAeaA,EAAS,CACpB,SACA,UACA,OACA,SACA,MACA,OACA,OACA,SACA,WACA,UACA,SACA,WAGWC,EAAgD,SAACC,OAC5DC,eAAAC,aAAa,uBACbC,yBACAC,uBACAC,YACAC,YACOC,UACAC,UAEDC,EAA8BC,EAAS,IAAIC,MAA1CC,OAAYC,OACbC,EAAoCJ,EAAiB,IAApDK,OAAeC,OAEhBC,EAAaL,eAAAA,EAAYM,cACzBC,EAAcP,eAAAA,EAAYQ,WAE1BC,EAAqBC,GACzB,WAAM,OAAAL,KAAeZ,eAAAA,EAASa,gBAAiBC,KAAgBd,eAAAA,EAASe,cACxE,CAACD,EAAaF,EAAYZ,IAGtBkB,EAAwBD,GAC5B,WAAM,OAAAL,KAAeX,eAAAA,EAASY,gBAAiBC,KAAgBb,eAAAA,EAASc,cACxE,CAACD,EAAaF,EAAYX,IAG5BkB,GAAU,WACR,GAAKhB,EAAL,CAIA,GAAIiB,MAAMC,QAAQlB,GAAiB,CACjC,IAAMmB,EAAenB,EAAeA,EAAeoB,OAAS,GAG5D,OAFAf,EAAc,IAAIF,KAAKgB,IAEhBX,EAA2C,IAA1BR,EAAeoB,OAAepB,EAAiB,CAACA,EAAe,GAAImB,IAK7F,OAFAd,EAAc,IAAIF,KAAKH,IAEhBQ,EAAiBR,EAAiB,CAACA,GAAkB,OAC3D,CAACA,IAEJgB,GAAU,WACJT,EAAca,QAAUzB,GAC1BA,EAAqBY,KAEtB,CAACA,EAAeZ,IAEnBqB,GAAU,WACJpB,GAAsBa,GACxBb,EAAmBa,KAEpB,CAACb,EAAoBa,IAExB,IAAMY,EAAoBC,GAAY,SACpCC,GACG,OAAAlB,GAAc,SAAAmB,GAAQ,OAAA,IAAIrB,KAAKqB,EAAKC,SAASD,EAAKZ,WAAaW,SAAqB,IAEnFG,EAAiBJ,GAAY,SAAAK,GAAgB,OAAAnB,GACjD,SAAAgB,SACE,OAAKA,EAAK,IAAOzB,GAA2B,IAAhByB,EAAKJ,OAIb,IAAhBI,EAAKJ,mBAAgBI,EAAK,yBAAII,aAAcD,EAAaC,UACpDJ,EAGFK,OAAIL,OAAMG,OAAcG,MAAK,SAACC,EAAGC,GAAM,OAACD,GAAKC,KAP3C,CAACL,QASX,CAAC5B,IAEJ,OACEkC,sCACiBvC,EACfwC,UAAYC,EAAOC,qBACR,YAEXH,uBAAKC,UAAYC,EAAOE,QACtBJ,0BACEK,KAAK,sBACM,QACXJ,UAAYC,EAAOI,aACnBC,QAAU,WAAY,OAAAnB,GAAmB,IACzCoB,SAAW5B,GAEXoB,gBAACS,SAEHT,uBAAKC,UAAYC,EAAOQ,OACtBV,gBAACW,GAAMC,KAAK,QAAQC,MAAM,QAAaxD,EAAOqB,OAAkBF,IAElEwB,0BACEK,KAAK,sBACM,SACXJ,UAAYC,EAAOI,aACnBC,QAAU,WAAY,OAAAnB,EAAkB,IACxCoB,SAAW1B,GAEXkB,gBAACc,UAGLd,gBAACe,GACCC,MAAQtC,EACRuC,KAAOzC,EACPF,cAAgBA,EAChBV,QAAUA,EACVC,QAAUA,EACV4B,eAAiBA,IAIzB"}