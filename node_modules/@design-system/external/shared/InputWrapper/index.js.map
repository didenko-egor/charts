{"version":3,"file":"index.js","sources":["../../../../../shared/InputWrapper/index.tsx"],"sourcesContent":["// TODO написать тесты https://jira.corp.tass.ru/browse/TNA-471\nimport React, {\n  CSSProperties,\n  createElement,\n  ReactNode,\n  useContext,\n  useMemo\n} from 'react';\nimport classNames, { Argument } from 'classnames/bind';\nimport { ComponentStyles } from 'shared/types/common';\nimport type { BaseInputSize } from 'shared/BaseInput/types';\nimport { InputSize } from 'core/types/input';\n\nimport { InputWrapperContext } from './InputWrapperContext';\n\nexport const DEFAULT_MIN_WIDTH = 300;\n\nexport type LabelPosition = 'center' | 'start';\n\ninterface InnerInputWrapperProps {\n  /** Подсказка или сообщения об ошибке */\n  hint: ReactNode;\n\n  /** Стили обертки инпута */\n  styles: ComponentStyles;\n\n  /** Стили для контейнера обертки куда вставляются поля ввода */\n  containerClassNames: string;\n\n  /** функция для работы с стилями через classnames и мемонизарованая  */\n  cn: (...args: Argument[]) => string;\n\n  /** Дочерние элементы */\n  children?: ReactNode;\n\n  /** Отключает по дефолту заданную минимальную ширину инпута */\n  withoutDefaultMinWidth?: boolean;\n\n  /** Флаг для показа ошибки или подсказки */\n  showHint?: boolean;\n\n  /** Флаг отображения лейбла */\n  labelAside?: boolean;\n\n  /** Позиционирование ярлыка, когда он расположен сбоку */\n  labelAsideSelfAlign?: LabelPosition;\n\n  /** Флаг disabled */\n  disabled?: boolean;\n\n  /** Флаг filled */\n  filled?: boolean;\n\n  /** ID для тестирования */\n  dataTestId?: string;\n\n  /** Флаг состояния ошибки */\n  isError?: boolean;\n\n  /** Размер компонента */\n  size?: BaseInputSize;\n\n  /** Ширина label */\n  labelWidth?: number;\n\n  /** Флаг, обертка без label, hint и без слижения за минимальной шириной */\n  dummyWrapper?: boolean;\n\n  /** Связь элемента label с input или textarea по id. При клике на label фокусируется на input или textarea */\n  htmlFor?: string;\n\n  /** Лейбл поля ввода */\n  label?: ReactNode;\n\n  /** Нестандартная минимальная ширина блока когда лейбл сбоку */\n  asideModeMinWidth?: CSSProperties['minWidth'];\n\n  /** Флаг, применить траурное оформление */\n  isMourning?: boolean;\n}\n\nfunction InnerInputWrapper({\n  label,\n  size,\n  labelAside,\n  labelAsideSelfAlign,\n  showHint,\n  hint,\n  isError,\n  disabled,\n  filled,\n  dataTestId,\n  children,\n  labelWidth,\n  withoutDefaultMinWidth,\n  htmlFor,\n  containerClassNames,\n  asideModeMinWidth = DEFAULT_MIN_WIDTH,\n  cn\n}: InnerInputWrapperProps): JSX.Element {\n  // TODO: избавиться от 'as' и разобраться с зоопарком типов size https://jira.corp.tass.ru/browse/TNA-763\n  const contextValue = useMemo(() => ({ size: size as InputSize }), [size]);\n\n  let wrapperStyle: CSSProperties | undefined;\n  if (withoutDefaultMinWidth) {\n    wrapperStyle = { minWidth: '100%' };\n  } else if (labelAside) {\n    wrapperStyle = { minWidth: asideModeMinWidth };\n  }\n\n  const wrapperClassNames = useMemo(() => {\n    if (cn) {\n      return (cn('wrapper', {\n        'wrapper--error': isError,\n        'wrapper--disabled': disabled,\n        'wrapper--label_aside': labelAside,\n        'wrapper--filled': filled\n      }));\n    }\n\n    return '';\n  }, [cn, isError, disabled, labelAside, filled]);\n\n  const labelClassNames = useMemo(() => {\n    if (cn) {\n      return cn('label', {\n        'label--small': size === 'small',\n        'label--aside': labelAside,\n        'label--aside_small': labelAside && size === 'small',\n        'label--aside_start': labelAsideSelfAlign === 'start',\n        'label--disabled': disabled\n      });\n    }\n\n    return '';\n  }, [\n    cn,\n    size,\n    labelAside,\n    labelAsideSelfAlign,\n    disabled\n  ]);\n\n  return (\n    <div\n      className={ wrapperClassNames }\n      data-test-id={ dataTestId }\n      style={ wrapperStyle }\n    >\n      { label && (\n        <label\n          style={ { width: labelWidth || undefined } }\n          className={ labelClassNames }\n          htmlFor={ htmlFor }\n        >\n          { label }\n        </label>\n      ) }\n      <div className={ containerClassNames }>\n        <InputWrapperContext.Provider value={ contextValue }>\n          { children }\n        </InputWrapperContext.Provider>\n        { showHint && (\n          <div className={ cn('hint') }>\n            { hint }\n          </div>\n        ) }\n      </div>\n    </div>\n  );\n}\n\ntype InputWrapperProps = Omit<InnerInputWrapperProps, 'containerClassNames' | 'cn'>;\n\nfunction InputWrapper(props: InputWrapperProps): JSX.Element {\n  const {\n    styles,\n    children,\n    dummyWrapper,\n    isError,\n    disabled,\n    isMourning\n  } = props;\n\n  const cn = useMemo(() => classNames.bind(styles), [styles]);\n\n  const containerClassNames = useMemo(() => cn('container', {\n    'container--error': isError,\n    'container--disabled': disabled,\n    'container--mourning': isMourning\n  }), [\n    cn,\n    disabled,\n    isError,\n    isMourning\n  ]);\n\n  const parentWrapperContext = useContext(InputWrapperContext);\n\n  return (parentWrapperContext || dummyWrapper)\n    ? <div className={ containerClassNames }>{ children }</div>\n    : createElement(InnerInputWrapper, {\n      ...props,\n      containerClassNames,\n      cn\n    });\n}\n\nexport { InputWrapper };\n"],"names":["DEFAULT_MIN_WIDTH","InnerInputWrapper","_a","wrapperStyle","label","size","labelAside","labelAsideSelfAlign","showHint","hint","isError","disabled","filled","dataTestId","children","labelWidth","withoutDefaultMinWidth","htmlFor","containerClassNames","_b","asideModeMinWidth","cn","contextValue","useMemo","minWidth","wrapperClassNames","labelClassNames","React","className","style","width","undefined","InputWrapperContext","Provider","value","InputWrapper","props","styles","dummyWrapper","isMourning","classNames","bind","useContext","createElement"],"mappings":"yMAeaA,EAAoB,IAkEjC,SAASC,EAAkBC,OAsBrBC,EArBJC,UACAC,SACAC,eACAC,wBACAC,aACAC,SACAC,YACAC,aACAC,WACAC,eACAC,aACAC,eACAC,2BACAC,YACAC,wBACAC,sBAAAC,aAlF+B,MAmF/BC,OAGMC,EAAeC,GAAQ,WAAM,OAAGlB,KAAMA,KAAsB,CAACA,IAG/DW,EACFb,EAAe,CAAEqB,SAAU,QAClBlB,IACTH,EAAe,CAAEqB,SAAUJ,IAG7B,IAAMK,EAAoBF,GAAQ,WAChC,OAAIF,EACMA,EAAG,UAAW,CACpB,iBAAkBX,EAClB,oBAAqBC,EACrB,uBAAwBL,EACxB,kBAAmBM,IAIhB,KACN,CAACS,EAAIX,EAASC,EAAUL,EAAYM,IAEjCc,EAAkBH,GAAQ,WAC9B,OAAIF,EACKA,EAAG,QAAS,CACjB,eAAyB,UAAThB,EAChB,eAAgBC,EAChB,qBAAsBA,GAAuB,UAATD,EACpC,qBAA8C,UAAxBE,EACtB,kBAAmBI,IAIhB,KACN,CACDU,EACAhB,EACAC,EACAC,EACAI,IAGF,OACEgB,uBACEC,UAAYH,iBACGZ,EACfgB,MAAQ1B,GAENC,GACAuB,yBACEE,MAAQ,CAAEC,MAAOf,QAAcgB,GAC/BH,UAAYF,EACZT,QAAUA,GAERb,GAGNuB,uBAAKC,UAAYV,GACfS,gBAACK,EAAoBC,UAASC,MAAQZ,GAClCR,GAEFN,GACAmB,uBAAKC,UAAYP,EAAG,SAChBZ,IAMd,CAIA,SAAS0B,EAAaC,GAElB,IAAAC,EAMED,SALFtB,EAKEsB,WAJFE,EAIEF,eAHF1B,EAGE0B,UAFFzB,EAEEyB,WADFG,EACEH,aAEEf,EAAKE,GAAQ,WAAM,OAAAiB,EAAWC,KAAKJ,KAAS,CAACA,IAE7CnB,EAAsBK,GAAQ,WAAM,OAAAF,EAAG,YAAa,CACxD,mBAAoBX,EACpB,sBAAuBC,EACvB,sBAAuB4B,MACrB,CACFlB,EACAV,EACAD,EACA6B,IAKF,OAF6BG,EAAWV,IAERM,EAC5BX,uBAAKC,UAAYV,GAAwBJ,GACzC6B,EAAc1C,SACXmC,IACHlB,sBACAG,OAEN"}