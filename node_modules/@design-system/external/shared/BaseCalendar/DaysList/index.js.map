{"version":3,"file":"index.js","sources":["../../../../../../shared/BaseCalendar/DaysList/index.tsx"],"sourcesContent":["import React, {\n  ReactNode,\n  useEffect,\n  useMemo,\n  useState\n} from 'react';\nimport VirtualList, { ItemInfo } from 'react-tiny-virtual-list';\nimport {\n  DaysListProps\n} from 'shared/types/calendar';\n\nimport {\n  getMonthHeight,\n  memoize\n} from '../utils';\nimport Month from './Month';\n\nimport styles from './styles.scss';\n\nconst AVERAGE_ROWS_PER_MONTH = 5;\n\nconst DaysList: React.FC<DaysListProps> = ({\n  activeIndex,\n  height,\n  locale,\n  maxDate,\n  minDate,\n  months,\n  onMonthChange,\n  onSelect,\n  range,\n  rowHeight,\n  selected,\n  today\n}) => {\n  const estimatedItemSize = useMemo(() => rowHeight * AVERAGE_ROWS_PER_MONTH, [rowHeight]);\n\n  const [virtualListIndex, setVirtualListIndex] = useState<number | undefined>(undefined);\n\n  useEffect(() => {\n    setVirtualListIndex(activeIndex);\n    setTimeout(() => {\n      setVirtualListIndex(undefined);\n    }, 100);\n  }, [activeIndex]);\n\n  const renderMonth = ({ index, style }: ItemInfo): ReactNode => {\n    const { month, year } = months[index];\n    const key = `${ year }:${ month }`;\n    const { date, rows } = memoize(key, locale);\n\n    return (\n      <Month\n        key={ key }\n        style={ style }\n        locale={ locale }\n        month={ month }\n        monthDate={ date }\n        maxDate={ maxDate }\n        minDate={ minDate }\n        onMonthChange={ onMonthChange }\n        onSelect={ onSelect }\n        range={ range }\n        rows={ rows }\n        rowHeight={ rowHeight }\n        selected={ selected }\n        today={ today }\n        year={ year }\n      />\n    );\n  };\n\n  const getItemSize = (index: number): number => getMonthHeight(index, months, locale, rowHeight);\n\n  return (\n    <VirtualList\n      height={ height }\n      itemCount={ months.length }\n      itemSize={ getItemSize }\n      estimatedItemSize={ estimatedItemSize }\n      renderItem={ renderMonth }\n      scrollToIndex={ virtualListIndex }\n      className={ styles.dayslist }\n    />\n  );\n};\n\nexport default DaysList;\n"],"names":["DaysList","_a","activeIndex","height","locale","maxDate","minDate","months","onMonthChange","onSelect","range","rowHeight","selected","today","estimatedItemSize","useMemo","_b","useState","undefined","virtualListIndex","setVirtualListIndex","useEffect","setTimeout","React","VirtualList","itemCount","length","itemSize","index","getMonthHeight","renderItem","style","month","year","key","_c","memoize","date","rows","Month","monthDate","scrollToIndex","className","styles","dayslist"],"mappings":"uOAmBA,IAEMA,EAAoC,SAACC,OACzCC,gBACAC,WACAC,WACAC,YACAC,YACAC,WACAC,kBACAC,aACAC,UACAC,cACAC,aACAC,UAEMC,EAAoBC,GAAQ,WAAM,OAhBX,EAgBWJ,IAAoC,CAACA,IAEvEK,EAA0CC,OAA6BC,GAAtEC,OAAkBC,OAEzBC,GAAU,WACRD,EAAoBlB,GACpBoB,YAAW,WACTF,OAAoBF,KACnB,OACF,CAAChB,IA8BJ,OACEqB,gBAACC,GACCrB,OAASA,EACTsB,UAAYlB,EAAOmB,OACnBC,SANgB,SAACC,GAA0B,OAAAC,EAAeD,EAAOrB,EAAQH,EAAQO,IAOjFG,kBAAoBA,EACpBgB,WAlCgB,SAAC7B,OAAE2B,UAAOG,UACtBf,EAAkBT,EAAOqB,GAAvBI,UAAOC,SACTC,EAAUD,MAAUD,EACpBG,EAAiBC,EAAQF,EAAK9B,GAA5BiC,SAAMC,SAEd,OACEf,gBAACgB,GACCL,IAAMA,EACNH,MAAQA,EACR3B,OAASA,EACT4B,MAAQA,EACRQ,UAAYH,EACZhC,QAAUA,EACVC,QAAUA,EACVE,cAAgBA,EAChBC,SAAWA,EACXC,MAAQA,EACR4B,KAAOA,EACP3B,UAAYA,EACZC,SAAWA,EACXC,MAAQA,EACRoB,KAAOA,KAcTQ,cAAgBtB,EAChBuB,UAAYC,EAAOC,UAGzB"}