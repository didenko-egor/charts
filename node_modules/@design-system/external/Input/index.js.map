{"version":3,"file":"index.js","sources":["../../src/Input/index.tsx"],"sourcesContent":["import 'focus-visible';\nimport React, { useMemo } from 'react';\nimport { ShareableInputProps } from 'shared/types/input';\nimport { DEFAULT_PROPS as BASE_INPUT_DEFAULT_PROPS, BaseInput } from 'shared/BaseInput';\nimport { InputHint, InputLabel } from 'external/shared';\nimport type { CaptionFontColor } from 'external/src/typography';\n\nimport wrapperStyles from 'shared/InputWrapper/externalStyles.scss';\nimport iconsStyles from 'shared/BaseInput/WithIcons/externalStyles.scss';\nimport styles from 'shared/BaseInput/externalStyles.scss';\n\nimport { InputLabelColor, InputSize } from './types';\n\nexport interface InputProps extends ShareableInputProps {\n  /** Размер поля ввода */\n  size?: InputSize;\n\n  /** Текст сообщения об ошибке / подсказки */\n  hintMessage?: string;\n\n  /** Ярлык поля ввода */\n  label?: string;\n\n  /** Цвет ярлыка */\n  labelColor?: InputLabelColor;\n\n  /** Цвет подсказки (отобразится если нет сообщения об ошибке и Input не disabled) */\n  hintColor?: CaptionFontColor;\n\n  /** Ширина label */\n  labelWidth?: number;\n\n  /** Флаг, отображение в траурном режиме */\n  isMourning?: boolean;\n}\n\nconst Input: React.FC<InputProps> = ({\n  id,\n  size = 'small',\n  label,\n  labelColor: selectedLabelColor = 'primary',\n  disabled,\n  isError,\n  dataTestHintId,\n  hintMessage,\n  hintColor,\n  showHint,\n  isMourning = BASE_INPUT_DEFAULT_PROPS.isMourning,\n  ...rest\n}) => {\n  const labelColor = useMemo(() => (disabled ? 'secondary' : selectedLabelColor), [disabled, selectedLabelColor]);\n\n  const renderedLabel = label\n    ? (\n      <InputLabel\n        htmlFor={ id }\n        size={ size }\n        text={ label }\n        color={ labelColor }\n      />\n    )\n    : null;\n\n  const renderedHint = showHint\n    ? (\n      <InputHint\n        disabled={ disabled }\n        isError={ isError }\n        dataTestId={ dataTestHintId }\n        hintMessage={ hintMessage }\n        hintColor={ hintColor }\n      />\n    )\n    : null;\n\n  return (\n    <BaseInput\n      { ...rest }\n      id={ id }\n      size={ size }\n      disabled={ disabled }\n      isError={ isError }\n      showHint={ showHint }\n      hint={ renderedHint }\n      label={ renderedLabel }\n      styles={ styles }\n      wrapperStyles={ wrapperStyles }\n      iconsStyles={ iconsStyles }\n      isMourning={ isMourning }\n    />\n  );\n};\n\nInput.defaultProps = {\n  ...BASE_INPUT_DEFAULT_PROPS\n} as InputProps;\n\nexport { Input };\n"],"names":["Input","_a","id","_b","size","label","_c","selectedLabelColor","disabled","isError","dataTestHintId","hintMessage","hintColor","showHint","_d","isMourning","BASE_INPUT_DEFAULT_PROPS","rest","labelColor","useMemo","renderedLabel","React","InputLabel","htmlFor","text","color","renderedHint","InputHint","dataTestId","BaseInput","hint","styles","wrapperStyles","iconsStyles","defaultProps","__assign"],"mappings":"yhBAoCMA,EAA8B,SAACC,GACnC,IAAAC,OACAC,SAAAC,aAAO,UACPC,UACAC,eAAYC,aAAqB,YACjCC,aACAC,YACAC,mBACAC,gBACAC,cACAC,aACAC,eAAAC,aAAaC,EAAyBD,aACnCE,MAZgC,4HAc7BC,EAAaC,GAAQ,WAAM,OAACX,EAAW,YAAcD,IAAqB,CAACC,EAAUD,IAErFa,EAAgBf,EAElBgB,gBAACC,GACCC,QAAUrB,EACVE,KAAOA,EACPoB,KAAOnB,EACPoB,MAAQP,IAGV,KAEEQ,EAAeb,EAEjBQ,gBAACM,GACCnB,SAAWA,EACXC,QAAUA,EACVmB,WAAalB,EACbC,YAAcA,EACdC,UAAYA,IAGd,KAEJ,OACES,gBAACQ,OACMZ,GACLf,GAAKA,EACLE,KAAOA,EACPI,SAAWA,EACXC,QAAUA,EACVI,SAAWA,EACXiB,KAAOJ,EACPrB,MAAQe,EACRW,OAASA,EACTC,cAAgBA,EAChBC,YAAcA,EACdlB,WAAaA,IAGnB,EAEAf,EAAMkC,aAAeC,KAChBnB"}