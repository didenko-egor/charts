{"version":3,"file":"Item.js","sources":["../../../src/SelectDropDown/SelectList/Item.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport classNames from 'classnames/bind';\nimport { IconCheck } from 'external/src/icons';\nimport 'focus-visible';\n\nimport { OnClickItem } from '../sharedTypes';\n\nimport styles from './styles.scss';\n\nconst cn = classNames.bind(styles);\n\nexport interface ItemProps {\n  /** Значение, передаваемое в обработчики */\n  value: string | null;\n\n  /** Текст, выводимый пользователю */\n  label: string;\n\n  /** Неактивный */\n  disabled?: boolean;\n\n  /** Элемент выбран */\n  isActive: boolean;\n\n  /** Обработчик клика по элементу */\n  onClick: OnClickItem;\n\n  /** Отображать иконку */\n  withIcon: boolean;\n\n  /** Резервировать слева область под чекбокс, если его нет */\n  useLeftKeeper?: boolean;\n\n  /** Резервировать область справа (для перекрытия кнопкой закрытия) */\n  useRightKeeper?: boolean;\n\n  /** Флаг траурного режима */\n  isMourning?: boolean;\n}\n\nconst Item: React.FC<ItemProps> = ({\n  value,\n  label,\n  disabled,\n  isActive,\n  withIcon = true,\n  onClick,\n  useLeftKeeper,\n  useRightKeeper,\n  isMourning\n}) => {\n  const onClickItem = useCallback(() => { onClick(value); }, [value, onClick]);\n  const iconClassName = cn('item__icon', { 'item__icon--active': isActive, 'item__icon--disabled': disabled });\n  const labelClassName = cn('item__label');\n  const itemClassName = cn('item', {\n    'item--active': isActive,\n    'item--disabled': disabled,\n    'item--left_keeper': useLeftKeeper && !withIcon,\n    'item--right_keeper': useRightKeeper,\n    'item--mourning': isMourning\n  });\n\n  return (\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    <div\n      className={ itemClassName }\n      onClick={ disabled ? undefined : onClickItem }\n      tabIndex={ disabled ? -1 : 0 } // eslint-disable-line jsx-a11y/no-noninteractive-tabindex\n    >\n      { withIcon && (\n        <div className={ iconClassName }>\n          <IconCheck />\n        </div>\n      ) }\n      <div className={ labelClassName }>\n        { label }\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Item);\n"],"names":["cn","classNames","bind","styles","React","memo","_a","value","label","disabled","isActive","_b","withIcon","onClick","useLeftKeeper","useRightKeeper","isMourning","onClickItem","useCallback","iconClassName","labelClassName","itemClassName","className","undefined","tabIndex","IconCheck"],"mappings":"oLASA,IAAMA,EAAKC,EAAWC,KAAKC,KAwEZC,EAAMC,MAzCa,SAACC,OACjCC,UACAC,UACAC,aACAC,aACAC,aAAAC,gBACAC,YACAC,kBACAC,mBACAC,eAEMC,EAAcC,GAAY,WAAQL,EAAQN,KAAW,CAACA,EAAOM,IAC7DM,EAAgBnB,EAAG,aAAc,CAAE,qBAAsBU,EAAU,uBAAwBD,IAC3FW,EAAiBpB,EAAG,eACpBqB,EAAgBrB,EAAG,OAAQ,CAC/B,eAAgBU,EAChB,iBAAkBD,EAClB,oBAAqBK,IAAkBF,EACvC,qBAAsBG,EACtB,iBAAkBC,IAGpB,OAEEZ,uBACEkB,UAAYD,EACZR,QAAUJ,OAAWc,EAAYN,EACjCO,SAAWf,GAAY,EAAI,GAEzBG,GACAR,uBAAKkB,UAAYH,GACff,gBAACqB,SAGLrB,uBAAKkB,UAAYF,GACbZ,GAIV"}