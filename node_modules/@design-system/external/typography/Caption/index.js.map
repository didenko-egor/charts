{"version":3,"file":"index.js","sources":["../../../src/typography/Caption/index.tsx"],"sourcesContent":["import React from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\nimport { FontColor } from 'external/types/common';\nimport {\n  withLinkMemo,\n  LinkWrapperProps,\n  DEFAULT_PROPS as DEFAULT_PROPS_BY_LINK\n} from 'external/src/Link';\nimport { getStoryComponent } from 'shared/storyHelper';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\nexport type CaptionFontWeight =\n  'black'\n  | 'bold'\n  | 'semibold'\n  | 'medium';\n\nexport type CaptionSize =\n  'extra_large'\n  | 'large'\n  | 'default'\n  | 'small';\n\n// Заготовка на случай расширения набора цветов для отдельных компонентов\nexport type CaptionFontColor = FontColor;\n\nexport interface CaptionPropsBase {\n  /** Размер подписи */\n  size?: CaptionSize;\n\n  /** Насыщенность шрифта */\n  fontWeight?: CaptionFontWeight;\n\n  /** Цвет шрифта */\n  color?: CaptionFontColor;\n\n  /** ID для тестирования */\n  dataTestId?: string;\n\n  /** Дочерние элементы */\n  children: React.ReactNode;\n\n  /** Флаг для отрисовки строчного представления */\n  inline?: boolean;\n\n  /** Флаг для наследования цвета текста от родителя */\n  inheritColor?: boolean;\n}\n\nexport const DEFAULT_PROPS = {\n  size: 'default',\n  color: 'primary',\n  fontWeight: 'medium',\n  inline: false,\n  inheritColor: false\n};\n\nconst Caption: React.FC<CaptionPropsBase> = ({\n  size = DEFAULT_PROPS.size,\n  fontWeight = DEFAULT_PROPS.fontWeight,\n  color = DEFAULT_PROPS.color,\n  inline = DEFAULT_PROPS.inline,\n  inheritColor = DEFAULT_PROPS.inheritColor,\n  dataTestId,\n  children\n}) => {\n  const captionClasses = cd(\n    'caption',\n    {\n      inline,\n      [`size_${ size }`]: true,\n      [`font_weight_${ fontWeight }`]: true,\n      [`color_${ color }`]: !inheritColor\n    }\n  );\n\n  return (\n    <div data-test-id={ dataTestId } className={ captionClasses }>\n      { children }\n    </div>\n  );\n};\n\nexport const StoryComponent = getStoryComponent<CaptionPropsBase, LinkWrapperProps>(\n  DEFAULT_PROPS as CaptionPropsBase,\n  DEFAULT_PROPS_BY_LINK as LinkWrapperProps\n);\n\nexport default withLinkMemo(Caption);\n\nexport type CaptionProps = CaptionPropsBase & LinkWrapperProps;\n"],"names":["cd","cssDecorator","styles","DEFAULT_PROPS","size","color","fontWeight","inline","inheritColor","getStoryComponent","DEFAULT_PROPS_BY_LINK","withLinkMemo","_a","_c","_d","_e","_f","_g","dataTestId","children","captionClasses","_b","React","className"],"mappings":"6RAYA,IAAMA,EAAKC,EAAaC,GAwCXC,EAAgB,CAC3BC,KAAM,UACNC,MAAO,UACPC,WAAY,SACZC,QAAQ,EACRC,cAAc,GA6BcC,EAC5BN,EACAO,GAGF,MAAeC,GA/B6B,SAACC,SAC3CC,SAAAT,aAAOD,EAAcC,OACrBU,eAAAR,aAAaH,EAAcG,aAC3BS,UAAAV,aAAQF,EAAcE,QACtBW,WAAAT,aAASJ,EAAcI,SACvBU,iBAAAT,aAAeL,EAAcK,eAC7BU,eACAC,aAEMC,EAAiBpB,EACrB,eAEEO,WACC,QAASH,IAAU,EACpBiB,EAAC,eAAgBf,IAAgB,EACjCe,EAAC,SAAUhB,IAAYG,MAI3B,OACEc,sCAAoBJ,EAAaK,UAAYH,GACzCD,EAGR"}