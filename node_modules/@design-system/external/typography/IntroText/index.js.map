{"version":3,"file":"index.js","sources":["../../../src/typography/IntroText/index.tsx"],"sourcesContent":["import React from 'react';\nimport { cssDecorator } from '@front-toolkit/utils';\nimport { FontColor } from 'external/types/common';\n\nimport styles from './styles.scss';\n\nconst cd = cssDecorator(styles);\n\n// Заготовка на случай расширения набора цветов для отдельных компонентов\nexport type IntroTextFontColor = FontColor;\n\nexport interface IntroTextProps {\n  /** Цвет шрифта */\n  color?: IntroTextFontColor;\n\n  /** ID для тестирования */\n  dataTestId?: string;\n\n  /** Дочерние элементы */\n  children: React.ReactNode;\n\n  /** Флаг для наследования цвета текста от родителя */\n  inheritColor?: boolean;\n}\n\nconst IntroText: React.FC<IntroTextProps> = ({\n  color = 'primary',\n  dataTestId,\n  children,\n  inheritColor = false\n}) => {\n  const introTextClasses = cd('intro_text', { [`color_${ color }`]: !inheritColor });\n\n  return (\n    <div data-test-id={ dataTestId } className={ introTextClasses }>\n      { children }\n    </div>\n  );\n};\n\nconst MemoizedIntroText = React.memo(IntroText);\n\nexport { IntroText };\n\nexport default MemoizedIntroText;\n"],"names":["cd","cssDecorator","styles","IntroText","_a","_c","color","dataTestId","children","_d","introTextClasses","React","className","MemoizedIntroText","memo"],"mappings":"yGAMA,IAAMA,EAAKC,EAAaC,GAmBlBC,EAAsC,SAACC,SAC3CC,UAAAC,aAAQ,YACRC,eACAC,aACAC,iBAEMC,EAAmBV,EAAG,qBAAiB,SAAUM,wBAEvD,OACEK,sCAAoBJ,EAAaK,UAAYF,GACzCF,EAGR,EAEMK,EAAoBF,EAAMG,KAAKX"}