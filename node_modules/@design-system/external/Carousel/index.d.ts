/// <reference types="react" />
import React from 'react';
import { CustomLinkType } from "../customLink-ce210f25";
import { BuiltInTheme, CarouselColorTheme } from "./types";
interface CarouselProps {
    /** Заголовок карусели */
    title: string;
    /** Массив компонентов для размещения в слайдах */
    content: React.ReactNode[];
    /** Палитра цветов UI-элеметнов карусели */
    theme: BuiltInTheme | CarouselColorTheme;
    /** Ссылка для перехода по клику на заголовок */
    href?: string;
    /** Растягивать содержимое по вертикали, так чтобы оно заходило под заголовок */
    fillHeader?: boolean;
    /** Флаг инверсии цвета заголовка */
    invertTitle?: boolean;
    /** Флаг инверсии цвета UI-элеметнов */
    invertControls?: boolean;
    /** Флаг отображения уменьшенных (мобильных) слайдов */
    smallSlides?: boolean;
    /** Флаг переключения режима карусели (компактный: 2 слайда, полный: 4 слайда) */
    twoSlides?: boolean;
    /** id для тестирования */
    dataTestId?: string;
    /** Пользовательский компонент ссылки заголовка.
     * Используется вместо встроенного для дополнительной стилизации и оборачивания в next/link
     * */
    customLink?: CustomLinkType;
    /** Флаг траурного режима */
    isMourning?: boolean;
    /** Коллбэк, вызываемый при прокрутке карусели.
     * В качестве аргумента передаются индекс первого и последнего слайда в текущем блоке
    */
    onChange?: (firstIndex: number, lastIndex: number) => void;
    /** Коллбэк, вызываемый при клике на кнопки прокрутки карусели */
    onControlsClick?: () => void;
    /** Коллбэк, вызываемый при клике на заголовок карусели */
    onTitleClick?: (url?: string, titleText?: string) => void;
}
declare const Carousel: React.FC<CarouselProps>;
export { CarouselProps, Carousel };
